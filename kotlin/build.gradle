/*
 * Copyright 2017 Square Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  ext.versions = [
      'targetSdk': 29,
  ]

  rootProject.ext.defaultAndroidConfig = {
    compileSdkVersion versions.targetSdk
    buildToolsVersion '29.0.0'

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
      minSdkVersion 21
      targetSdkVersion versions.targetSdk
      versionCode 1
      versionName "1.0"
    }
  }

  ext.deps = [
      'android_gradle_plugin': "com.android.tools.build:gradle:3.5.2",

      'androidx': [
          'activity': "androidx.activity:activity-ktx:1.0.0",
          'annotations': "androidx.annotation:annotation:1.1.0",
          'appcompat': "androidx.appcompat:appcompat:1.1.0",
          'constraint_layout': "androidx.constraintlayout:constraintlayout:1.1.3",
          'lifecycle': [
              'extensions': "androidx.lifecycle:lifecycle-extensions:2.1.0",
              'reactivestreams': "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.1.0",
          ],
          // Note that we're not using the actual androidx material dep yet, it's still alpha.
          'material': "com.google.android.material:material:1.0.0",
          'recyclerview': "androidx.recyclerview:recyclerview:1.0.0",
          // Note that we are *not* using lifecycle-viewmodel-savedstate, which at this
          // writing is still in beta and still fixing bad bugs. Probably we'll never bother to,
          // it doesn't really add value for us.
          'savedstate': "androidx.savedstate:savedstate:1.0.0",
          'transition': "androidx.transition:transition:1.2.0",
      ],

      'moshi': "com.squareup.moshi:moshi:1.9.2",
      'rxandroid2': "io.reactivex.rxjava2:rxandroid:2.1.1",
      'timber': "com.jakewharton.timber:timber:4.7.1",

      'kotlin': [
          'gradlePlugin': "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.60",
          'stdLib': [
              'common': "org.jetbrains.kotlin:kotlin-stdlib-common",
              'jdk8': "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
              'jdk7': "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
              'jdk6': "org.jetbrains.kotlin:kotlin-stdlib"
          ],
          'coroutines': [
              'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2",
              'core': "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2",
              'rx2': "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.3.2",
              'test': "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"
          ],
          'moshi': "com.squareup.moshi:moshi-kotlin:1.9.1",
          'reflect': "org.jetbrains.kotlin:kotlin-reflect:1.3.60",
          'test': [
              'common': "org.jetbrains.kotlin:kotlin-test-common",
              'annotations': "org.jetbrains.kotlin:kotlin-test-annotations-common",
              'jdk': "org.jetbrains.kotlin:kotlin-test-junit",
              'mockito': "com.nhaarman:mockito-kotlin-kt1.1:1.6.0"
          ]
      ],
      'dokkaAndroid': "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18",
      'dokka': "org.jetbrains.dokka:dokka-gradle-plugin:0.9.18",
      'jmh': [
          'gradlePlugin': "me.champeau.gradle:jmh-gradle-plugin:0.5.0-rc-2",
          'core': "org.openjdk.jmh:jmh-core:1.22",
          'generator': "org.openjdk.jmh:jmh-generator-annprocess:1.22",
      ],
      // Source of "API 'variant.getJavaCompile()' is obsolete" warning, fixed in upcoming 0.9.0.
      // See https://github.com/vanniktech/gradle-maven-publish-plugin/issues/67.
      'mavenPublish': "com.vanniktech:gradle-maven-publish-plugin:0.8.0",
      'ktlint': "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:5.1.0",
      'lanterna': "com.googlecode.lanterna:lanterna:3.0.1",
      'detekt': "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.1",
      'okio': "com.squareup.okio:okio:2.4.1",
      'rxjava2':[
          'rxjava2': "io.reactivex.rxjava2:rxjava:2.2.14",
          'extensions': "com.github.akarnokd:rxjava2-extensions:0.20.10"
      ],
      'annotations': [
          'intellij': "org.jetbrains:annotations:18.0.0",
      ],
      'test': [
          'androidx': [
              'espresso': [
                  'core': "androidx.test.espresso:espresso-core:3.2.0",
                  'idlingResource': "androidx.test.espresso:espresso-idling-resource:3.2.0",
                  'intents': "androidx.test.espresso:espresso-intents:3.2.0",
              ],
              'junitExt': "androidx.test.ext:junit:1.1.1",
              'runner': "androidx.test:runner:1.2.0",
              'truthExt': "androidx.test.ext:truth:1.2.0",
          ],
          'hamcrestCore': "org.hamcrest:hamcrest-core:2.2",
          'junit': "junit:junit:4.12",
          'mockito': "org.mockito:mockito-core:3.1.0",
          'truth': "com.google.truth:truth:1.0",
      ]
  ]

  dependencies {
    classpath deps.android_gradle_plugin
    classpath deps.detekt
    classpath deps.dokka
    classpath deps.dokkaAndroid
    classpath deps.jmh.gradlePlugin
    classpath deps.kotlin.gradlePlugin
    classpath deps.ktlint
    classpath deps.mavenPublish
  }

  repositories {
    mavenCentral()
    gradlePluginPortal()
    google()
  }
}

subprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  apply plugin: "org.jlleitschuh.gradle.ktlint"
  apply plugin: "io.gitlab.arturbosch.detekt"
  afterEvaluate { project ->
    project.tasks.findByName('check')?.dependsOn 'detekt'

    project.configurations.configureEach {
      // There could be transitive dependencies in tests with a lower version. This could cause
      // problems with a newer Kotlin version that we use.
      resolutionStrategy.force deps.kotlin.reflect
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      kotlinOptions.allWarningsAsErrors = true

      // Don't panic, all this does is allow us to use the @Experimental meta-annotation.
      // to define our own experiments.
      freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
    }
  }
}
