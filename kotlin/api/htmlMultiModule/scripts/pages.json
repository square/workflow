[{"name":"CONFLATE_STALE_RENDERINGS","description":"com.squareup.workflow1.RuntimeConfigOptions.CONFLATE_STALE_RENDERINGS","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/-c-o-n-f-l-a-t-e_-s-t-a-l-e_-r-e-n-d-e-r-i-n-g-s/index.html","searchKeys":["CONFLATE_STALE_RENDERINGS","CONFLATE_STALE_RENDERINGS","com.squareup.workflow1.RuntimeConfigOptions.CONFLATE_STALE_RENDERINGS"]},{"name":"RENDER_ONLY_WHEN_STATE_CHANGES","description":"com.squareup.workflow1.RuntimeConfigOptions.RENDER_ONLY_WHEN_STATE_CHANGES","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/-r-e-n-d-e-r_-o-n-l-y_-w-h-e-n_-s-t-a-t-e_-c-h-a-n-g-e-s/index.html","searchKeys":["RENDER_ONLY_WHEN_STATE_CHANGES","RENDER_ONLY_WHEN_STATE_CHANGES","com.squareup.workflow1.RuntimeConfigOptions.RENDER_ONLY_WHEN_STATE_CHANGES"]},{"name":"abstract val identifier: WorkflowIdentifier","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.identifier","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/identifier.html","searchKeys":["identifier","abstract val identifier: WorkflowIdentifier","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.identifier"]},{"name":"abstract val parent: WorkflowInterceptor.WorkflowSession?","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.parent","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/parent.html","searchKeys":["parent","abstract val parent: WorkflowInterceptor.WorkflowSession?","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.parent"]},{"name":"abstract val renderKey: String","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.renderKey","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/render-key.html","searchKeys":["renderKey","abstract val renderKey: String","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.renderKey"]},{"name":"abstract val runtimeConfig: RuntimeConfig","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.runtimeConfig","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/runtime-config.html","searchKeys":["runtimeConfig","abstract val runtimeConfig: RuntimeConfig","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.runtimeConfig"]},{"name":"abstract val sessionId: Long","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.sessionId","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/session-id.html","searchKeys":["sessionId","abstract val sessionId: Long","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession.sessionId"]},{"name":"annotation class WorkflowExperimentalRuntime","description":"com.squareup.workflow1.WorkflowExperimentalRuntime","location":"workflow-runtime/com.squareup.workflow1/-workflow-experimental-runtime/index.html","searchKeys":["WorkflowExperimentalRuntime","annotation class WorkflowExperimentalRuntime","com.squareup.workflow1.WorkflowExperimentalRuntime"]},{"name":"class RenderingAndSnapshot<out RenderingT>(val rendering: RenderingT, val snapshot: TreeSnapshot)","description":"com.squareup.workflow1.RenderingAndSnapshot","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/index.html","searchKeys":["RenderingAndSnapshot","class RenderingAndSnapshot<out RenderingT>(val rendering: RenderingT, val snapshot: TreeSnapshot)","com.squareup.workflow1.RenderingAndSnapshot"]},{"name":"class TreeSnapshot","description":"com.squareup.workflow1.TreeSnapshot","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/index.html","searchKeys":["TreeSnapshot","class TreeSnapshot","com.squareup.workflow1.TreeSnapshot"]},{"name":"constructor()","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.SimpleLoggingWorkflowInterceptor","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/-simple-logging-workflow-interceptor.html","searchKeys":["SimpleLoggingWorkflowInterceptor","constructor()","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.SimpleLoggingWorkflowInterceptor"]},{"name":"constructor(rendering: RenderingT, snapshot: TreeSnapshot)","description":"com.squareup.workflow1.RenderingAndSnapshot.RenderingAndSnapshot","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/-rendering-and-snapshot.html","searchKeys":["RenderingAndSnapshot","constructor(rendering: RenderingT, snapshot: TreeSnapshot)","com.squareup.workflow1.RenderingAndSnapshot.RenderingAndSnapshot"]},{"name":"enum RuntimeConfigOptions : Enum<RuntimeConfigOptions> ","description":"com.squareup.workflow1.RuntimeConfigOptions","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/index.html","searchKeys":["RuntimeConfigOptions","enum RuntimeConfigOptions : Enum<RuntimeConfigOptions> ","com.squareup.workflow1.RuntimeConfigOptions"]},{"name":"fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, props: StateFlow<PropsT>, initialSnapshot: TreeSnapshot? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit): StateFlow<RenderingAndSnapshot<RenderingT>>","description":"com.squareup.workflow1.renderWorkflowIn","location":"workflow-runtime/com.squareup.workflow1/render-workflow-in.html","searchKeys":["renderWorkflowIn","fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, props: StateFlow<PropsT>, initialSnapshot: TreeSnapshot? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit): StateFlow<RenderingAndSnapshot<RenderingT>>","com.squareup.workflow1.renderWorkflowIn"]},{"name":"fun forRootOnly(rootSnapshot: Snapshot?): TreeSnapshot","description":"com.squareup.workflow1.TreeSnapshot.Companion.forRootOnly","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/-companion/for-root-only.html","searchKeys":["forRootOnly","fun forRootOnly(rootSnapshot: Snapshot?): TreeSnapshot","com.squareup.workflow1.TreeSnapshot.Companion.forRootOnly"]},{"name":"fun parse(bytes: ByteString): TreeSnapshot","description":"com.squareup.workflow1.TreeSnapshot.Companion.parse","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/-companion/parse.html","searchKeys":["parse","fun parse(bytes: ByteString): TreeSnapshot","com.squareup.workflow1.TreeSnapshot.Companion.parse"]},{"name":"fun toByteString(): ByteString","description":"com.squareup.workflow1.TreeSnapshot.toByteString","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/to-byte-string.html","searchKeys":["toByteString","fun toByteString(): ByteString","com.squareup.workflow1.TreeSnapshot.toByteString"]},{"name":"fun valueOf(value: String): RuntimeConfigOptions","description":"com.squareup.workflow1.RuntimeConfigOptions.valueOf","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RuntimeConfigOptions","com.squareup.workflow1.RuntimeConfigOptions.valueOf"]},{"name":"fun values(): Array<RuntimeConfigOptions>","description":"com.squareup.workflow1.RuntimeConfigOptions.values","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/values.html","searchKeys":["values","fun values(): Array<RuntimeConfigOptions>","com.squareup.workflow1.RuntimeConfigOptions.values"]},{"name":"interface RenderContextInterceptor<P, S, O>","description":"com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-render-context-interceptor/index.html","searchKeys":["RenderContextInterceptor","interface RenderContextInterceptor<P, S, O>","com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor"]},{"name":"interface WorkflowInterceptor","description":"com.squareup.workflow1.WorkflowInterceptor","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/index.html","searchKeys":["WorkflowInterceptor","interface WorkflowInterceptor","com.squareup.workflow1.WorkflowInterceptor"]},{"name":"interface WorkflowSession","description":"com.squareup.workflow1.WorkflowInterceptor.WorkflowSession","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-workflow-session/index.html","searchKeys":["WorkflowSession","interface WorkflowSession","com.squareup.workflow1.WorkflowInterceptor.WorkflowSession"]},{"name":"object Companion","description":"com.squareup.workflow1.RuntimeConfigOptions.Companion","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.RuntimeConfigOptions.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.TreeSnapshot.Companion","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.TreeSnapshot.Companion"]},{"name":"object NoopWorkflowInterceptor : WorkflowInterceptor","description":"com.squareup.workflow1.NoopWorkflowInterceptor","location":"workflow-runtime/com.squareup.workflow1/-noop-workflow-interceptor/index.html","searchKeys":["NoopWorkflowInterceptor","object NoopWorkflowInterceptor : WorkflowInterceptor","com.squareup.workflow1.NoopWorkflowInterceptor"]},{"name":"open class SimpleLoggingWorkflowInterceptor : WorkflowInterceptor","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/index.html","searchKeys":["SimpleLoggingWorkflowInterceptor","open class SimpleLoggingWorkflowInterceptor : WorkflowInterceptor","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor"]},{"name":"open fun <CP, CO, CR> onRenderChild(child: Workflow<CP, CO, CR>, childProps: CP, key: String, handler: (CO) -> WorkflowAction<P, S, O>, proceed: (child: Workflow<CP, CO, CR>, childProps: CP, key: String, handler: (CO) -> WorkflowAction<P, S, O>) -> CR): CR","description":"com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onRenderChild","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-render-context-interceptor/on-render-child.html","searchKeys":["onRenderChild","open fun <CP, CO, CR> onRenderChild(child: Workflow<CP, CO, CR>, childProps: CP, key: String, handler: (CO) -> WorkflowAction<P, S, O>, proceed: (child: Workflow<CP, CO, CR>, childProps: CP, key: String, handler: (CO) -> WorkflowAction<P, S, O>) -> CR): CR","com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onRenderChild"]},{"name":"open fun <P, R> onRenderAndSnapshot(renderProps: P, proceed: (P) -> RenderingAndSnapshot<R>, session: WorkflowInterceptor.WorkflowSession): RenderingAndSnapshot<R>","description":"com.squareup.workflow1.WorkflowInterceptor.onRenderAndSnapshot","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-render-and-snapshot.html","searchKeys":["onRenderAndSnapshot","open fun <P, R> onRenderAndSnapshot(renderProps: P, proceed: (P) -> RenderingAndSnapshot<R>, session: WorkflowInterceptor.WorkflowSession): RenderingAndSnapshot<R>","com.squareup.workflow1.WorkflowInterceptor.onRenderAndSnapshot"]},{"name":"open fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","description":"com.squareup.workflow1.WorkflowInterceptor.onRender","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-render.html","searchKeys":["onRender","open fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","com.squareup.workflow1.WorkflowInterceptor.onRender"]},{"name":"open fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.WorkflowInterceptor.onInitialState","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-initial-state.html","searchKeys":["onInitialState","open fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.WorkflowInterceptor.onInitialState"]},{"name":"open fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.WorkflowInterceptor.onPropsChanged","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-props-changed.html","searchKeys":["onPropsChanged","open fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.WorkflowInterceptor.onPropsChanged"]},{"name":"open fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","description":"com.squareup.workflow1.WorkflowInterceptor.onSnapshotState","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-snapshot-state.html","searchKeys":["onSnapshotState","open fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","com.squareup.workflow1.WorkflowInterceptor.onSnapshotState"]},{"name":"open fun onActionSent(action: WorkflowAction<P, S, O>, proceed: (WorkflowAction<P, S, O>) -> Unit)","description":"com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onActionSent","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-render-context-interceptor/on-action-sent.html","searchKeys":["onActionSent","open fun onActionSent(action: WorkflowAction<P, S, O>, proceed: (WorkflowAction<P, S, O>) -> Unit)","com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onActionSent"]},{"name":"open fun onRunningSideEffect(key: String, sideEffect: suspend () -> Unit, proceed: (key: String, sideEffect: suspend () -> Unit) -> Unit)","description":"com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onRunningSideEffect","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/-render-context-interceptor/on-running-side-effect.html","searchKeys":["onRunningSideEffect","open fun onRunningSideEffect(key: String, sideEffect: suspend () -> Unit, proceed: (key: String, sideEffect: suspend () -> Unit) -> Unit)","com.squareup.workflow1.WorkflowInterceptor.RenderContextInterceptor.onRunningSideEffect"]},{"name":"open fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","description":"com.squareup.workflow1.WorkflowInterceptor.onSessionStarted","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-session-started.html","searchKeys":["onSessionStarted","open fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","com.squareup.workflow1.WorkflowInterceptor.onSessionStarted"]},{"name":"open fun onSnapshotStateWithChildren(proceed: () -> TreeSnapshot, session: WorkflowInterceptor.WorkflowSession): TreeSnapshot","description":"com.squareup.workflow1.WorkflowInterceptor.onSnapshotStateWithChildren","location":"workflow-runtime/com.squareup.workflow1/-workflow-interceptor/on-snapshot-state-with-children.html","searchKeys":["onSnapshotStateWithChildren","open fun onSnapshotStateWithChildren(proceed: () -> TreeSnapshot, session: WorkflowInterceptor.WorkflowSession): TreeSnapshot","com.squareup.workflow1.WorkflowInterceptor.onSnapshotStateWithChildren"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.TreeSnapshot.equals","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.TreeSnapshot.equals"]},{"name":"open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onRender","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/on-render.html","searchKeys":["onRender","open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onRender"]},{"name":"open override fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onInitialState","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/on-initial-state.html","searchKeys":["onInitialState","open override fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onInitialState"]},{"name":"open override fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onPropsChanged","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/on-props-changed.html","searchKeys":["onPropsChanged","open override fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onPropsChanged"]},{"name":"open override fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onSnapshotState","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/on-snapshot-state.html","searchKeys":["onSnapshotState","open override fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onSnapshotState"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.TreeSnapshot.hashCode","location":"workflow-runtime/com.squareup.workflow1/-tree-snapshot/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.TreeSnapshot.hashCode"]},{"name":"open override fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","description":"com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onSessionStarted","location":"workflow-runtime/com.squareup.workflow1/-simple-logging-workflow-interceptor/on-session-started.html","searchKeys":["onSessionStarted","open override fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","com.squareup.workflow1.SimpleLoggingWorkflowInterceptor.onSessionStarted"]},{"name":"operator fun component1(): RenderingT","description":"com.squareup.workflow1.RenderingAndSnapshot.component1","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/component1.html","searchKeys":["component1","operator fun component1(): RenderingT","com.squareup.workflow1.RenderingAndSnapshot.component1"]},{"name":"operator fun component2(): TreeSnapshot","description":"com.squareup.workflow1.RenderingAndSnapshot.component2","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/component2.html","searchKeys":["component2","operator fun component2(): TreeSnapshot","com.squareup.workflow1.RenderingAndSnapshot.component2"]},{"name":"typealias RuntimeConfig = Set<RuntimeConfigOptions>","description":"com.squareup.workflow1.RuntimeConfig","location":"workflow-runtime/com.squareup.workflow1/-runtime-config/index.html","searchKeys":["RuntimeConfig","typealias RuntimeConfig = Set<RuntimeConfigOptions>","com.squareup.workflow1.RuntimeConfig"]},{"name":"val DEFAULT_CONFIG: RuntimeConfig","description":"com.squareup.workflow1.RuntimeConfigOptions.Companion.DEFAULT_CONFIG","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/-companion/-d-e-f-a-u-l-t_-c-o-n-f-i-g.html","searchKeys":["DEFAULT_CONFIG","val DEFAULT_CONFIG: RuntimeConfig","com.squareup.workflow1.RuntimeConfigOptions.Companion.DEFAULT_CONFIG"]},{"name":"val RENDER_PER_ACTION: RuntimeConfig","description":"com.squareup.workflow1.RuntimeConfigOptions.Companion.RENDER_PER_ACTION","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/-companion/-r-e-n-d-e-r_-p-e-r_-a-c-t-i-o-n.html","searchKeys":["RENDER_PER_ACTION","val RENDER_PER_ACTION: RuntimeConfig","com.squareup.workflow1.RuntimeConfigOptions.Companion.RENDER_PER_ACTION"]},{"name":"val entries: EnumEntries<RuntimeConfigOptions>","description":"com.squareup.workflow1.RuntimeConfigOptions.entries","location":"workflow-runtime/com.squareup.workflow1/-runtime-config-options/entries.html","searchKeys":["entries","val entries: EnumEntries<RuntimeConfigOptions>","com.squareup.workflow1.RuntimeConfigOptions.entries"]},{"name":"val rendering: RenderingT","description":"com.squareup.workflow1.RenderingAndSnapshot.rendering","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/rendering.html","searchKeys":["rendering","val rendering: RenderingT","com.squareup.workflow1.RenderingAndSnapshot.rendering"]},{"name":"val snapshot: TreeSnapshot","description":"com.squareup.workflow1.RenderingAndSnapshot.snapshot","location":"workflow-runtime/com.squareup.workflow1/-rendering-and-snapshot/snapshot.html","searchKeys":["snapshot","val snapshot: TreeSnapshot","com.squareup.workflow1.RenderingAndSnapshot.snapshot"]},{"name":"abstract class ComposeScreenViewFactory<RenderingT : Screen> : ScreenViewFactory<RenderingT> ","description":"com.squareup.workflow1.ui.compose.ComposeScreenViewFactory","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen-view-factory/index.html","searchKeys":["ComposeScreenViewFactory","abstract class ComposeScreenViewFactory<RenderingT : Screen> : ScreenViewFactory<RenderingT> ","com.squareup.workflow1.ui.compose.ComposeScreenViewFactory"]},{"name":"abstract fun Content(rendering: RenderingT, viewEnvironment: ViewEnvironment)","description":"com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.Content","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen-view-factory/-content.html","searchKeys":["Content","abstract fun Content(rendering: RenderingT, viewEnvironment: ViewEnvironment)","com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.Content"]},{"name":"abstract fun Content(viewEnvironment: ViewEnvironment)","description":"com.squareup.workflow1.ui.compose.ComposeScreen.Content","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen/-content.html","searchKeys":["Content","abstract fun Content(viewEnvironment: ViewEnvironment)","com.squareup.workflow1.ui.compose.ComposeScreen.Content"]},{"name":"constructor()","description":"com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.ComposeScreenViewFactory","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen-view-factory/-compose-screen-view-factory.html","searchKeys":["ComposeScreenViewFactory","constructor()","com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.ComposeScreenViewFactory"]},{"name":"fun <PropsT, OutputT : Any, RenderingT> Workflow<PropsT, OutputT, RenderingT>.renderAsState(props: PropsT, interceptors: List<WorkflowInterceptor> = emptyList(), scope: CoroutineScope = rememberCoroutineScope(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit): State<RenderingT>","description":"com.squareup.workflow1.ui.compose.renderAsState","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/render-as-state.html","searchKeys":["renderAsState","fun <PropsT, OutputT : Any, RenderingT> Workflow<PropsT, OutputT, RenderingT>.renderAsState(props: PropsT, interceptors: List<WorkflowInterceptor> = emptyList(), scope: CoroutineScope = rememberCoroutineScope(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit): State<RenderingT>","com.squareup.workflow1.ui.compose.renderAsState"]},{"name":"fun ScreenViewFactoryFinder.withCompositionRoot(root: CompositionRoot): ScreenViewFactoryFinder","description":"com.squareup.workflow1.ui.compose.withCompositionRoot","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/with-composition-root.html","searchKeys":["withCompositionRoot","fun ScreenViewFactoryFinder.withCompositionRoot(root: CompositionRoot): ScreenViewFactoryFinder","com.squareup.workflow1.ui.compose.withCompositionRoot"]},{"name":"fun TextController.asMutableState(): MutableState<String>","description":"com.squareup.workflow1.ui.compose.asMutableState","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/as-mutable-state.html","searchKeys":["asMutableState","fun TextController.asMutableState(): MutableState<String>","com.squareup.workflow1.ui.compose.asMutableState"]},{"name":"fun ViewEnvironment.withCompositionRoot(root: CompositionRoot): ViewEnvironment","description":"com.squareup.workflow1.ui.compose.withCompositionRoot","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/with-composition-root.html","searchKeys":["withCompositionRoot","fun ViewEnvironment.withCompositionRoot(root: CompositionRoot): ViewEnvironment","com.squareup.workflow1.ui.compose.withCompositionRoot"]},{"name":"fun WorkflowRendering(rendering: Screen, viewEnvironment: ViewEnvironment, modifier: Modifier = Modifier)","description":"com.squareup.workflow1.ui.compose.WorkflowRendering","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-workflow-rendering.html","searchKeys":["WorkflowRendering","fun WorkflowRendering(rendering: Screen, viewEnvironment: ViewEnvironment, modifier: Modifier = Modifier)","com.squareup.workflow1.ui.compose.WorkflowRendering"]},{"name":"inline fun <RenderingT : Screen> composeScreenViewFactory(noinline content: (rendering: RenderingT, environment: ViewEnvironment) -> Unit): ScreenViewFactory<RenderingT>","description":"com.squareup.workflow1.ui.compose.composeScreenViewFactory","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/compose-screen-view-factory.html","searchKeys":["composeScreenViewFactory","inline fun <RenderingT : Screen> composeScreenViewFactory(noinline content: (rendering: RenderingT, environment: ViewEnvironment) -> Unit): ScreenViewFactory<RenderingT>","com.squareup.workflow1.ui.compose.composeScreenViewFactory"]},{"name":"inline fun ComposeScreen(crossinline content: (ViewEnvironment) -> Unit): ComposeScreen","description":"com.squareup.workflow1.ui.compose.ComposeScreen","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen.html","searchKeys":["ComposeScreen","inline fun ComposeScreen(crossinline content: (ViewEnvironment) -> Unit): ComposeScreen","com.squareup.workflow1.ui.compose.ComposeScreen"]},{"name":"interface ComposeScreen : AndroidScreen<Nothing> ","description":"com.squareup.workflow1.ui.compose.ComposeScreen","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen/index.html","searchKeys":["ComposeScreen","interface ComposeScreen : AndroidScreen<Nothing> ","com.squareup.workflow1.ui.compose.ComposeScreen"]},{"name":"open override val viewFactory: ScreenViewFactory<Nothing>","description":"com.squareup.workflow1.ui.compose.ComposeScreen.viewFactory","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen/view-factory.html","searchKeys":["viewFactory","open override val viewFactory: ScreenViewFactory<Nothing>","com.squareup.workflow1.ui.compose.ComposeScreen.viewFactory"]},{"name":"override fun buildView(initialRendering: RenderingT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup?): ScreenViewHolder<RenderingT>","description":"com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.buildView","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-compose-screen-view-factory/build-view.html","searchKeys":["buildView","override fun buildView(initialRendering: RenderingT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup?): ScreenViewHolder<RenderingT>","com.squareup.workflow1.ui.compose.ComposeScreenViewFactory.buildView"]},{"name":"typealias CompositionRoot = (content: () -> Unit) -> Unit","description":"com.squareup.workflow1.ui.compose.CompositionRoot","location":"workflow-ui/compose/com.squareup.workflow1.ui.compose/-composition-root/index.html","searchKeys":["CompositionRoot","typealias CompositionRoot = (content: () -> Unit) -> Unit","com.squareup.workflow1.ui.compose.CompositionRoot"]},{"name":"abstract class LifecycleWorker : Worker<Nothing> ","description":"com.squareup.workflow1.LifecycleWorker","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/index.html","searchKeys":["LifecycleWorker","abstract class LifecycleWorker : Worker<Nothing> ","com.squareup.workflow1.LifecycleWorker"]},{"name":"abstract class SessionWorkflow<in PropsT, StateT, out OutputT, out RenderingT> : StatefulWorkflow<PropsT, StateT, OutputT, RenderingT> ","description":"com.squareup.workflow1.SessionWorkflow","location":"workflow-core/com.squareup.workflow1/-session-workflow/index.html","searchKeys":["SessionWorkflow","abstract class SessionWorkflow<in PropsT, StateT, out OutputT, out RenderingT> : StatefulWorkflow<PropsT, StateT, OutputT, RenderingT> ","com.squareup.workflow1.SessionWorkflow"]},{"name":"abstract class StatefulWorkflow<in PropsT, StateT, out OutputT, out RenderingT> : Workflow<PropsT, OutputT, RenderingT> , IdCacheable","description":"com.squareup.workflow1.StatefulWorkflow","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/index.html","searchKeys":["StatefulWorkflow","abstract class StatefulWorkflow<in PropsT, StateT, out OutputT, out RenderingT> : Workflow<PropsT, OutputT, RenderingT> , IdCacheable","com.squareup.workflow1.StatefulWorkflow"]},{"name":"abstract class StatelessWorkflow<in PropsT, out OutputT, out RenderingT> : Workflow<PropsT, OutputT, RenderingT> , IdCacheable","description":"com.squareup.workflow1.StatelessWorkflow","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/index.html","searchKeys":["StatelessWorkflow","abstract class StatelessWorkflow<in PropsT, out OutputT, out RenderingT> : Workflow<PropsT, OutputT, RenderingT> , IdCacheable","com.squareup.workflow1.StatelessWorkflow"]},{"name":"abstract class WorkflowAction<in PropsT, StateT, out OutputT>","description":"com.squareup.workflow1.WorkflowAction","location":"workflow-core/com.squareup.workflow1/-workflow-action/index.html","searchKeys":["WorkflowAction","abstract class WorkflowAction<in PropsT, StateT, out OutputT>","com.squareup.workflow1.WorkflowAction"]},{"name":"abstract fun <ChildPropsT, ChildOutputT, ChildRenderingT> renderChild(child: Workflow<ChildPropsT, ChildOutputT, ChildRenderingT>, props: ChildPropsT, key: String = \"\", handler: (ChildOutputT) -> WorkflowAction<PropsT, StateT, OutputT>): ChildRenderingT","description":"com.squareup.workflow1.BaseRenderContext.renderChild","location":"workflow-core/com.squareup.workflow1/-base-render-context/render-child.html","searchKeys":["renderChild","abstract fun <ChildPropsT, ChildOutputT, ChildRenderingT> renderChild(child: Workflow<ChildPropsT, ChildOutputT, ChildRenderingT>, props: ChildPropsT, key: String = \"\", handler: (ChildOutputT) -> WorkflowAction<PropsT, StateT, OutputT>): ChildRenderingT","com.squareup.workflow1.BaseRenderContext.renderChild"]},{"name":"abstract fun WorkflowAction.Updater<PropsT, StateT, OutputT>.apply()","description":"com.squareup.workflow1.WorkflowAction.apply","location":"workflow-core/com.squareup.workflow1/-workflow-action/apply.html","searchKeys":["apply","abstract fun WorkflowAction.Updater<PropsT, StateT, OutputT>.apply()","com.squareup.workflow1.WorkflowAction.apply"]},{"name":"abstract fun asStatefulWorkflow(): StatefulWorkflow<PropsT, *, OutputT, RenderingT>","description":"com.squareup.workflow1.Workflow.asStatefulWorkflow","location":"workflow-core/com.squareup.workflow1/-workflow/as-stateful-workflow.html","searchKeys":["asStatefulWorkflow","abstract fun asStatefulWorkflow(): StatefulWorkflow<PropsT, *, OutputT, RenderingT>","com.squareup.workflow1.Workflow.asStatefulWorkflow"]},{"name":"abstract fun initialState(props: PropsT, snapshot: Snapshot?): StateT","description":"com.squareup.workflow1.StatefulWorkflow.initialState","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/initial-state.html","searchKeys":["initialState","abstract fun initialState(props: PropsT, snapshot: Snapshot?): StateT","com.squareup.workflow1.StatefulWorkflow.initialState"]},{"name":"abstract fun render(renderProps: PropsT, context: StatelessWorkflow.RenderContext<PropsT, OutputT, RenderingT>): RenderingT","description":"com.squareup.workflow1.StatelessWorkflow.render","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/render.html","searchKeys":["render","abstract fun render(renderProps: PropsT, context: StatelessWorkflow.RenderContext<PropsT, OutputT, RenderingT>): RenderingT","com.squareup.workflow1.StatelessWorkflow.render"]},{"name":"abstract fun render(renderProps: PropsT, renderState: StateT, context: StatefulWorkflow.RenderContext<PropsT, StateT, OutputT, RenderingT>): RenderingT","description":"com.squareup.workflow1.StatefulWorkflow.render","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/render.html","searchKeys":["render","abstract fun render(renderProps: PropsT, renderState: StateT, context: StatefulWorkflow.RenderContext<PropsT, StateT, OutputT, RenderingT>): RenderingT","com.squareup.workflow1.StatefulWorkflow.render"]},{"name":"abstract fun run(): Flow<OutputT>","description":"com.squareup.workflow1.Worker.run","location":"workflow-core/com.squareup.workflow1/-worker/run.html","searchKeys":["run","abstract fun run(): Flow<OutputT>","com.squareup.workflow1.Worker.run"]},{"name":"abstract fun runningSideEffect(key: String, sideEffect: suspend CoroutineScope.() -> Unit)","description":"com.squareup.workflow1.BaseRenderContext.runningSideEffect","location":"workflow-core/com.squareup.workflow1/-base-render-context/running-side-effect.html","searchKeys":["runningSideEffect","abstract fun runningSideEffect(key: String, sideEffect: suspend CoroutineScope.() -> Unit)","com.squareup.workflow1.BaseRenderContext.runningSideEffect"]},{"name":"abstract fun send(value: T)","description":"com.squareup.workflow1.Sink.send","location":"workflow-core/com.squareup.workflow1/-sink/send.html","searchKeys":["send","abstract fun send(value: T)","com.squareup.workflow1.Sink.send"]},{"name":"abstract fun snapshotState(state: StateT): Snapshot?","description":"com.squareup.workflow1.StatefulWorkflow.snapshotState","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/snapshot-state.html","searchKeys":["snapshotState","abstract fun snapshotState(state: StateT): Snapshot?","com.squareup.workflow1.StatefulWorkflow.snapshotState"]},{"name":"abstract override fun initialState(props: PropsT, snapshot: Snapshot?, workflowScope: CoroutineScope): StateT","description":"com.squareup.workflow1.SessionWorkflow.initialState","location":"workflow-core/com.squareup.workflow1/-session-workflow/initial-state.html","searchKeys":["initialState","abstract override fun initialState(props: PropsT, snapshot: Snapshot?, workflowScope: CoroutineScope): StateT","com.squareup.workflow1.SessionWorkflow.initialState"]},{"name":"abstract val actionSink: Sink<WorkflowAction<PropsT, StateT, OutputT>>","description":"com.squareup.workflow1.BaseRenderContext.actionSink","location":"workflow-core/com.squareup.workflow1/-base-render-context/action-sink.html","searchKeys":["actionSink","abstract val actionSink: Sink<WorkflowAction<PropsT, StateT, OutputT>>","com.squareup.workflow1.BaseRenderContext.actionSink"]},{"name":"abstract val realIdentifier: WorkflowIdentifier","description":"com.squareup.workflow1.ImpostorWorkflow.realIdentifier","location":"workflow-core/com.squareup.workflow1/-impostor-workflow/real-identifier.html","searchKeys":["realIdentifier","abstract val realIdentifier: WorkflowIdentifier","com.squareup.workflow1.ImpostorWorkflow.realIdentifier"]},{"name":"abstract val typeName: String","description":"com.squareup.workflow1.WorkflowIdentifierType.typeName","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/type-name.html","searchKeys":["typeName","abstract val typeName: String","com.squareup.workflow1.WorkflowIdentifierType.typeName"]},{"name":"abstract var cachedIdentifier: WorkflowIdentifier?","description":"com.squareup.workflow1.IdCacheable.cachedIdentifier","location":"workflow-core/com.squareup.workflow1/-id-cacheable/cached-identifier.html","searchKeys":["cachedIdentifier","abstract var cachedIdentifier: WorkflowIdentifier?","com.squareup.workflow1.IdCacheable.cachedIdentifier"]},{"name":"annotation class WorkflowExperimentalApi","description":"com.squareup.workflow1.WorkflowExperimentalApi","location":"workflow-core/com.squareup.workflow1/-workflow-experimental-api/index.html","searchKeys":["WorkflowExperimentalApi","annotation class WorkflowExperimentalApi","com.squareup.workflow1.WorkflowExperimentalApi"]},{"name":"class ActionApplied<out OutputT> constructor(val output: WorkflowOutput<OutputT>?, val stateChanged: Boolean = false) : ActionProcessingResult","description":"com.squareup.workflow1.ActionApplied","location":"workflow-core/com.squareup.workflow1/-action-applied/index.html","searchKeys":["ActionApplied","class ActionApplied<out OutputT> constructor(val output: WorkflowOutput<OutputT>?, val stateChanged: Boolean = false) : ActionProcessingResult","com.squareup.workflow1.ActionApplied"]},{"name":"class Snapshot","description":"com.squareup.workflow1.Snapshot","location":"workflow-core/com.squareup.workflow1/-snapshot/index.html","searchKeys":["Snapshot","class Snapshot","com.squareup.workflow1.Snapshot"]},{"name":"class WorkflowIdentifier","description":"com.squareup.workflow1.WorkflowIdentifier","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/index.html","searchKeys":["WorkflowIdentifier","class WorkflowIdentifier","com.squareup.workflow1.WorkflowIdentifier"]},{"name":"class WorkflowOutput<out OutputT>(val value: OutputT)","description":"com.squareup.workflow1.WorkflowOutput","location":"workflow-core/com.squareup.workflow1/-workflow-output/index.html","searchKeys":["WorkflowOutput","class WorkflowOutput<out OutputT>(val value: OutputT)","com.squareup.workflow1.WorkflowOutput"]},{"name":"constructor()","description":"com.squareup.workflow1.LifecycleWorker.LifecycleWorker","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/-lifecycle-worker.html","searchKeys":["LifecycleWorker","constructor()","com.squareup.workflow1.LifecycleWorker.LifecycleWorker"]},{"name":"constructor()","description":"com.squareup.workflow1.SessionWorkflow.SessionWorkflow","location":"workflow-core/com.squareup.workflow1/-session-workflow/-session-workflow.html","searchKeys":["SessionWorkflow","constructor()","com.squareup.workflow1.SessionWorkflow.SessionWorkflow"]},{"name":"constructor()","description":"com.squareup.workflow1.StatefulWorkflow.StatefulWorkflow","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/-stateful-workflow.html","searchKeys":["StatefulWorkflow","constructor()","com.squareup.workflow1.StatefulWorkflow.StatefulWorkflow"]},{"name":"constructor()","description":"com.squareup.workflow1.StatelessWorkflow.StatelessWorkflow","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/-stateless-workflow.html","searchKeys":["StatelessWorkflow","constructor()","com.squareup.workflow1.StatelessWorkflow.StatelessWorkflow"]},{"name":"constructor()","description":"com.squareup.workflow1.WorkflowAction.WorkflowAction","location":"workflow-core/com.squareup.workflow1/-workflow-action/-workflow-action.html","searchKeys":["WorkflowAction","constructor()","com.squareup.workflow1.WorkflowAction.WorkflowAction"]},{"name":"constructor(kClass: KClass<*>)","description":"com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.Snapshottable","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-snapshottable/-snapshottable.html","searchKeys":["Snapshottable","constructor(kClass: KClass<*>)","com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.Snapshottable"]},{"name":"constructor(kType: KType)","description":"com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.Unsnapshottable","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-unsnapshottable/-unsnapshottable.html","searchKeys":["Unsnapshottable","constructor(kType: KType)","com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.Unsnapshottable"]},{"name":"constructor(output: WorkflowOutput<OutputT>?, stateChanged: Boolean = false)","description":"com.squareup.workflow1.ActionApplied.ActionApplied","location":"workflow-core/com.squareup.workflow1/-action-applied/-action-applied.html","searchKeys":["ActionApplied","constructor(output: WorkflowOutput<OutputT>?, stateChanged: Boolean = false)","com.squareup.workflow1.ActionApplied.ActionApplied"]},{"name":"constructor(props: PropsT, state: StateT)","description":"com.squareup.workflow1.WorkflowAction.Updater.Updater","location":"workflow-core/com.squareup.workflow1/-workflow-action/-updater/-updater.html","searchKeys":["Updater","constructor(props: PropsT, state: StateT)","com.squareup.workflow1.WorkflowAction.Updater.Updater"]},{"name":"constructor(typeName: String, kClass: KClass<*>? = null)","description":"com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.Snapshottable","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-snapshottable/-snapshottable.html","searchKeys":["Snapshottable","constructor(typeName: String, kClass: KClass<*>? = null)","com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.Snapshottable"]},{"name":"constructor(value: OutputT)","description":"com.squareup.workflow1.WorkflowOutput.WorkflowOutput","location":"workflow-core/com.squareup.workflow1/-workflow-output/-workflow-output.html","searchKeys":["WorkflowOutput","constructor(value: OutputT)","com.squareup.workflow1.WorkflowOutput.WorkflowOutput"]},{"name":"data class Snapshottable(val typeName: String, val kClass: KClass<*>? = null) : WorkflowIdentifierType","description":"com.squareup.workflow1.WorkflowIdentifierType.Snapshottable","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-snapshottable/index.html","searchKeys":["Snapshottable","data class Snapshottable(val typeName: String, val kClass: KClass<*>? = null) : WorkflowIdentifierType","com.squareup.workflow1.WorkflowIdentifierType.Snapshottable"]},{"name":"data class Unsnapshottable(val kType: KType) : WorkflowIdentifierType","description":"com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-unsnapshottable/index.html","searchKeys":["Unsnapshottable","data class Unsnapshottable(val kType: KType) : WorkflowIdentifierType","com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable"]},{"name":"fun <PropsT, ChildPropsT, StateT, OutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<ChildPropsT, Nothing, ChildRenderingT>, props: ChildPropsT, key: String = \"\"): ChildRenderingT","description":"com.squareup.workflow1.renderChild","location":"workflow-core/com.squareup.workflow1/render-child.html","searchKeys":["renderChild","fun <PropsT, ChildPropsT, StateT, OutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<ChildPropsT, Nothing, ChildRenderingT>, props: ChildPropsT, key: String = \"\"): ChildRenderingT","com.squareup.workflow1.renderChild"]},{"name":"fun <PropsT, OutputT, FromRenderingT, ToRenderingT> Workflow<PropsT, OutputT, FromRenderingT>.mapRendering(transform: (FromRenderingT) -> ToRenderingT): Workflow<PropsT, OutputT, ToRenderingT>","description":"com.squareup.workflow1.mapRendering","location":"workflow-core/com.squareup.workflow1/map-rendering.html","searchKeys":["mapRendering","fun <PropsT, OutputT, FromRenderingT, ToRenderingT> Workflow<PropsT, OutputT, FromRenderingT>.mapRendering(transform: (FromRenderingT) -> ToRenderingT): Workflow<PropsT, OutputT, ToRenderingT>","com.squareup.workflow1.mapRendering"]},{"name":"fun <PropsT, OutputT, RenderingT> RenderContext(baseContext: BaseRenderContext<PropsT, *, OutputT>, workflow: StatelessWorkflow<PropsT, OutputT, RenderingT>): StatelessWorkflow.RenderContext<PropsT, OutputT, RenderingT>","description":"com.squareup.workflow1.RenderContext","location":"workflow-core/com.squareup.workflow1/-render-context.html","searchKeys":["RenderContext","fun <PropsT, OutputT, RenderingT> RenderContext(baseContext: BaseRenderContext<PropsT, *, OutputT>, workflow: StatelessWorkflow<PropsT, OutputT, RenderingT>): StatelessWorkflow.RenderContext<PropsT, OutputT, RenderingT>","com.squareup.workflow1.RenderContext"]},{"name":"fun <PropsT, OutputT, RenderingT> StatelessWorkflow<PropsT, OutputT, RenderingT>.action(name: () -> String, update: WorkflowAction.Updater<PropsT, *, OutputT>.() -> Unit): WorkflowAction<PropsT, Nothing, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, OutputT, RenderingT> StatelessWorkflow<PropsT, OutputT, RenderingT>.action(name: () -> String, update: WorkflowAction.Updater<PropsT, *, OutputT>.() -> Unit): WorkflowAction<PropsT, Nothing, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, OutputT, RenderingT> StatelessWorkflow<PropsT, OutputT, RenderingT>.action(name: String = \"\", update: WorkflowAction.Updater<PropsT, *, OutputT>.() -> Unit): WorkflowAction<PropsT, Nothing, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, OutputT, RenderingT> StatelessWorkflow<PropsT, OutputT, RenderingT>.action(name: String = \"\", update: WorkflowAction.Updater<PropsT, *, OutputT>.() -> Unit): WorkflowAction<PropsT, Nothing, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, StateT, OutputT, ChildOutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<Unit, ChildOutputT, ChildRenderingT>, key: String = \"\", handler: (ChildOutputT) -> WorkflowAction<PropsT, StateT, OutputT>): ChildRenderingT","description":"com.squareup.workflow1.renderChild","location":"workflow-core/com.squareup.workflow1/render-child.html","searchKeys":["renderChild","fun <PropsT, StateT, OutputT, ChildOutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<Unit, ChildOutputT, ChildRenderingT>, key: String = \"\", handler: (ChildOutputT) -> WorkflowAction<PropsT, StateT, OutputT>): ChildRenderingT","com.squareup.workflow1.renderChild"]},{"name":"fun <PropsT, StateT, OutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<Unit, Nothing, ChildRenderingT>, key: String = \"\"): ChildRenderingT","description":"com.squareup.workflow1.renderChild","location":"workflow-core/com.squareup.workflow1/render-child.html","searchKeys":["renderChild","fun <PropsT, StateT, OutputT, ChildRenderingT> BaseRenderContext<PropsT, StateT, OutputT>.renderChild(child: Workflow<Unit, Nothing, ChildRenderingT>, key: String = \"\"): ChildRenderingT","com.squareup.workflow1.renderChild"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> RenderContext(baseContext: BaseRenderContext<PropsT, StateT, OutputT>, workflow: StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>): StatefulWorkflow.RenderContext<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.RenderContext","location":"workflow-core/com.squareup.workflow1/-render-context.html","searchKeys":["RenderContext","fun <PropsT, StateT, OutputT, RenderingT> RenderContext(baseContext: BaseRenderContext<PropsT, StateT, OutputT>, workflow: StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>): StatefulWorkflow.RenderContext<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.RenderContext"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.action(name: () -> String, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.action(name: () -> String, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.action(name: String = \"\", update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.action(name: String = \"\", update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, StateT, OutputT> WorkflowAction<PropsT, StateT, OutputT>.applyTo(props: PropsT, state: StateT): Pair<StateT, ActionApplied<OutputT>>","description":"com.squareup.workflow1.applyTo","location":"workflow-core/com.squareup.workflow1/apply-to.html","searchKeys":["applyTo","fun <PropsT, StateT, OutputT> WorkflowAction<PropsT, StateT, OutputT>.applyTo(props: PropsT, state: StateT): Pair<StateT, ActionApplied<OutputT>>","com.squareup.workflow1.applyTo"]},{"name":"fun <PropsT, StateT, OutputT> action(name: () -> String, apply: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, StateT, OutputT> action(name: () -> String, apply: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, StateT, OutputT> action(name: String = \"\", apply: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","description":"com.squareup.workflow1.action","location":"workflow-core/com.squareup.workflow1/action.html","searchKeys":["action","fun <PropsT, StateT, OutputT> action(name: String = \"\", apply: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): WorkflowAction<PropsT, StateT, OutputT>","com.squareup.workflow1.action"]},{"name":"fun <PropsT, StateT, OutputT> noAction(): WorkflowAction<PropsT, StateT, OutputT>","description":"com.squareup.workflow1.WorkflowAction.Companion.noAction","location":"workflow-core/com.squareup.workflow1/-workflow-action/-companion/no-action.html","searchKeys":["noAction","fun <PropsT, StateT, OutputT> noAction(): WorkflowAction<PropsT, StateT, OutputT>","com.squareup.workflow1.WorkflowAction.Companion.noAction"]},{"name":"fun <RenderingT> Workflow.Companion.rendering(rendering: RenderingT): Workflow<Unit, Nothing, RenderingT>","description":"com.squareup.workflow1.rendering","location":"workflow-core/com.squareup.workflow1/rendering.html","searchKeys":["rendering","fun <RenderingT> Workflow.Companion.rendering(rendering: RenderingT): Workflow<Unit, Nothing, RenderingT>","com.squareup.workflow1.rendering"]},{"name":"fun <T : Any> BufferedSink.writeNullable(obj: T?, writer: BufferedSink.(T) -> Unit): BufferedSink","description":"com.squareup.workflow1.writeNullable","location":"workflow-core/com.squareup.workflow1/write-nullable.html","searchKeys":["writeNullable","fun <T : Any> BufferedSink.writeNullable(obj: T?, writer: BufferedSink.(T) -> Unit): BufferedSink","com.squareup.workflow1.writeNullable"]},{"name":"fun <T : Any> BufferedSource.readNullable(reader: BufferedSource.() -> T): T?","description":"com.squareup.workflow1.readNullable","location":"workflow-core/com.squareup.workflow1/read-nullable.html","searchKeys":["readNullable","fun <T : Any> BufferedSource.readNullable(reader: BufferedSource.() -> T): T?","com.squareup.workflow1.readNullable"]},{"name":"fun <T : Enum<T>> BufferedSink.writeEnumByOrdinal(enumVal: T): BufferedSink","description":"com.squareup.workflow1.writeEnumByOrdinal","location":"workflow-core/com.squareup.workflow1/write-enum-by-ordinal.html","searchKeys":["writeEnumByOrdinal","fun <T : Enum<T>> BufferedSink.writeEnumByOrdinal(enumVal: T): BufferedSink","com.squareup.workflow1.writeEnumByOrdinal"]},{"name":"fun <T : Enum<T>> BufferedSink.writeOptionalEnumByOrdinal(enumVal: T?): BufferedSink","description":"com.squareup.workflow1.writeOptionalEnumByOrdinal","location":"workflow-core/com.squareup.workflow1/write-optional-enum-by-ordinal.html","searchKeys":["writeOptionalEnumByOrdinal","fun <T : Enum<T>> BufferedSink.writeOptionalEnumByOrdinal(enumVal: T?): BufferedSink","com.squareup.workflow1.writeOptionalEnumByOrdinal"]},{"name":"fun <T, R> Worker<T>.transform(transform: (Flow<T>) -> Flow<R>): Worker<R>","description":"com.squareup.workflow1.transform","location":"workflow-core/com.squareup.workflow1/transform.html","searchKeys":["transform","fun <T, R> Worker<T>.transform(transform: (Flow<T>) -> Flow<R>): Worker<R>","com.squareup.workflow1.transform"]},{"name":"fun <T1, T2> Sink<T1>.contraMap(transform: (T2) -> T1): Sink<T2>","description":"com.squareup.workflow1.contraMap","location":"workflow-core/com.squareup.workflow1/contra-map.html","searchKeys":["contraMap","fun <T1, T2> Sink<T1>.contraMap(transform: (T2) -> T1): Sink<T2>","com.squareup.workflow1.contraMap"]},{"name":"fun <T> finished(): Worker<T>","description":"com.squareup.workflow1.Worker.Companion.finished","location":"workflow-core/com.squareup.workflow1/-worker/-companion/finished.html","searchKeys":["finished","fun <T> finished(): Worker<T>","com.squareup.workflow1.Worker.Companion.finished"]},{"name":"fun BufferedSink.writeBooleanAsInt(bool: Boolean): BufferedSink","description":"com.squareup.workflow1.writeBooleanAsInt","location":"workflow-core/com.squareup.workflow1/write-boolean-as-int.html","searchKeys":["writeBooleanAsInt","fun BufferedSink.writeBooleanAsInt(bool: Boolean): BufferedSink","com.squareup.workflow1.writeBooleanAsInt"]},{"name":"fun BufferedSink.writeByteStringWithLength(bytes: ByteString): BufferedSink","description":"com.squareup.workflow1.writeByteStringWithLength","location":"workflow-core/com.squareup.workflow1/write-byte-string-with-length.html","searchKeys":["writeByteStringWithLength","fun BufferedSink.writeByteStringWithLength(bytes: ByteString): BufferedSink","com.squareup.workflow1.writeByteStringWithLength"]},{"name":"fun BufferedSink.writeFloat(float: Float): BufferedSink","description":"com.squareup.workflow1.writeFloat","location":"workflow-core/com.squareup.workflow1/write-float.html","searchKeys":["writeFloat","fun BufferedSink.writeFloat(float: Float): BufferedSink","com.squareup.workflow1.writeFloat"]},{"name":"fun BufferedSink.writeOptionalUtf8WithLength(str: String?): BufferedSink","description":"com.squareup.workflow1.writeOptionalUtf8WithLength","location":"workflow-core/com.squareup.workflow1/write-optional-utf8-with-length.html","searchKeys":["writeOptionalUtf8WithLength","fun BufferedSink.writeOptionalUtf8WithLength(str: String?): BufferedSink","com.squareup.workflow1.writeOptionalUtf8WithLength"]},{"name":"fun BufferedSink.writeUtf8WithLength(str: String): BufferedSink","description":"com.squareup.workflow1.writeUtf8WithLength","location":"workflow-core/com.squareup.workflow1/write-utf8-with-length.html","searchKeys":["writeUtf8WithLength","fun BufferedSink.writeUtf8WithLength(str: String): BufferedSink","com.squareup.workflow1.writeUtf8WithLength"]},{"name":"fun BufferedSource.readBooleanFromInt(): Boolean","description":"com.squareup.workflow1.readBooleanFromInt","location":"workflow-core/com.squareup.workflow1/read-boolean-from-int.html","searchKeys":["readBooleanFromInt","fun BufferedSource.readBooleanFromInt(): Boolean","com.squareup.workflow1.readBooleanFromInt"]},{"name":"fun BufferedSource.readByteStringWithLength(): ByteString","description":"com.squareup.workflow1.readByteStringWithLength","location":"workflow-core/com.squareup.workflow1/read-byte-string-with-length.html","searchKeys":["readByteStringWithLength","fun BufferedSource.readByteStringWithLength(): ByteString","com.squareup.workflow1.readByteStringWithLength"]},{"name":"fun BufferedSource.readFloat(): Float","description":"com.squareup.workflow1.readFloat","location":"workflow-core/com.squareup.workflow1/read-float.html","searchKeys":["readFloat","fun BufferedSource.readFloat(): Float","com.squareup.workflow1.readFloat"]},{"name":"fun BufferedSource.readOptionalUtf8WithLength(): String?","description":"com.squareup.workflow1.readOptionalUtf8WithLength","location":"workflow-core/com.squareup.workflow1/read-optional-utf8-with-length.html","searchKeys":["readOptionalUtf8WithLength","fun BufferedSource.readOptionalUtf8WithLength(): String?","com.squareup.workflow1.readOptionalUtf8WithLength"]},{"name":"fun BufferedSource.readUtf8WithLength(): String","description":"com.squareup.workflow1.readUtf8WithLength","location":"workflow-core/com.squareup.workflow1/read-utf8-with-length.html","searchKeys":["readUtf8WithLength","fun BufferedSource.readUtf8WithLength(): String","com.squareup.workflow1.readUtf8WithLength"]},{"name":"fun component1(): WorkflowOutput<OutputT>?","description":"com.squareup.workflow1.ActionApplied.component1","location":"workflow-core/com.squareup.workflow1/-action-applied/component1.html","searchKeys":["component1","fun component1(): WorkflowOutput<OutputT>?","com.squareup.workflow1.ActionApplied.component1"]},{"name":"fun component2(): Boolean","description":"com.squareup.workflow1.ActionApplied.component2","location":"workflow-core/com.squareup.workflow1/-action-applied/component2.html","searchKeys":["component2","fun component2(): Boolean","com.squareup.workflow1.ActionApplied.component2"]},{"name":"fun copy(output: WorkflowOutput<OutputT>? = this.output, stateChanged: Boolean = this.stateChanged): ActionApplied<OutputT>","description":"com.squareup.workflow1.ActionApplied.copy","location":"workflow-core/com.squareup.workflow1/-action-applied/copy.html","searchKeys":["copy","fun copy(output: WorkflowOutput<OutputT>? = this.output, stateChanged: Boolean = this.stateChanged): ActionApplied<OutputT>","com.squareup.workflow1.ActionApplied.copy"]},{"name":"fun getRealIdentifierType(): WorkflowIdentifierType","description":"com.squareup.workflow1.WorkflowIdentifier.getRealIdentifierType","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/get-real-identifier-type.html","searchKeys":["getRealIdentifierType","fun getRealIdentifierType(): WorkflowIdentifierType","com.squareup.workflow1.WorkflowIdentifier.getRealIdentifierType"]},{"name":"fun interface Sink<in T>","description":"com.squareup.workflow1.Sink","location":"workflow-core/com.squareup.workflow1/-sink/index.html","searchKeys":["Sink","fun interface Sink<in T>","com.squareup.workflow1.Sink"]},{"name":"fun of(byteString: ByteString): Snapshot","description":"com.squareup.workflow1.Snapshot.Companion.of","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/of.html","searchKeys":["of","fun of(byteString: ByteString): Snapshot","com.squareup.workflow1.Snapshot.Companion.of"]},{"name":"fun of(integer: Int): Snapshot","description":"com.squareup.workflow1.Snapshot.Companion.of","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/of.html","searchKeys":["of","fun of(integer: Int): Snapshot","com.squareup.workflow1.Snapshot.Companion.of"]},{"name":"fun of(lazy: () -> ByteString): Snapshot","description":"com.squareup.workflow1.Snapshot.Companion.of","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/of.html","searchKeys":["of","fun of(lazy: () -> ByteString): Snapshot","com.squareup.workflow1.Snapshot.Companion.of"]},{"name":"fun of(string: String): Snapshot","description":"com.squareup.workflow1.Snapshot.Companion.of","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/of.html","searchKeys":["of","fun of(string: String): Snapshot","com.squareup.workflow1.Snapshot.Companion.of"]},{"name":"fun parse(bytes: ByteString): WorkflowIdentifier","description":"com.squareup.workflow1.WorkflowIdentifier.Companion.parse","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/-companion/parse.html","searchKeys":["parse","fun parse(bytes: ByteString): WorkflowIdentifier","com.squareup.workflow1.WorkflowIdentifier.Companion.parse"]},{"name":"fun setOutput(output: OutputT)","description":"com.squareup.workflow1.WorkflowAction.Updater.setOutput","location":"workflow-core/com.squareup.workflow1/-workflow-action/-updater/set-output.html","searchKeys":["setOutput","fun setOutput(output: OutputT)","com.squareup.workflow1.WorkflowAction.Updater.setOutput"]},{"name":"fun timer(delayMs: Long, key: String = \"\"): Worker<Unit>","description":"com.squareup.workflow1.Worker.Companion.timer","location":"workflow-core/com.squareup.workflow1/-worker/-companion/timer.html","searchKeys":["timer","fun timer(delayMs: Long, key: String = \"\"): Worker<Unit>","com.squareup.workflow1.Worker.Companion.timer"]},{"name":"fun toByteStringOrNull(): ByteString?","description":"com.squareup.workflow1.WorkflowIdentifier.toByteStringOrNull","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/to-byte-string-or-null.html","searchKeys":["toByteStringOrNull","fun toByteStringOrNull(): ByteString?","com.squareup.workflow1.WorkflowIdentifier.toByteStringOrNull"]},{"name":"fun unsnapshottableIdentifier(type: KType): WorkflowIdentifier","description":"com.squareup.workflow1.unsnapshottableIdentifier","location":"workflow-core/com.squareup.workflow1/unsnapshottable-identifier.html","searchKeys":["unsnapshottableIdentifier","fun unsnapshottableIdentifier(type: KType): WorkflowIdentifier","com.squareup.workflow1.unsnapshottableIdentifier"]},{"name":"fun write(lazy: (BufferedSink) -> Unit): Snapshot","description":"com.squareup.workflow1.Snapshot.Companion.write","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/write.html","searchKeys":["write","fun write(lazy: (BufferedSink) -> Unit): Snapshot","com.squareup.workflow1.Snapshot.Companion.write"]},{"name":"inline fun <OutputT> Flow<OutputT>.asWorker(): Worker<OutputT>","description":"com.squareup.workflow1.asWorker","location":"workflow-core/com.squareup.workflow1/as-worker.html","searchKeys":["asWorker","inline fun <OutputT> Flow<OutputT>.asWorker(): Worker<OutputT>","com.squareup.workflow1.asWorker"]},{"name":"inline fun <OutputT> create(noinline block: suspend FlowCollector<OutputT>.() -> Unit): Worker<OutputT>","description":"com.squareup.workflow1.Worker.Companion.create","location":"workflow-core/com.squareup.workflow1/-worker/-companion/create.html","searchKeys":["create","inline fun <OutputT> create(noinline block: suspend FlowCollector<OutputT>.() -> Unit): Worker<OutputT>","com.squareup.workflow1.Worker.Companion.create"]},{"name":"inline fun <OutputT> from(noinline block: suspend () -> OutputT): Worker<OutputT>","description":"com.squareup.workflow1.Worker.Companion.from","location":"workflow-core/com.squareup.workflow1/-worker/-companion/from.html","searchKeys":["from","inline fun <OutputT> from(noinline block: suspend () -> OutputT): Worker<OutputT>","com.squareup.workflow1.Worker.Companion.from"]},{"name":"inline fun <OutputT> fromNullable(noinline block: suspend () -> OutputT?): Worker<OutputT>","description":"com.squareup.workflow1.Worker.Companion.fromNullable","location":"workflow-core/com.squareup.workflow1/-worker/-companion/from-nullable.html","searchKeys":["fromNullable","inline fun <OutputT> fromNullable(noinline block: suspend () -> OutputT?): Worker<OutputT>","com.squareup.workflow1.Worker.Companion.fromNullable"]},{"name":"inline fun <PropsT, OutputT, RenderingT> Workflow.Companion.stateless(crossinline render: BaseRenderContext<PropsT, Nothing, OutputT>.(props: PropsT) -> RenderingT): Workflow<PropsT, OutputT, RenderingT>","description":"com.squareup.workflow1.stateless","location":"workflow-core/com.squareup.workflow1/stateless.html","searchKeys":["stateless","inline fun <PropsT, OutputT, RenderingT> Workflow.Companion.stateless(crossinline render: BaseRenderContext<PropsT, Nothing, OutputT>.(props: PropsT) -> RenderingT): Workflow<PropsT, OutputT, RenderingT>","com.squareup.workflow1.stateless"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (PropsT, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): SessionWorkflow<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.sessionWorkflow","location":"workflow-core/com.squareup.workflow1/session-workflow.html","searchKeys":["sessionWorkflow","inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (PropsT, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): SessionWorkflow<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.sessionWorkflow"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (PropsT, Snapshot?, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): SessionWorkflow<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.sessionWorkflow","location":"workflow-core/com.squareup.workflow1/session-workflow.html","searchKeys":["sessionWorkflow","inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (PropsT, Snapshot?, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): SessionWorkflow<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.sessionWorkflow"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (PropsT) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.stateful","location":"workflow-core/com.squareup.workflow1/stateful.html","searchKeys":["stateful","inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (PropsT) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.stateful"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (PropsT, Snapshot?) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.stateful","location":"workflow-core/com.squareup.workflow1/stateful.html","searchKeys":["stateful","inline fun <PropsT, StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (PropsT, Snapshot?) -> StateT, crossinline render: BaseRenderContext<PropsT, StateT, OutputT>.(props: PropsT, state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?, crossinline onPropsChanged: (old: PropsT, new: PropsT, state: StateT) -> StateT = { _, _, state -> state }): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.stateful"]},{"name":"inline fun <StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (CoroutineScope) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT): SessionWorkflow<Unit, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.sessionWorkflow","location":"workflow-core/com.squareup.workflow1/session-workflow.html","searchKeys":["sessionWorkflow","inline fun <StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (CoroutineScope) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT): SessionWorkflow<Unit, StateT, OutputT, RenderingT>","com.squareup.workflow1.sessionWorkflow"]},{"name":"inline fun <StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (Snapshot?, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?): SessionWorkflow<Unit, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.sessionWorkflow","location":"workflow-core/com.squareup.workflow1/session-workflow.html","searchKeys":["sessionWorkflow","inline fun <StateT, OutputT, RenderingT> Workflow.Companion.sessionWorkflow(crossinline initialState: (Snapshot?, CoroutineScope) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?): SessionWorkflow<Unit, StateT, OutputT, RenderingT>","com.squareup.workflow1.sessionWorkflow"]},{"name":"inline fun <StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (Snapshot?) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?): StatefulWorkflow<Unit, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.stateful","location":"workflow-core/com.squareup.workflow1/stateful.html","searchKeys":["stateful","inline fun <StateT, OutputT, RenderingT> Workflow.Companion.stateful(crossinline initialState: (Snapshot?) -> StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT, crossinline snapshot: (StateT) -> Snapshot?): StatefulWorkflow<Unit, StateT, OutputT, RenderingT>","com.squareup.workflow1.stateful"]},{"name":"inline fun <StateT, OutputT, RenderingT> Workflow.Companion.stateful(initialState: StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT): StatefulWorkflow<Unit, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.stateful","location":"workflow-core/com.squareup.workflow1/stateful.html","searchKeys":["stateful","inline fun <StateT, OutputT, RenderingT> Workflow.Companion.stateful(initialState: StateT, crossinline render: BaseRenderContext<Unit, StateT, OutputT>.(state: StateT) -> RenderingT): StatefulWorkflow<Unit, StateT, OutputT, RenderingT>","com.squareup.workflow1.stateful"]},{"name":"inline fun <T : Enum<T>> BufferedSource.readEnumByOrdinal(): T","description":"com.squareup.workflow1.readEnumByOrdinal","location":"workflow-core/com.squareup.workflow1/read-enum-by-ordinal.html","searchKeys":["readEnumByOrdinal","inline fun <T : Enum<T>> BufferedSource.readEnumByOrdinal(): T","com.squareup.workflow1.readEnumByOrdinal"]},{"name":"inline fun <T : Enum<T>> BufferedSource.readOptionalEnumByOrdinal(): T?","description":"com.squareup.workflow1.readOptionalEnumByOrdinal","location":"workflow-core/com.squareup.workflow1/read-optional-enum-by-ordinal.html","searchKeys":["readOptionalEnumByOrdinal","inline fun <T : Enum<T>> BufferedSource.readOptionalEnumByOrdinal(): T?","com.squareup.workflow1.readOptionalEnumByOrdinal"]},{"name":"inline fun <T, W : Worker<T>, PropsT, StateT, OutputT> BaseRenderContext<PropsT, StateT, OutputT>.runningWorker(worker: W, key: String = \"\", noinline handler: (T) -> WorkflowAction<PropsT, StateT, OutputT>)","description":"com.squareup.workflow1.runningWorker","location":"workflow-core/com.squareup.workflow1/running-worker.html","searchKeys":["runningWorker","inline fun <T, W : Worker<T>, PropsT, StateT, OutputT> BaseRenderContext<PropsT, StateT, OutputT>.runningWorker(worker: W, key: String = \"\", noinline handler: (T) -> WorkflowAction<PropsT, StateT, OutputT>)","com.squareup.workflow1.runningWorker"]},{"name":"inline fun <T> BufferedSink.writeList(values: List<T>, writer: BufferedSink.(T) -> Unit): BufferedSink","description":"com.squareup.workflow1.writeList","location":"workflow-core/com.squareup.workflow1/write-list.html","searchKeys":["writeList","inline fun <T> BufferedSink.writeList(values: List<T>, writer: BufferedSink.(T) -> Unit): BufferedSink","com.squareup.workflow1.writeList"]},{"name":"inline fun <T> BufferedSource.readList(reader: BufferedSource.() -> T): List<T>","description":"com.squareup.workflow1.readList","location":"workflow-core/com.squareup.workflow1/read-list.html","searchKeys":["readList","inline fun <T> BufferedSource.readList(reader: BufferedSource.() -> T): List<T>","com.squareup.workflow1.readList"]},{"name":"inline fun <T> ByteString.parse(block: (BufferedSource) -> T): T","description":"com.squareup.workflow1.parse","location":"workflow-core/com.squareup.workflow1/parse.html","searchKeys":["parse","inline fun <T> ByteString.parse(block: (BufferedSource) -> T): T","com.squareup.workflow1.parse"]},{"name":"inline fun <W : LifecycleWorker, PropsT, StateT, OutputT> BaseRenderContext<PropsT, StateT, OutputT>.runningWorker(worker: W, key: String = \"\")","description":"com.squareup.workflow1.runningWorker","location":"workflow-core/com.squareup.workflow1/running-worker.html","searchKeys":["runningWorker","inline fun <W : LifecycleWorker, PropsT, StateT, OutputT> BaseRenderContext<PropsT, StateT, OutputT>.runningWorker(worker: W, key: String = \"\")","com.squareup.workflow1.runningWorker"]},{"name":"inner class RenderContext : BaseRenderContext<PropsT, Nothing, OutputT> ","description":"com.squareup.workflow1.StatelessWorkflow.RenderContext","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/-render-context/index.html","searchKeys":["RenderContext","inner class RenderContext : BaseRenderContext<PropsT, Nothing, OutputT> ","com.squareup.workflow1.StatelessWorkflow.RenderContext"]},{"name":"inner class RenderContext : BaseRenderContext<PropsT, StateT, OutputT> ","description":"com.squareup.workflow1.StatefulWorkflow.RenderContext","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/-render-context/index.html","searchKeys":["RenderContext","inner class RenderContext : BaseRenderContext<PropsT, StateT, OutputT> ","com.squareup.workflow1.StatefulWorkflow.RenderContext"]},{"name":"inner class Updater(val props: PropsT, var state: StateT)","description":"com.squareup.workflow1.WorkflowAction.Updater","location":"workflow-core/com.squareup.workflow1/-workflow-action/-updater/index.html","searchKeys":["Updater","inner class Updater(val props: PropsT, var state: StateT)","com.squareup.workflow1.WorkflowAction.Updater"]},{"name":"interface ActionProcessingResult","description":"com.squareup.workflow1.ActionProcessingResult","location":"workflow-core/com.squareup.workflow1/-action-processing-result/index.html","searchKeys":["ActionProcessingResult","interface ActionProcessingResult","com.squareup.workflow1.ActionProcessingResult"]},{"name":"interface BaseRenderContext<out PropsT, StateT, in OutputT>","description":"com.squareup.workflow1.BaseRenderContext","location":"workflow-core/com.squareup.workflow1/-base-render-context/index.html","searchKeys":["BaseRenderContext","interface BaseRenderContext<out PropsT, StateT, in OutputT>","com.squareup.workflow1.BaseRenderContext"]},{"name":"interface IdCacheable","description":"com.squareup.workflow1.IdCacheable","location":"workflow-core/com.squareup.workflow1/-id-cacheable/index.html","searchKeys":["IdCacheable","interface IdCacheable","com.squareup.workflow1.IdCacheable"]},{"name":"interface ImpostorWorkflow","description":"com.squareup.workflow1.ImpostorWorkflow","location":"workflow-core/com.squareup.workflow1/-impostor-workflow/index.html","searchKeys":["ImpostorWorkflow","interface ImpostorWorkflow","com.squareup.workflow1.ImpostorWorkflow"]},{"name":"interface Worker<out OutputT>","description":"com.squareup.workflow1.Worker","location":"workflow-core/com.squareup.workflow1/-worker/index.html","searchKeys":["Worker","interface Worker<out OutputT>","com.squareup.workflow1.Worker"]},{"name":"interface Workflow<in PropsT, out OutputT, out RenderingT>","description":"com.squareup.workflow1.Workflow","location":"workflow-core/com.squareup.workflow1/-workflow/index.html","searchKeys":["Workflow","interface Workflow<in PropsT, out OutputT, out RenderingT>","com.squareup.workflow1.Workflow"]},{"name":"object ActionsExhausted : ActionProcessingResult","description":"com.squareup.workflow1.ActionsExhausted","location":"workflow-core/com.squareup.workflow1/-actions-exhausted/index.html","searchKeys":["ActionsExhausted","object ActionsExhausted : ActionProcessingResult","com.squareup.workflow1.ActionsExhausted"]},{"name":"object Companion","description":"com.squareup.workflow1.Snapshot.Companion","location":"workflow-core/com.squareup.workflow1/-snapshot/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.Snapshot.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.Worker.Companion","location":"workflow-core/com.squareup.workflow1/-worker/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.Worker.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.Workflow.Companion","location":"workflow-core/com.squareup.workflow1/-workflow/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.Workflow.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.WorkflowAction.Companion","location":"workflow-core/com.squareup.workflow1/-workflow-action/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.WorkflowAction.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.WorkflowIdentifier.Companion","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.WorkflowIdentifier.Companion"]},{"name":"object PropsUpdated : ActionProcessingResult","description":"com.squareup.workflow1.PropsUpdated","location":"workflow-core/com.squareup.workflow1/-props-updated/index.html","searchKeys":["PropsUpdated","object PropsUpdated : ActionProcessingResult","com.squareup.workflow1.PropsUpdated"]},{"name":"open fun <E1, E2, E3, E4, E5, E6, E7, E8, E9, E10> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8, E9, E10) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5, E6, E7, E8, E9, E10> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8, E9, E10) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4, E5, E6, E7, E8, E9> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8, E9) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8, E9) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5, E6, E7, E8, E9> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8, E9) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8, E9) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4, E5, E6, E7, E8> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5, E6, E7, E8> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7, E8) -> Unit): (E1, E2, E3, E4, E5, E6, E7, E8) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4, E5, E6, E7> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7) -> Unit): (E1, E2, E3, E4, E5, E6, E7) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5, E6, E7> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6, E7) -> Unit): (E1, E2, E3, E4, E5, E6, E7) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4, E5, E6> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6) -> Unit): (E1, E2, E3, E4, E5, E6) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5, E6> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5, E6) -> Unit): (E1, E2, E3, E4, E5, E6) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4, E5> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5) -> Unit): (E1, E2, E3, E4, E5) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4, E5> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4, E5) -> Unit): (E1, E2, E3, E4, E5) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3, E4> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4) -> Unit): (E1, E2, E3, E4) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3, E4> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3, E4) -> Unit): (E1, E2, E3, E4) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2, E3> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3) -> Unit): (E1, E2, E3) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2, E3> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2, E3) -> Unit): (E1, E2, E3) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <E1, E2> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2) -> Unit): (E1, E2) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <E1, E2> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(E1, E2) -> Unit): (E1, E2) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun <EventT> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(EventT) -> Unit): (EventT) -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun <EventT> eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.(EventT) -> Unit): (EventT) -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun describeRealIdentifier(): String?","description":"com.squareup.workflow1.ImpostorWorkflow.describeRealIdentifier","location":"workflow-core/com.squareup.workflow1/-impostor-workflow/describe-real-identifier.html","searchKeys":["describeRealIdentifier","open fun describeRealIdentifier(): String?","com.squareup.workflow1.ImpostorWorkflow.describeRealIdentifier"]},{"name":"open fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","description":"com.squareup.workflow1.Worker.doesSameWorkAs","location":"workflow-core/com.squareup.workflow1/-worker/does-same-work-as.html","searchKeys":["doesSameWorkAs","open fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","com.squareup.workflow1.Worker.doesSameWorkAs"]},{"name":"open fun eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): () -> Unit","description":"com.squareup.workflow1.BaseRenderContext.eventHandler","location":"workflow-core/com.squareup.workflow1/-base-render-context/event-handler.html","searchKeys":["eventHandler","open fun eventHandler(name: () -> String = { \"eventHandler\" }, update: WorkflowAction.Updater<PropsT, StateT, OutputT>.() -> Unit): () -> Unit","com.squareup.workflow1.BaseRenderContext.eventHandler"]},{"name":"open fun initialState(props: PropsT, snapshot: Snapshot?, workflowScope: CoroutineScope): StateT","description":"com.squareup.workflow1.StatefulWorkflow.initialState","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/initial-state.html","searchKeys":["initialState","open fun initialState(props: PropsT, snapshot: Snapshot?, workflowScope: CoroutineScope): StateT","com.squareup.workflow1.StatefulWorkflow.initialState"]},{"name":"open fun onPropsChanged(old: PropsT, new: PropsT, state: StateT): StateT","description":"com.squareup.workflow1.StatefulWorkflow.onPropsChanged","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/on-props-changed.html","searchKeys":["onPropsChanged","open fun onPropsChanged(old: PropsT, new: PropsT, state: StateT): StateT","com.squareup.workflow1.StatefulWorkflow.onPropsChanged"]},{"name":"open fun onStarted()","description":"com.squareup.workflow1.LifecycleWorker.onStarted","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/on-started.html","searchKeys":["onStarted","open fun onStarted()","com.squareup.workflow1.LifecycleWorker.onStarted"]},{"name":"open fun onStopped()","description":"com.squareup.workflow1.LifecycleWorker.onStopped","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/on-stopped.html","searchKeys":["onStopped","open fun onStopped()","com.squareup.workflow1.LifecycleWorker.onStopped"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.ActionApplied.equals","location":"workflow-core/com.squareup.workflow1/-action-applied/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.ActionApplied.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.Snapshot.equals","location":"workflow-core/com.squareup.workflow1/-snapshot/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.Snapshot.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.WorkflowIdentifier.equals","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.WorkflowIdentifier.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.WorkflowOutput.equals","location":"workflow-core/com.squareup.workflow1/-workflow-output/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.WorkflowOutput.equals"]},{"name":"open override fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","description":"com.squareup.workflow1.LifecycleWorker.doesSameWorkAs","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/does-same-work-as.html","searchKeys":["doesSameWorkAs","open override fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","com.squareup.workflow1.LifecycleWorker.doesSameWorkAs"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.ActionApplied.hashCode","location":"workflow-core/com.squareup.workflow1/-action-applied/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.ActionApplied.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.Snapshot.hashCode","location":"workflow-core/com.squareup.workflow1/-snapshot/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.Snapshot.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.WorkflowIdentifier.hashCode","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.WorkflowIdentifier.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.WorkflowOutput.hashCode","location":"workflow-core/com.squareup.workflow1/-workflow-output/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.WorkflowOutput.hashCode"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.ActionApplied.toString","location":"workflow-core/com.squareup.workflow1/-action-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.ActionApplied.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.Snapshot.toString","location":"workflow-core/com.squareup.workflow1/-snapshot/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.Snapshot.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.WorkflowIdentifier.toString","location":"workflow-core/com.squareup.workflow1/-workflow-identifier/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.WorkflowIdentifier.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.WorkflowOutput.toString","location":"workflow-core/com.squareup.workflow1/-workflow-output/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.WorkflowOutput.toString"]},{"name":"open override val typeName: String","description":"com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.typeName","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-snapshottable/type-name.html","searchKeys":["typeName","open override val typeName: String","com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.typeName"]},{"name":"open override val typeName: String","description":"com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.typeName","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-unsnapshottable/type-name.html","searchKeys":["typeName","open override val typeName: String","com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.typeName"]},{"name":"open override var cachedIdentifier: WorkflowIdentifier?","description":"com.squareup.workflow1.StatefulWorkflow.cachedIdentifier","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/cached-identifier.html","searchKeys":["cachedIdentifier","open override var cachedIdentifier: WorkflowIdentifier?","com.squareup.workflow1.StatefulWorkflow.cachedIdentifier"]},{"name":"open override var cachedIdentifier: WorkflowIdentifier?","description":"com.squareup.workflow1.StatelessWorkflow.cachedIdentifier","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/cached-identifier.html","searchKeys":["cachedIdentifier","open override var cachedIdentifier: WorkflowIdentifier?","com.squareup.workflow1.StatelessWorkflow.cachedIdentifier"]},{"name":"override fun asStatefulWorkflow(): StatefulWorkflow<PropsT, *, OutputT, RenderingT>","description":"com.squareup.workflow1.StatelessWorkflow.asStatefulWorkflow","location":"workflow-core/com.squareup.workflow1/-stateless-workflow/as-stateful-workflow.html","searchKeys":["asStatefulWorkflow","override fun asStatefulWorkflow(): StatefulWorkflow<PropsT, *, OutputT, RenderingT>","com.squareup.workflow1.StatelessWorkflow.asStatefulWorkflow"]},{"name":"override fun asStatefulWorkflow(): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.StatefulWorkflow.asStatefulWorkflow","location":"workflow-core/com.squareup.workflow1/-stateful-workflow/as-stateful-workflow.html","searchKeys":["asStatefulWorkflow","override fun asStatefulWorkflow(): StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.StatefulWorkflow.asStatefulWorkflow"]},{"name":"override fun initialState(props: PropsT, snapshot: Snapshot?): StateT","description":"com.squareup.workflow1.SessionWorkflow.initialState","location":"workflow-core/com.squareup.workflow1/-session-workflow/initial-state.html","searchKeys":["initialState","override fun initialState(props: PropsT, snapshot: Snapshot?): StateT","com.squareup.workflow1.SessionWorkflow.initialState"]},{"name":"override fun run(): Flow<Nothing>","description":"com.squareup.workflow1.LifecycleWorker.run","location":"workflow-core/com.squareup.workflow1/-lifecycle-worker/run.html","searchKeys":["run","override fun run(): Flow<Nothing>","com.squareup.workflow1.LifecycleWorker.run"]},{"name":"sealed class WorkflowIdentifierType","description":"com.squareup.workflow1.WorkflowIdentifierType","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/index.html","searchKeys":["WorkflowIdentifierType","sealed class WorkflowIdentifierType","com.squareup.workflow1.WorkflowIdentifierType"]},{"name":"val KClass<out Workflow<*, *, *>>.workflowIdentifier: WorkflowIdentifier","description":"com.squareup.workflow1.workflowIdentifier","location":"workflow-core/com.squareup.workflow1/workflow-identifier.html","searchKeys":["workflowIdentifier","val KClass<out Workflow<*, *, *>>.workflowIdentifier: WorkflowIdentifier","com.squareup.workflow1.workflowIdentifier"]},{"name":"val Workflow<*, *, *>.computedIdentifier: WorkflowIdentifier","description":"com.squareup.workflow1.computedIdentifier","location":"workflow-core/com.squareup.workflow1/computed-identifier.html","searchKeys":["computedIdentifier","val Workflow<*, *, *>.computedIdentifier: WorkflowIdentifier","com.squareup.workflow1.computedIdentifier"]},{"name":"val Workflow<*, *, *>.identifier: WorkflowIdentifier","description":"com.squareup.workflow1.identifier","location":"workflow-core/com.squareup.workflow1/identifier.html","searchKeys":["identifier","val Workflow<*, *, *>.identifier: WorkflowIdentifier","com.squareup.workflow1.identifier"]},{"name":"val bytes: ByteString","description":"com.squareup.workflow1.Snapshot.bytes","location":"workflow-core/com.squareup.workflow1/-snapshot/bytes.html","searchKeys":["bytes","val bytes: ByteString","com.squareup.workflow1.Snapshot.bytes"]},{"name":"val kClass: KClass<*>? = null","description":"com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.kClass","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-snapshottable/k-class.html","searchKeys":["kClass","val kClass: KClass<*>? = null","com.squareup.workflow1.WorkflowIdentifierType.Snapshottable.kClass"]},{"name":"val kType: KType","description":"com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.kType","location":"workflow-core/com.squareup.workflow1/-workflow-identifier-type/-unsnapshottable/k-type.html","searchKeys":["kType","val kType: KType","com.squareup.workflow1.WorkflowIdentifierType.Unsnapshottable.kType"]},{"name":"val output: WorkflowOutput<OutputT>?","description":"com.squareup.workflow1.ActionApplied.output","location":"workflow-core/com.squareup.workflow1/-action-applied/output.html","searchKeys":["output","val output: WorkflowOutput<OutputT>?","com.squareup.workflow1.ActionApplied.output"]},{"name":"val props: PropsT","description":"com.squareup.workflow1.WorkflowAction.Updater.props","location":"workflow-core/com.squareup.workflow1/-workflow-action/-updater/props.html","searchKeys":["props","val props: PropsT","com.squareup.workflow1.WorkflowAction.Updater.props"]},{"name":"val stateChanged: Boolean = false","description":"com.squareup.workflow1.ActionApplied.stateChanged","location":"workflow-core/com.squareup.workflow1/-action-applied/state-changed.html","searchKeys":["stateChanged","val stateChanged: Boolean = false","com.squareup.workflow1.ActionApplied.stateChanged"]},{"name":"val value: OutputT","description":"com.squareup.workflow1.WorkflowOutput.value","location":"workflow-core/com.squareup.workflow1/-workflow-output/value.html","searchKeys":["value","val value: OutputT","com.squareup.workflow1.WorkflowOutput.value"]},{"name":"var state: StateT","description":"com.squareup.workflow1.WorkflowAction.Updater.state","location":"workflow-core/com.squareup.workflow1/-workflow-action/-updater/state.html","searchKeys":["state","var state: StateT","com.squareup.workflow1.WorkflowAction.Updater.state"]},{"name":"First","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.First","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/-first/index.html","searchKeys":["First","First","com.squareup.workflow1.ui.navigation.BackStackConfig.First"]},{"name":"NEGATIVE","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.NEGATIVE","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/-n-e-g-a-t-i-v-e/index.html","searchKeys":["NEGATIVE","NEGATIVE","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.NEGATIVE"]},{"name":"NEUTRAL","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.NEUTRAL","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/-n-e-u-t-r-a-l/index.html","searchKeys":["NEUTRAL","NEUTRAL","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.NEUTRAL"]},{"name":"None","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.None","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/-none/index.html","searchKeys":["None","None","com.squareup.workflow1.ui.navigation.BackStackConfig.None"]},{"name":"Other","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.Other","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/-other/index.html","searchKeys":["Other","Other","com.squareup.workflow1.ui.navigation.BackStackConfig.Other"]},{"name":"POSITIVE","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.POSITIVE","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/-p-o-s-i-t-i-v-e/index.html","searchKeys":["POSITIVE","POSITIVE","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.POSITIVE"]},{"name":"abstract class ViewEnvironmentKey<T : Any>","description":"com.squareup.workflow1.ui.ViewEnvironmentKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/index.html","searchKeys":["ViewEnvironmentKey","abstract class ViewEnvironmentKey<T : Any>","com.squareup.workflow1.ui.ViewEnvironmentKey"]},{"name":"abstract fun <D : BaseT> map(transform: (C) -> D): Container<BaseT, D>","description":"com.squareup.workflow1.ui.Container.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-container/map.html","searchKeys":["map","abstract fun <D : BaseT> map(transform: (C) -> D): Container<BaseT, D>","com.squareup.workflow1.ui.Container.map"]},{"name":"abstract fun <RenderingT : Any> getEntryFor(renderingType: KClass<out RenderingT>): ViewRegistry.Entry<RenderingT>?","description":"com.squareup.workflow1.ui.ViewRegistry.getEntryFor","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/get-entry-for.html","searchKeys":["getEntryFor","abstract fun <RenderingT : Any> getEntryFor(renderingType: KClass<out RenderingT>): ViewRegistry.Entry<RenderingT>?","com.squareup.workflow1.ui.ViewRegistry.getEntryFor"]},{"name":"abstract fun asSequence(): Sequence<C>","description":"com.squareup.workflow1.ui.Container.asSequence","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-container/as-sequence.html","searchKeys":["asSequence","abstract fun asSequence(): Sequence<C>","com.squareup.workflow1.ui.Container.asSequence"]},{"name":"abstract override fun <ContentU : Screen> map(transform: (ContentT) -> ContentU): ScreenOverlay<ContentU>","description":"com.squareup.workflow1.ui.navigation.ScreenOverlay.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-screen-overlay/map.html","searchKeys":["map","abstract override fun <ContentU : Screen> map(transform: (ContentT) -> ContentU): ScreenOverlay<ContentU>","com.squareup.workflow1.ui.navigation.ScreenOverlay.map"]},{"name":"abstract override fun <D : BaseT> map(transform: (C) -> D): Wrapper<BaseT, D>","description":"com.squareup.workflow1.ui.Wrapper.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-wrapper/map.html","searchKeys":["map","abstract override fun <D : BaseT> map(transform: (C) -> D): Wrapper<BaseT, D>","com.squareup.workflow1.ui.Wrapper.map"]},{"name":"abstract override val content: ContentT","description":"com.squareup.workflow1.ui.navigation.ScreenOverlay.content","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-screen-overlay/content.html","searchKeys":["content","abstract override val content: ContentT","com.squareup.workflow1.ui.navigation.ScreenOverlay.content"]},{"name":"abstract val compatibilityKey: String","description":"com.squareup.workflow1.ui.Compatible.compatibilityKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-compatible/compatibility-key.html","searchKeys":["compatibilityKey","abstract val compatibilityKey: String","com.squareup.workflow1.ui.Compatible.compatibilityKey"]},{"name":"abstract val content: C","description":"com.squareup.workflow1.ui.Wrapper.content","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-wrapper/content.html","searchKeys":["content","abstract val content: C","com.squareup.workflow1.ui.Wrapper.content"]},{"name":"abstract val default: T","description":"com.squareup.workflow1.ui.ViewEnvironmentKey.default","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/default.html","searchKeys":["default","abstract val default: T","com.squareup.workflow1.ui.ViewEnvironmentKey.default"]},{"name":"abstract val keys: Set<KClass<*>>","description":"com.squareup.workflow1.ui.ViewRegistry.keys","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/keys.html","searchKeys":["keys","abstract val keys: Set<KClass<*>>","com.squareup.workflow1.ui.ViewRegistry.keys"]},{"name":"abstract val onTextChanged: Flow<String>","description":"com.squareup.workflow1.ui.TextController.onTextChanged","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-text-controller/on-text-changed.html","searchKeys":["onTextChanged","abstract val onTextChanged: Flow<String>","com.squareup.workflow1.ui.TextController.onTextChanged"]},{"name":"abstract val type: KClass<in RenderingT>","description":"com.squareup.workflow1.ui.ViewRegistry.Entry.type","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/-entry/type.html","searchKeys":["type","abstract val type: KClass<in RenderingT>","com.squareup.workflow1.ui.ViewRegistry.Entry.type"]},{"name":"abstract var textValue: String","description":"com.squareup.workflow1.ui.TextController.textValue","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-text-controller/text-value.html","searchKeys":["textValue","abstract var textValue: String","com.squareup.workflow1.ui.TextController.textValue"]},{"name":"annotation class WorkflowUiExperimentalApi","description":"com.squareup.workflow1.ui.WorkflowUiExperimentalApi","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-workflow-ui-experimental-api/index.html","searchKeys":["WorkflowUiExperimentalApi","annotation class WorkflowUiExperimentalApi","com.squareup.workflow1.ui.WorkflowUiExperimentalApi"]},{"name":"class BackStackScreen<out StackedT : Screen> : Screen, Container<Screen, StackedT> ","description":"com.squareup.workflow1.ui.navigation.BackStackScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/index.html","searchKeys":["BackStackScreen","class BackStackScreen<out StackedT : Screen> : Screen, Container<Screen, StackedT> ","com.squareup.workflow1.ui.navigation.BackStackScreen"]},{"name":"class BodyAndOverlaysScreen<B : Screen, O : Overlay>(val body: B, val overlays: List<O> = emptyList(), val name: String = \"\") : Screen, Compatible","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/index.html","searchKeys":["BodyAndOverlaysScreen","class BodyAndOverlaysScreen<B : Screen, O : Overlay>(val body: B, val overlays: List<O> = emptyList(), val name: String = \"\") : Screen, Compatible","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen"]},{"name":"class EnvironmentScreen<out C : Screen>(val content: C, val environment: ViewEnvironment = ViewEnvironment.EMPTY) : Wrapper<Screen, C> , Screen","description":"com.squareup.workflow1.ui.EnvironmentScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-environment-screen/index.html","searchKeys":["EnvironmentScreen","class EnvironmentScreen<out C : Screen>(val content: C, val environment: ViewEnvironment = ViewEnvironment.EMPTY) : Wrapper<Screen, C> , Screen","com.squareup.workflow1.ui.EnvironmentScreen"]},{"name":"class FullScreenModal<out C : Screen>(val content: C) : ScreenOverlay<C> , ModalOverlay","description":"com.squareup.workflow1.ui.navigation.FullScreenModal","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-full-screen-modal/index.html","searchKeys":["FullScreenModal","class FullScreenModal<out C : Screen>(val content: C) : ScreenOverlay<C> , ModalOverlay","com.squareup.workflow1.ui.navigation.FullScreenModal"]},{"name":"class ViewEnvironment","description":"com.squareup.workflow1.ui.ViewEnvironment","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/index.html","searchKeys":["ViewEnvironment","class ViewEnvironment","com.squareup.workflow1.ui.ViewEnvironment"]},{"name":"constructor()","description":"com.squareup.workflow1.ui.ViewEnvironmentKey.ViewEnvironmentKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/-view-environment-key.html","searchKeys":["ViewEnvironmentKey","constructor()","com.squareup.workflow1.ui.ViewEnvironmentKey.ViewEnvironmentKey"]},{"name":"constructor(body: B, overlays: List<O> = emptyList(), name: String = \"\")","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.BodyAndOverlaysScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/-body-and-overlays-screen.html","searchKeys":["BodyAndOverlaysScreen","constructor(body: B, overlays: List<O> = emptyList(), name: String = \"\")","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.BodyAndOverlaysScreen"]},{"name":"constructor(bottom: StackedT, vararg rest: StackedT)","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.BackStackScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/-back-stack-screen.html","searchKeys":["BackStackScreen","constructor(bottom: StackedT, vararg rest: StackedT)","com.squareup.workflow1.ui.navigation.BackStackScreen.BackStackScreen"]},{"name":"constructor(button: AlertOverlay.Button)","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked.ButtonClicked","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-event/-button-clicked/-button-clicked.html","searchKeys":["ButtonClicked","constructor(button: AlertOverlay.Button)","com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked.ButtonClicked"]},{"name":"constructor(buttons: Map<AlertOverlay.Button, String> = emptyMap(), message: String = \"\", title: String = \"\", cancelable: Boolean = true, onEvent: (AlertOverlay.Event) -> Unit)","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.AlertOverlay","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-alert-overlay.html","searchKeys":["AlertOverlay","constructor(buttons: Map<AlertOverlay.Button, String> = emptyMap(), message: String = \"\", title: String = \"\", cancelable: Boolean = true, onEvent: (AlertOverlay.Event) -> Unit)","com.squareup.workflow1.ui.navigation.AlertOverlay.AlertOverlay"]},{"name":"constructor(content: C)","description":"com.squareup.workflow1.ui.navigation.FullScreenModal.FullScreenModal","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-full-screen-modal/-full-screen-modal.html","searchKeys":["FullScreenModal","constructor(content: C)","com.squareup.workflow1.ui.navigation.FullScreenModal.FullScreenModal"]},{"name":"constructor(content: C, environment: ViewEnvironment = ViewEnvironment.EMPTY)","description":"com.squareup.workflow1.ui.EnvironmentScreen.EnvironmentScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-environment-screen/-environment-screen.html","searchKeys":["EnvironmentScreen","constructor(content: C, environment: ViewEnvironment = ViewEnvironment.EMPTY)","com.squareup.workflow1.ui.EnvironmentScreen.EnvironmentScreen"]},{"name":"constructor(content: C, name: String)","description":"com.squareup.workflow1.ui.NamedScreen.NamedScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/-named-screen.html","searchKeys":["NamedScreen","constructor(content: C, name: String)","com.squareup.workflow1.ui.NamedScreen.NamedScreen"]},{"name":"data class AlertOverlay(val buttons: Map<AlertOverlay.Button, String> = emptyMap(), val message: String = \"\", val title: String = \"\", val cancelable: Boolean = true, val onEvent: (AlertOverlay.Event) -> Unit) : ModalOverlay","description":"com.squareup.workflow1.ui.navigation.AlertOverlay","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/index.html","searchKeys":["AlertOverlay","data class AlertOverlay(val buttons: Map<AlertOverlay.Button, String> = emptyMap(), val message: String = \"\", val title: String = \"\", val cancelable: Boolean = true, val onEvent: (AlertOverlay.Event) -> Unit) : ModalOverlay","com.squareup.workflow1.ui.navigation.AlertOverlay"]},{"name":"data class ButtonClicked(val button: AlertOverlay.Button) : AlertOverlay.Event","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-event/-button-clicked/index.html","searchKeys":["ButtonClicked","data class ButtonClicked(val button: AlertOverlay.Button) : AlertOverlay.Event","com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked"]},{"name":"data class NamedScreen<out C : Screen>(val content: C, val name: String) : Screen, Wrapper<Screen, C> ","description":"com.squareup.workflow1.ui.NamedScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/index.html","searchKeys":["NamedScreen","data class NamedScreen<out C : Screen>(val content: C, val name: String) : Screen, Wrapper<Screen, C> ","com.squareup.workflow1.ui.NamedScreen"]},{"name":"enum BackStackConfig : Enum<BackStackConfig> ","description":"com.squareup.workflow1.ui.navigation.BackStackConfig","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/index.html","searchKeys":["BackStackConfig","enum BackStackConfig : Enum<BackStackConfig> ","com.squareup.workflow1.ui.navigation.BackStackConfig"]},{"name":"enum Button : Enum<AlertOverlay.Button> ","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/index.html","searchKeys":["Button","enum Button : Enum<AlertOverlay.Button> ","com.squareup.workflow1.ui.navigation.AlertOverlay.Button"]},{"name":"fun <N : Overlay> mapOverlays(transform: (O) -> N): BodyAndOverlaysScreen<B, N>","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.mapOverlays","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/map-overlays.html","searchKeys":["mapOverlays","fun <N : Overlay> mapOverlays(transform: (O) -> N): BodyAndOverlaysScreen<B, N>","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.mapOverlays"]},{"name":"fun <R : Screen> mapIndexed(transform: (index: Int, StackedT) -> R): BackStackScreen<R>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.mapIndexed","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/map-indexed.html","searchKeys":["mapIndexed","fun <R : Screen> mapIndexed(transform: (index: Int, StackedT) -> R): BackStackScreen<R>","com.squareup.workflow1.ui.navigation.BackStackScreen.mapIndexed"]},{"name":"fun <S : Screen> mapBody(transform: (B) -> S): BodyAndOverlaysScreen<S, O>","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.mapBody","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/map-body.html","searchKeys":["mapBody","fun <S : Screen> mapBody(transform: (B) -> S): BodyAndOverlaysScreen<S, O>","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.mapBody"]},{"name":"fun <T : Screen> List<T>.toBackStackScreen(): BackStackScreen<T>","description":"com.squareup.workflow1.ui.navigation.toBackStackScreen","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/to-back-stack-screen.html","searchKeys":["toBackStackScreen","fun <T : Screen> List<T>.toBackStackScreen(): BackStackScreen<T>","com.squareup.workflow1.ui.navigation.toBackStackScreen"]},{"name":"fun <T : Screen> List<T>.toBackStackScreenOrNull(): BackStackScreen<T>?","description":"com.squareup.workflow1.ui.navigation.toBackStackScreenOrNull","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/to-back-stack-screen-or-null.html","searchKeys":["toBackStackScreenOrNull","fun <T : Screen> List<T>.toBackStackScreenOrNull(): BackStackScreen<T>?","com.squareup.workflow1.ui.navigation.toBackStackScreenOrNull"]},{"name":"fun <T : Screen> fromList(frames: List<T>): BackStackScreen<T>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.Companion.fromList","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/-companion/from-list.html","searchKeys":["fromList","fun <T : Screen> fromList(frames: List<T>): BackStackScreen<T>","com.squareup.workflow1.ui.navigation.BackStackScreen.Companion.fromList"]},{"name":"fun <T : Screen> fromListOrNull(frames: List<T>): BackStackScreen<T>?","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.Companion.fromListOrNull","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/-companion/from-list-or-null.html","searchKeys":["fromListOrNull","fun <T : Screen> fromListOrNull(frames: List<T>): BackStackScreen<T>?","com.squareup.workflow1.ui.navigation.BackStackScreen.Companion.fromListOrNull"]},{"name":"fun Screen.withEnvironment(environment: ViewEnvironment = ViewEnvironment.EMPTY): EnvironmentScreen<*>","description":"com.squareup.workflow1.ui.withEnvironment","location":"workflow-ui/core-common/com.squareup.workflow1.ui/with-environment.html","searchKeys":["withEnvironment","fun Screen.withEnvironment(environment: ViewEnvironment = ViewEnvironment.EMPTY): EnvironmentScreen<*>","com.squareup.workflow1.ui.withEnvironment"]},{"name":"fun Screen.withRegistry(viewRegistry: ViewRegistry): EnvironmentScreen<*>","description":"com.squareup.workflow1.ui.withRegistry","location":"workflow-ui/core-common/com.squareup.workflow1.ui/with-registry.html","searchKeys":["withRegistry","fun Screen.withRegistry(viewRegistry: ViewRegistry): EnvironmentScreen<*>","com.squareup.workflow1.ui.withRegistry"]},{"name":"fun TextController(initialValue: String = \"\"): TextController","description":"com.squareup.workflow1.ui.TextController","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-text-controller.html","searchKeys":["TextController","fun TextController(initialValue: String = \"\"): TextController","com.squareup.workflow1.ui.TextController"]},{"name":"fun ViewRegistry(): ViewRegistry","description":"com.squareup.workflow1.ui.ViewRegistry","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry.html","searchKeys":["ViewRegistry","fun ViewRegistry(): ViewRegistry","com.squareup.workflow1.ui.ViewRegistry"]},{"name":"fun ViewRegistry(vararg bindings: ViewRegistry.Entry<*>): ViewRegistry","description":"com.squareup.workflow1.ui.ViewRegistry","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry.html","searchKeys":["ViewRegistry","fun ViewRegistry(vararg bindings: ViewRegistry.Entry<*>): ViewRegistry","com.squareup.workflow1.ui.ViewRegistry"]},{"name":"fun compatible(me: Any, you: Any): Boolean","description":"com.squareup.workflow1.ui.compatible","location":"workflow-ui/core-common/com.squareup.workflow1.ui/compatible.html","searchKeys":["compatible","fun compatible(me: Any, you: Any): Boolean","com.squareup.workflow1.ui.compatible"]},{"name":"fun keyFor(value: Any, name: String = \"\"): String","description":"com.squareup.workflow1.ui.Compatible.Companion.keyFor","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-compatible/-companion/key-for.html","searchKeys":["keyFor","fun keyFor(value: Any, name: String = \"\"): String","com.squareup.workflow1.ui.Compatible.Companion.keyFor"]},{"name":"fun valueOf(value: String): AlertOverlay.Button","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.valueOf","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AlertOverlay.Button","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.valueOf"]},{"name":"fun valueOf(value: String): BackStackConfig","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.valueOf","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BackStackConfig","com.squareup.workflow1.ui.navigation.BackStackConfig.valueOf"]},{"name":"fun values(): Array<AlertOverlay.Button>","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.values","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/values.html","searchKeys":["values","fun values(): Array<AlertOverlay.Button>","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.values"]},{"name":"fun values(): Array<BackStackConfig>","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.values","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/values.html","searchKeys":["values","fun values(): Array<BackStackConfig>","com.squareup.workflow1.ui.navigation.BackStackConfig.values"]},{"name":"infix fun ViewRegistry.merge(other: ViewRegistry): ViewRegistry","description":"com.squareup.workflow1.ui.merge","location":"workflow-ui/core-common/com.squareup.workflow1.ui/merge.html","searchKeys":["merge","infix fun ViewRegistry.merge(other: ViewRegistry): ViewRegistry","com.squareup.workflow1.ui.merge"]},{"name":"inline operator fun <RenderingT : Any> ViewRegistry.get(renderingType: KClass<out RenderingT>): ViewRegistry.Entry<RenderingT>?","description":"com.squareup.workflow1.ui.get","location":"workflow-ui/core-common/com.squareup.workflow1.ui/get.html","searchKeys":["get","inline operator fun <RenderingT : Any> ViewRegistry.get(renderingType: KClass<out RenderingT>): ViewRegistry.Entry<RenderingT>?","com.squareup.workflow1.ui.get"]},{"name":"interface Compatible","description":"com.squareup.workflow1.ui.Compatible","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-compatible/index.html","searchKeys":["Compatible","interface Compatible","com.squareup.workflow1.ui.Compatible"]},{"name":"interface Container<BaseT, out C : BaseT>","description":"com.squareup.workflow1.ui.Container","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-container/index.html","searchKeys":["Container","interface Container<BaseT, out C : BaseT>","com.squareup.workflow1.ui.Container"]},{"name":"interface Entry<in RenderingT : Any>","description":"com.squareup.workflow1.ui.ViewRegistry.Entry","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/-entry/index.html","searchKeys":["Entry","interface Entry<in RenderingT : Any>","com.squareup.workflow1.ui.ViewRegistry.Entry"]},{"name":"interface ModalOverlay : Overlay","description":"com.squareup.workflow1.ui.navigation.ModalOverlay","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-modal-overlay/index.html","searchKeys":["ModalOverlay","interface ModalOverlay : Overlay","com.squareup.workflow1.ui.navigation.ModalOverlay"]},{"name":"interface Overlay","description":"com.squareup.workflow1.ui.navigation.Overlay","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-overlay/index.html","searchKeys":["Overlay","interface Overlay","com.squareup.workflow1.ui.navigation.Overlay"]},{"name":"interface Screen","description":"com.squareup.workflow1.ui.Screen","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-screen/index.html","searchKeys":["Screen","interface Screen","com.squareup.workflow1.ui.Screen"]},{"name":"interface ScreenOverlay<out ContentT : Screen> : Overlay, Wrapper<Screen, ContentT> ","description":"com.squareup.workflow1.ui.navigation.ScreenOverlay","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-screen-overlay/index.html","searchKeys":["ScreenOverlay","interface ScreenOverlay<out ContentT : Screen> : Overlay, Wrapper<Screen, ContentT> ","com.squareup.workflow1.ui.navigation.ScreenOverlay"]},{"name":"interface TextController","description":"com.squareup.workflow1.ui.TextController","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-text-controller/index.html","searchKeys":["TextController","interface TextController","com.squareup.workflow1.ui.TextController"]},{"name":"interface ViewRegistry","description":"com.squareup.workflow1.ui.ViewRegistry","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/index.html","searchKeys":["ViewRegistry","interface ViewRegistry","com.squareup.workflow1.ui.ViewRegistry"]},{"name":"interface Wrapper<BaseT : Any, out C : BaseT> : Container<BaseT, C> , Compatible","description":"com.squareup.workflow1.ui.Wrapper","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-wrapper/index.html","searchKeys":["Wrapper","interface Wrapper<BaseT : Any, out C : BaseT> : Container<BaseT, C> , Compatible","com.squareup.workflow1.ui.Wrapper"]},{"name":"object Canceled : AlertOverlay.Event","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Event.Canceled","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-event/-canceled/index.html","searchKeys":["Canceled","object Canceled : AlertOverlay.Event","com.squareup.workflow1.ui.navigation.AlertOverlay.Event.Canceled"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.Compatible.Companion","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-compatible/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.Compatible.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.ViewEnvironment.Companion","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.ViewEnvironment.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.Companion","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.navigation.BackStackScreen.Companion"]},{"name":"object Companion : ViewEnvironmentKey<BackStackConfig> ","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.Companion","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/-companion/index.html","searchKeys":["Companion","object Companion : ViewEnvironmentKey<BackStackConfig> ","com.squareup.workflow1.ui.navigation.BackStackConfig.Companion"]},{"name":"object Companion : ViewEnvironmentKey<ViewRegistry> ","description":"com.squareup.workflow1.ui.ViewRegistry.Companion","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/-companion/index.html","searchKeys":["Companion","object Companion : ViewEnvironmentKey<ViewRegistry> ","com.squareup.workflow1.ui.ViewRegistry.Companion"]},{"name":"open fun combine(left: T, right: T): T","description":"com.squareup.workflow1.ui.ViewEnvironmentKey.combine","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/combine.html","searchKeys":["combine","open fun combine(left: T, right: T): T","com.squareup.workflow1.ui.ViewEnvironmentKey.combine"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.ui.ViewEnvironment.equals","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.ui.ViewEnvironment.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.equals","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.ui.navigation.AlertOverlay.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.equals","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.ui.navigation.BackStackScreen.equals"]},{"name":"open override fun <D : Screen> map(transform: (C) -> D): EnvironmentScreen<D>","description":"com.squareup.workflow1.ui.EnvironmentScreen.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-environment-screen/map.html","searchKeys":["map","open override fun <D : Screen> map(transform: (C) -> D): EnvironmentScreen<D>","com.squareup.workflow1.ui.EnvironmentScreen.map"]},{"name":"open override fun <D : Screen> map(transform: (C) -> D): FullScreenModal<D>","description":"com.squareup.workflow1.ui.navigation.FullScreenModal.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-full-screen-modal/map.html","searchKeys":["map","open override fun <D : Screen> map(transform: (C) -> D): FullScreenModal<D>","com.squareup.workflow1.ui.navigation.FullScreenModal.map"]},{"name":"open override fun <D : Screen> map(transform: (C) -> D): NamedScreen<D>","description":"com.squareup.workflow1.ui.NamedScreen.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/map.html","searchKeys":["map","open override fun <D : Screen> map(transform: (C) -> D): NamedScreen<D>","com.squareup.workflow1.ui.NamedScreen.map"]},{"name":"open override fun <StackedU : Screen> map(transform: (StackedT) -> StackedU): BackStackScreen<StackedU>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/map.html","searchKeys":["map","open override fun <StackedU : Screen> map(transform: (StackedT) -> StackedU): BackStackScreen<StackedU>","com.squareup.workflow1.ui.navigation.BackStackScreen.map"]},{"name":"open override fun asSequence(): Sequence<C>","description":"com.squareup.workflow1.ui.Wrapper.asSequence","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-wrapper/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<C>","com.squareup.workflow1.ui.Wrapper.asSequence"]},{"name":"open override fun asSequence(): Sequence<StackedT>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.asSequence","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<StackedT>","com.squareup.workflow1.ui.navigation.BackStackScreen.asSequence"]},{"name":"open override fun combine(left: ViewRegistry, right: ViewRegistry): ViewRegistry","description":"com.squareup.workflow1.ui.ViewRegistry.Companion.combine","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/-companion/combine.html","searchKeys":["combine","open override fun combine(left: ViewRegistry, right: ViewRegistry): ViewRegistry","com.squareup.workflow1.ui.ViewRegistry.Companion.combine"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.ui.ViewEnvironment.hashCode","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.ui.ViewEnvironment.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.hashCode","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.ui.navigation.AlertOverlay.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.hashCode","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.workflow1.ui.navigation.BackStackScreen.hashCode"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.ui.NamedScreen.toString","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.ui.NamedScreen.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.ui.ViewEnvironment.toString","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.ui.ViewEnvironment.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.toString","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.ui.navigation.BackStackScreen.toString"]},{"name":"open override val compatibilityKey: String","description":"com.squareup.workflow1.ui.NamedScreen.compatibilityKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/compatibility-key.html","searchKeys":["compatibilityKey","open override val compatibilityKey: String","com.squareup.workflow1.ui.NamedScreen.compatibilityKey"]},{"name":"open override val compatibilityKey: String","description":"com.squareup.workflow1.ui.Wrapper.compatibilityKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-wrapper/compatibility-key.html","searchKeys":["compatibilityKey","open override val compatibilityKey: String","com.squareup.workflow1.ui.Wrapper.compatibilityKey"]},{"name":"open override val compatibilityKey: String","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.compatibilityKey","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/compatibility-key.html","searchKeys":["compatibilityKey","open override val compatibilityKey: String","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.compatibilityKey"]},{"name":"open override val content: C","description":"com.squareup.workflow1.ui.EnvironmentScreen.content","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-environment-screen/content.html","searchKeys":["content","open override val content: C","com.squareup.workflow1.ui.EnvironmentScreen.content"]},{"name":"open override val content: C","description":"com.squareup.workflow1.ui.NamedScreen.content","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/content.html","searchKeys":["content","open override val content: C","com.squareup.workflow1.ui.NamedScreen.content"]},{"name":"open override val content: C","description":"com.squareup.workflow1.ui.navigation.FullScreenModal.content","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-full-screen-modal/content.html","searchKeys":["content","open override val content: C","com.squareup.workflow1.ui.navigation.FullScreenModal.content"]},{"name":"open override val default: BackStackConfig","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.Companion.default","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/-companion/default.html","searchKeys":["default","open override val default: BackStackConfig","com.squareup.workflow1.ui.navigation.BackStackConfig.Companion.default"]},{"name":"open override val default: ViewRegistry","description":"com.squareup.workflow1.ui.ViewRegistry.Companion.default","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-registry/-companion/default.html","searchKeys":["default","open override val default: ViewRegistry","com.squareup.workflow1.ui.ViewRegistry.Companion.default"]},{"name":"operator fun <T : Any> get(key: ViewEnvironmentKey<T>): T","description":"com.squareup.workflow1.ui.ViewEnvironment.get","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/get.html","searchKeys":["get","operator fun <T : Any> get(key: ViewEnvironmentKey<T>): T","com.squareup.workflow1.ui.ViewEnvironment.get"]},{"name":"operator fun <T : Any> plus(pair: Pair<ViewEnvironmentKey<T>, T>): ViewEnvironment","description":"com.squareup.workflow1.ui.ViewEnvironment.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/plus.html","searchKeys":["plus","operator fun <T : Any> plus(pair: Pair<ViewEnvironmentKey<T>, T>): ViewEnvironment","com.squareup.workflow1.ui.ViewEnvironment.plus"]},{"name":"operator fun <T : Screen> BackStackScreen<T>.plus(other: BackStackScreen<T>?): BackStackScreen<T>","description":"com.squareup.workflow1.ui.navigation.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/plus.html","searchKeys":["plus","operator fun <T : Screen> BackStackScreen<T>.plus(other: BackStackScreen<T>?): BackStackScreen<T>","com.squareup.workflow1.ui.navigation.plus"]},{"name":"operator fun ViewEnvironment.plus(config: BackStackConfig): ViewEnvironment","description":"com.squareup.workflow1.ui.navigation.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/plus.html","searchKeys":["plus","operator fun ViewEnvironment.plus(config: BackStackConfig): ViewEnvironment","com.squareup.workflow1.ui.navigation.plus"]},{"name":"operator fun ViewEnvironment.plus(registry: ViewRegistry): ViewEnvironment","description":"com.squareup.workflow1.ui.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui/plus.html","searchKeys":["plus","operator fun ViewEnvironment.plus(registry: ViewRegistry): ViewEnvironment","com.squareup.workflow1.ui.plus"]},{"name":"operator fun ViewRegistry.plus(entry: ViewRegistry.Entry<*>): ViewRegistry","description":"com.squareup.workflow1.ui.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui/plus.html","searchKeys":["plus","operator fun ViewRegistry.plus(entry: ViewRegistry.Entry<*>): ViewRegistry","com.squareup.workflow1.ui.plus"]},{"name":"operator fun ViewRegistry.plus(other: ViewRegistry): ViewRegistry","description":"com.squareup.workflow1.ui.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui/plus.html","searchKeys":["plus","operator fun ViewRegistry.plus(other: ViewRegistry): ViewRegistry","com.squareup.workflow1.ui.plus"]},{"name":"operator fun get(index: Int): StackedT","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.get","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/get.html","searchKeys":["get","operator fun get(index: Int): StackedT","com.squareup.workflow1.ui.navigation.BackStackScreen.get"]},{"name":"operator fun plus(other: ViewEnvironment): ViewEnvironment","description":"com.squareup.workflow1.ui.ViewEnvironment.plus","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/plus.html","searchKeys":["plus","operator fun plus(other: ViewEnvironment): ViewEnvironment","com.squareup.workflow1.ui.ViewEnvironment.plus"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"com.squareup.workflow1.ui.ViewEnvironmentKey.equals","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","com.squareup.workflow1.ui.ViewEnvironmentKey.equals"]},{"name":"override fun hashCode(): Int","description":"com.squareup.workflow1.ui.ViewEnvironmentKey.hashCode","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment-key/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","com.squareup.workflow1.ui.ViewEnvironmentKey.hashCode"]},{"name":"sealed class Event","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Event","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-event/index.html","searchKeys":["Event","sealed class Event","com.squareup.workflow1.ui.navigation.AlertOverlay.Event"]},{"name":"val EMPTY: ViewEnvironment","description":"com.squareup.workflow1.ui.ViewEnvironment.Companion.EMPTY","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ViewEnvironment","com.squareup.workflow1.ui.ViewEnvironment.Companion.EMPTY"]},{"name":"val backStack: List<StackedT>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.backStack","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/back-stack.html","searchKeys":["backStack","val backStack: List<StackedT>","com.squareup.workflow1.ui.navigation.BackStackScreen.backStack"]},{"name":"val body: B","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.body","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/body.html","searchKeys":["body","val body: B","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.body"]},{"name":"val button: AlertOverlay.Button","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked.button","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-event/-button-clicked/button.html","searchKeys":["button","val button: AlertOverlay.Button","com.squareup.workflow1.ui.navigation.AlertOverlay.Event.ButtonClicked.button"]},{"name":"val buttons: Map<AlertOverlay.Button, String>","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.buttons","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/buttons.html","searchKeys":["buttons","val buttons: Map<AlertOverlay.Button, String>","com.squareup.workflow1.ui.navigation.AlertOverlay.buttons"]},{"name":"val cancelable: Boolean = true","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.cancelable","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/cancelable.html","searchKeys":["cancelable","val cancelable: Boolean = true","com.squareup.workflow1.ui.navigation.AlertOverlay.cancelable"]},{"name":"val entries: EnumEntries<AlertOverlay.Button>","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.Button.entries","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/-button/entries.html","searchKeys":["entries","val entries: EnumEntries<AlertOverlay.Button>","com.squareup.workflow1.ui.navigation.AlertOverlay.Button.entries"]},{"name":"val entries: EnumEntries<BackStackConfig>","description":"com.squareup.workflow1.ui.navigation.BackStackConfig.entries","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-config/entries.html","searchKeys":["entries","val entries: EnumEntries<BackStackConfig>","com.squareup.workflow1.ui.navigation.BackStackConfig.entries"]},{"name":"val environment: ViewEnvironment","description":"com.squareup.workflow1.ui.EnvironmentScreen.environment","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-environment-screen/environment.html","searchKeys":["environment","val environment: ViewEnvironment","com.squareup.workflow1.ui.EnvironmentScreen.environment"]},{"name":"val frames: List<StackedT>","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.frames","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/frames.html","searchKeys":["frames","val frames: List<StackedT>","com.squareup.workflow1.ui.navigation.BackStackScreen.frames"]},{"name":"val map: Map<ViewEnvironmentKey<*>, Any>","description":"com.squareup.workflow1.ui.ViewEnvironment.map","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-view-environment/map.html","searchKeys":["map","val map: Map<ViewEnvironmentKey<*>, Any>","com.squareup.workflow1.ui.ViewEnvironment.map"]},{"name":"val message: String","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.message","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/message.html","searchKeys":["message","val message: String","com.squareup.workflow1.ui.navigation.AlertOverlay.message"]},{"name":"val name: String","description":"com.squareup.workflow1.ui.NamedScreen.name","location":"workflow-ui/core-common/com.squareup.workflow1.ui/-named-screen/name.html","searchKeys":["name","val name: String","com.squareup.workflow1.ui.NamedScreen.name"]},{"name":"val name: String","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.name","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/name.html","searchKeys":["name","val name: String","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.name"]},{"name":"val onEvent: (AlertOverlay.Event) -> Unit","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.onEvent","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/on-event.html","searchKeys":["onEvent","val onEvent: (AlertOverlay.Event) -> Unit","com.squareup.workflow1.ui.navigation.AlertOverlay.onEvent"]},{"name":"val overlays: List<O>","description":"com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.overlays","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-body-and-overlays-screen/overlays.html","searchKeys":["overlays","val overlays: List<O>","com.squareup.workflow1.ui.navigation.BodyAndOverlaysScreen.overlays"]},{"name":"val title: String","description":"com.squareup.workflow1.ui.navigation.AlertOverlay.title","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-alert-overlay/title.html","searchKeys":["title","val title: String","com.squareup.workflow1.ui.navigation.AlertOverlay.title"]},{"name":"val top: StackedT","description":"com.squareup.workflow1.ui.navigation.BackStackScreen.top","location":"workflow-ui/core-common/com.squareup.workflow1.ui.navigation/-back-stack-screen/top.html","searchKeys":["top","val top: StackedT","com.squareup.workflow1.ui.navigation.BackStackScreen.top"]},{"name":"abstract fun buildDialog(initialRendering: OverlayT, initialEnvironment: ViewEnvironment, context: Context): OverlayDialogHolder<OverlayT>","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactory.buildDialog","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory/build-dialog.html","searchKeys":["buildDialog","abstract fun buildDialog(initialRendering: OverlayT, initialEnvironment: ViewEnvironment, context: Context): OverlayDialogHolder<OverlayT>","com.squareup.workflow1.ui.navigation.OverlayDialogFactory.buildDialog"]},{"name":"abstract fun buildView(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup? = null): ScreenViewHolder<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.buildView","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/build-view.html","searchKeys":["buildView","abstract fun buildView(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup? = null): ScreenViewHolder<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.buildView"]},{"name":"abstract fun destroyOnDetach()","description":"com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.destroyOnDetach","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-lifecycle-owner/destroy-on-detach.html","searchKeys":["destroyOnDetach","abstract fun destroyOnDetach()","com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.destroyOnDetach"]},{"name":"abstract fun showRendering(rendering: ScreenT, environment: ViewEnvironment)","description":"com.squareup.workflow1.ui.ScreenViewRunner.showRendering","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-runner/show-rendering.html","searchKeys":["showRendering","abstract fun showRendering(rendering: ScreenT, environment: ViewEnvironment)","com.squareup.workflow1.ui.ScreenViewRunner.showRendering"]},{"name":"abstract fun startView(view: View, doStart: () -> Unit)","description":"com.squareup.workflow1.ui.ViewStarter.startView","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-view-starter/start-view.html","searchKeys":["startView","abstract fun startView(view: View, doStart: () -> Unit)","com.squareup.workflow1.ui.ViewStarter.startView"]},{"name":"abstract val dialog: Dialog","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.dialog","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/dialog.html","searchKeys":["dialog","abstract val dialog: Dialog","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.dialog"]},{"name":"abstract val dialogFactory: OverlayDialogFactory<O>","description":"com.squareup.workflow1.ui.navigation.AndroidOverlay.dialogFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-android-overlay/dialog-factory.html","searchKeys":["dialogFactory","abstract val dialogFactory: OverlayDialogFactory<O>","com.squareup.workflow1.ui.navigation.AndroidOverlay.dialogFactory"]},{"name":"abstract val environment: ViewEnvironment","description":"com.squareup.workflow1.ui.ScreenViewHolder.environment","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/environment.html","searchKeys":["environment","abstract val environment: ViewEnvironment","com.squareup.workflow1.ui.ScreenViewHolder.environment"]},{"name":"abstract val environment: ViewEnvironment","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.environment","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/environment.html","searchKeys":["environment","abstract val environment: ViewEnvironment","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.environment"]},{"name":"abstract val onUpdateBounds: (Rect) -> Unit?","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.onUpdateBounds","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/on-update-bounds.html","searchKeys":["onUpdateBounds","abstract val onUpdateBounds: (Rect) -> Unit?","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.onUpdateBounds"]},{"name":"abstract val runner: (rendering: OverlayT, environment: ViewEnvironment) -> Unit","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.runner","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/runner.html","searchKeys":["runner","abstract val runner: (rendering: OverlayT, environment: ViewEnvironment) -> Unit","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.runner"]},{"name":"abstract val runner: ScreenViewRunner<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewHolder.runner","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/runner.html","searchKeys":["runner","abstract val runner: ScreenViewRunner<ScreenT>","com.squareup.workflow1.ui.ScreenViewHolder.runner"]},{"name":"abstract val view: View","description":"com.squareup.workflow1.ui.ScreenViewHolder.view","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/view.html","searchKeys":["view","abstract val view: View","com.squareup.workflow1.ui.ScreenViewHolder.view"]},{"name":"abstract val viewFactory: ScreenViewFactory<S>","description":"com.squareup.workflow1.ui.AndroidScreen.viewFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-android-screen/view-factory.html","searchKeys":["viewFactory","abstract val viewFactory: ScreenViewFactory<S>","com.squareup.workflow1.ui.AndroidScreen.viewFactory"]},{"name":"class BackButtonScreen<C : Screen>(val content: C, val shadow: Boolean = false, val onBackPressed: () -> Unit? = null) : Wrapper<Screen, C> , AndroidScreen<BackButtonScreen<C>> ","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/index.html","searchKeys":["BackButtonScreen","class BackButtonScreen<C : Screen>(val content: C, val shadow: Boolean = false, val onBackPressed: () -> Unit? = null) : Wrapper<Screen, C> , AndroidScreen<BackButtonScreen<C>> ","com.squareup.workflow1.ui.navigation.BackButtonScreen"]},{"name":"class LayeredDialogSessions","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/index.html","searchKeys":["LayeredDialogSessions","class LayeredDialogSessions","com.squareup.workflow1.ui.navigation.LayeredDialogSessions"]},{"name":"class ParcelableTextController : TextController, Parcelable","description":"com.squareup.workflow1.ui.ParcelableTextController","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/index.html","searchKeys":["ParcelableTextController","class ParcelableTextController : TextController, Parcelable","com.squareup.workflow1.ui.ParcelableTextController"]},{"name":"class Saved : Parcelable","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/index.html","searchKeys":["Saved","class Saved : Parcelable","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved"]},{"name":"class SavedState : Parcelable","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/index.html","searchKeys":["SavedState","class SavedState : Parcelable","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState"]},{"name":"class SavedState : View.BaseSavedState","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/index.html","searchKeys":["SavedState","class SavedState : View.BaseSavedState","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState"]},{"name":"class ViewStateCache","description":"com.squareup.workflow1.ui.navigation.ViewStateCache","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/index.html","searchKeys":["ViewStateCache","class ViewStateCache","com.squareup.workflow1.ui.navigation.ViewStateCache"]},{"name":"class WorkflowLayout(context: Context, attributeSet: AttributeSet? = null) : FrameLayout","description":"com.squareup.workflow1.ui.WorkflowLayout","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-layout/index.html","searchKeys":["WorkflowLayout","class WorkflowLayout(context: Context, attributeSet: AttributeSet? = null) : FrameLayout","com.squareup.workflow1.ui.WorkflowLayout"]},{"name":"class WorkflowSavedStateRegistryAggregator","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/index.html","searchKeys":["WorkflowSavedStateRegistryAggregator","class WorkflowSavedStateRegistryAggregator","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator"]},{"name":"class WorkflowViewStub constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0) : View","description":"com.squareup.workflow1.ui.WorkflowViewStub","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/index.html","searchKeys":["WorkflowViewStub","class WorkflowViewStub constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0) : View","com.squareup.workflow1.ui.WorkflowViewStub"]},{"name":"constructor()","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.WorkflowSavedStateRegistryAggregator","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/-workflow-saved-state-registry-aggregator.html","searchKeys":["WorkflowSavedStateRegistryAggregator","constructor()","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.WorkflowSavedStateRegistryAggregator"]},{"name":"constructor()","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.ViewStateCache","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-view-state-cache.html","searchKeys":["ViewStateCache","constructor()","com.squareup.workflow1.ui.navigation.ViewStateCache.ViewStateCache"]},{"name":"constructor(content: C, shadow: Boolean = false, onBackPressed: () -> Unit? = null)","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.BackButtonScreen","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/-back-button-screen.html","searchKeys":["BackButtonScreen","constructor(content: C, shadow: Boolean = false, onBackPressed: () -> Unit? = null)","com.squareup.workflow1.ui.navigation.BackButtonScreen.BackButtonScreen"]},{"name":"constructor(context: Context, attributeSet: AttributeSet? = null)","description":"com.squareup.workflow1.ui.WorkflowLayout.WorkflowLayout","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-layout/-workflow-layout.html","searchKeys":["WorkflowLayout","constructor(context: Context, attributeSet: AttributeSet? = null)","com.squareup.workflow1.ui.WorkflowLayout.WorkflowLayout"]},{"name":"constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0)","description":"com.squareup.workflow1.ui.WorkflowViewStub.WorkflowViewStub","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/-workflow-view-stub.html","searchKeys":["WorkflowViewStub","constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0)","com.squareup.workflow1.ui.WorkflowViewStub.WorkflowViewStub"]},{"name":"constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0)","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.BackStackContainer","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-back-stack-container.html","searchKeys":["BackStackContainer","constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0)","com.squareup.workflow1.ui.navigation.BackStackContainer.BackStackContainer"]},{"name":"constructor(initialValue: String = \"\")","description":"com.squareup.workflow1.ui.ParcelableTextController.ParcelableTextController","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/-parcelable-text-controller.html","searchKeys":["ParcelableTextController","constructor(initialValue: String = \"\")","com.squareup.workflow1.ui.ParcelableTextController.ParcelableTextController"]},{"name":"constructor(source: Parcel)","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.SavedState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/-saved-state.html","searchKeys":["SavedState","constructor(source: Parcel)","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.SavedState"]},{"name":"constructor(source: Parcel)","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.SavedState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/-saved-state.html","searchKeys":["SavedState","constructor(source: Parcel)","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.SavedState"]},{"name":"constructor(source: Parcel)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.Saved","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/-saved.html","searchKeys":["Saved","constructor(source: Parcel)","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.Saved"]},{"name":"constructor(superState: Parcelable, savedViewState: ViewStateCache.Saved)","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.SavedState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/-saved-state.html","searchKeys":["SavedState","constructor(superState: Parcelable, savedViewState: ViewStateCache.Saved)","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.SavedState"]},{"name":"fun <C : Screen, O : ScreenOverlay<C>> ComponentDialog.asDialogHolderWithContent(overlay: O, environment: ViewEnvironment, setContent: (ScreenViewHolder<C>) -> Unit = { contentViewHolder ->\n    setContentView(contentViewHolder.view)\n    fixBackgroundAndDimming()\n  }): OverlayDialogHolder<O>","description":"com.squareup.workflow1.ui.navigation.asDialogHolderWithContent","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/as-dialog-holder-with-content.html","searchKeys":["asDialogHolderWithContent","fun <C : Screen, O : ScreenOverlay<C>> ComponentDialog.asDialogHolderWithContent(overlay: O, environment: ViewEnvironment, setContent: (ScreenViewHolder<C>) -> Unit = { contentViewHolder ->\n    setContentView(contentViewHolder.view)\n    fixBackgroundAndDimming()\n  }): OverlayDialogHolder<O>","com.squareup.workflow1.ui.navigation.asDialogHolderWithContent"]},{"name":"fun <OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<Unit, OutputT, RenderingT>, scope: CoroutineScope, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","description":"com.squareup.workflow1.ui.renderWorkflowIn","location":"workflow-ui/core-android/com.squareup.workflow1.ui/render-workflow-in.html","searchKeys":["renderWorkflowIn","fun <OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<Unit, OutputT, RenderingT>, scope: CoroutineScope, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","com.squareup.workflow1.ui.renderWorkflowIn"]},{"name":"fun <OverlayT : Overlay> OverlayDialogHolder<OverlayT>.show(overlay: OverlayT, environment: ViewEnvironment)","description":"com.squareup.workflow1.ui.navigation.show","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/show.html","searchKeys":["show","fun <OverlayT : Overlay> OverlayDialogHolder<OverlayT>.show(overlay: OverlayT, environment: ViewEnvironment)","com.squareup.workflow1.ui.navigation.show"]},{"name":"fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, prop: PropsT, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","description":"com.squareup.workflow1.ui.renderWorkflowIn","location":"workflow-ui/core-android/com.squareup.workflow1.ui/render-workflow-in.html","searchKeys":["renderWorkflowIn","fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, prop: PropsT, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","com.squareup.workflow1.ui.renderWorkflowIn"]},{"name":"fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, props: StateFlow<PropsT>, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","description":"com.squareup.workflow1.ui.renderWorkflowIn","location":"workflow-ui/core-android/com.squareup.workflow1.ui/render-workflow-in.html","searchKeys":["renderWorkflowIn","fun <PropsT, OutputT, RenderingT> renderWorkflowIn(workflow: Workflow<PropsT, OutputT, RenderingT>, scope: CoroutineScope, props: StateFlow<PropsT>, savedStateHandle: SavedStateHandle? = null, interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}): StateFlow<RenderingT>","com.squareup.workflow1.ui.renderWorkflowIn"]},{"name":"fun <ScreenT : Screen> ScreenT.toViewFactory(environment: ViewEnvironment): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.toViewFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui/to-view-factory.html","searchKeys":["toViewFactory","fun <ScreenT : Screen> ScreenT.toViewFactory(environment: ViewEnvironment): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.toViewFactory"]},{"name":"fun <ScreenT : Screen> ScreenViewFactory<ScreenT>.startShowing(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, contextForNewView: Context, container: ViewGroup? = null, viewStarter: ViewStarter? = null): ScreenViewHolder<ScreenT>","description":"com.squareup.workflow1.ui.startShowing","location":"workflow-ui/core-android/com.squareup.workflow1.ui/start-showing.html","searchKeys":["startShowing","fun <ScreenT : Screen> ScreenViewFactory<ScreenT>.startShowing(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, contextForNewView: Context, container: ViewGroup? = null, viewStarter: ViewStarter? = null): ScreenViewHolder<ScreenT>","com.squareup.workflow1.ui.startShowing"]},{"name":"fun <ScreenT : Screen> ScreenViewHolder<ScreenT>.show(screen: ScreenT, environment: ViewEnvironment)","description":"com.squareup.workflow1.ui.show","location":"workflow-ui/core-android/com.squareup.workflow1.ui/show.html","searchKeys":["show","fun <ScreenT : Screen> ScreenViewHolder<ScreenT>.show(screen: ScreenT, environment: ViewEnvironment)","com.squareup.workflow1.ui.show"]},{"name":"fun <ScreenT : Screen> ScreenViewHolder<ScreenT>.startShowing(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, viewStarter: ViewStarter?)","description":"com.squareup.workflow1.ui.startShowing","location":"workflow-ui/core-android/com.squareup.workflow1.ui/start-showing.html","searchKeys":["startShowing","fun <ScreenT : Screen> ScreenViewHolder<ScreenT>.startShowing(initialRendering: ScreenT, initialEnvironment: ViewEnvironment, viewStarter: ViewStarter?)","com.squareup.workflow1.ui.startShowing"]},{"name":"fun <T : Overlay> T.toDialogFactory(environment: ViewEnvironment): OverlayDialogFactory<T>","description":"com.squareup.workflow1.ui.navigation.toDialogFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/to-dialog-factory.html","searchKeys":["toDialogFactory","fun <T : Overlay> T.toDialogFactory(environment: ViewEnvironment): OverlayDialogFactory<T>","com.squareup.workflow1.ui.navigation.toDialogFactory"]},{"name":"fun AlertDialog.toDialogHolder(initialEnvironment: ViewEnvironment): OverlayDialogHolder<AlertOverlay>","description":"com.squareup.workflow1.ui.navigation.toDialogHolder","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/to-dialog-holder.html","searchKeys":["toDialogHolder","fun AlertDialog.toDialogHolder(initialEnvironment: ViewEnvironment): OverlayDialogHolder<AlertOverlay>","com.squareup.workflow1.ui.navigation.toDialogHolder"]},{"name":"fun Dialog.fixBackgroundAndDimming()","description":"com.squareup.workflow1.ui.navigation.fixBackgroundAndDimming","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/fix-background-and-dimming.html","searchKeys":["fixBackgroundAndDimming","fun Dialog.fixBackgroundAndDimming()","com.squareup.workflow1.ui.navigation.fixBackgroundAndDimming"]},{"name":"fun Dialog.setBounds(bounds: Rect)","description":"com.squareup.workflow1.ui.navigation.setBounds","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/set-bounds.html","searchKeys":["setBounds","fun Dialog.setBounds(bounds: Rect)","com.squareup.workflow1.ui.navigation.setBounds"]},{"name":"fun OverlayDialogHolder<*>.canShow(overlay: Overlay): Boolean","description":"com.squareup.workflow1.ui.navigation.canShow","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/can-show.html","searchKeys":["canShow","fun OverlayDialogHolder<*>.canShow(overlay: Overlay): Boolean","com.squareup.workflow1.ui.navigation.canShow"]},{"name":"fun Parcelable.toSnapshot(): Snapshot","description":"com.squareup.workflow1.ui.toSnapshot","location":"workflow-ui/core-android/com.squareup.workflow1.ui/to-snapshot.html","searchKeys":["toSnapshot","fun Parcelable.toSnapshot(): Snapshot","com.squareup.workflow1.ui.toSnapshot"]},{"name":"fun ScreenViewHolder<*>.canShow(screen: Screen): Boolean","description":"com.squareup.workflow1.ui.canShow","location":"workflow-ui/core-android/com.squareup.workflow1.ui/can-show.html","searchKeys":["canShow","fun ScreenViewHolder<*>.canShow(screen: Screen): Boolean","com.squareup.workflow1.ui.canShow"]},{"name":"fun TextController.control(view: EditText)","description":"com.squareup.workflow1.ui.control","location":"workflow-ui/core-android/com.squareup.workflow1.ui/control.html","searchKeys":["control","fun TextController.control(view: EditText)","com.squareup.workflow1.ui.control"]},{"name":"fun View.getScreenRect(rect: Rect)","description":"com.squareup.workflow1.ui.navigation.getScreenRect","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/get-screen-rect.html","searchKeys":["getScreenRect","fun View.getScreenRect(rect: Rect)","com.squareup.workflow1.ui.navigation.getScreenRect"]},{"name":"fun View.onBackPressedDispatcherOwnerOrNull(): OnBackPressedDispatcherOwner?","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.onBackPressedDispatcherOwnerOrNull","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/on-back-pressed-dispatcher-owner-or-null.html","searchKeys":["onBackPressedDispatcherOwnerOrNull","fun View.onBackPressedDispatcherOwnerOrNull(): OnBackPressedDispatcherOwner?","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.onBackPressedDispatcherOwnerOrNull"]},{"name":"fun View.setBackHandler(enabled: Boolean = true, onBack: () -> Unit)","description":"com.squareup.workflow1.ui.navigation.setBackHandler","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/set-back-handler.html","searchKeys":["setBackHandler","fun View.setBackHandler(enabled: Boolean = true, onBack: () -> Unit)","com.squareup.workflow1.ui.navigation.setBackHandler"]},{"name":"fun View.setBackHandler(onBack: () -> Unit?)","description":"com.squareup.workflow1.ui.navigation.setBackHandler","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/set-back-handler.html","searchKeys":["setBackHandler","fun View.setBackHandler(onBack: () -> Unit?)","com.squareup.workflow1.ui.navigation.setBackHandler"]},{"name":"fun ViewEnvironment.onBackPressedDispatcherOwner(container: View): OnBackPressedDispatcherOwner","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.onBackPressedDispatcherOwner","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/on-back-pressed-dispatcher-owner.html","searchKeys":["onBackPressedDispatcherOwner","fun ViewEnvironment.onBackPressedDispatcherOwner(container: View): OnBackPressedDispatcherOwner","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.onBackPressedDispatcherOwner"]},{"name":"fun attachToParentRegistry(key: String, parentOwner: SavedStateRegistryOwner)","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.attachToParentRegistry","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/attach-to-parent-registry.html","searchKeys":["attachToParentRegistry","fun attachToParentRegistry(key: String, parentOwner: SavedStateRegistryOwner)","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.attachToParentRegistry"]},{"name":"fun attachToParentRegistryOwner(key: String, parentOwner: SavedStateRegistryOwner)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.attachToParentRegistryOwner","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/attach-to-parent-registry-owner.html","searchKeys":["attachToParentRegistryOwner","fun attachToParentRegistryOwner(key: String, parentOwner: SavedStateRegistryOwner)","com.squareup.workflow1.ui.navigation.ViewStateCache.attachToParentRegistryOwner"]},{"name":"fun detachFromParentRegistry()","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.detachFromParentRegistry","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/detach-from-parent-registry.html","searchKeys":["detachFromParentRegistry","fun detachFromParentRegistry()","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.detachFromParentRegistry"]},{"name":"fun detachFromParentRegistry()","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.detachFromParentRegistry","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/detach-from-parent-registry.html","searchKeys":["detachFromParentRegistry","fun detachFromParentRegistry()","com.squareup.workflow1.ui.navigation.ViewStateCache.detachFromParentRegistry"]},{"name":"fun forView(view: View, superDispatchTouchEvent: (MotionEvent) -> Unit): LayeredDialogSessions","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.Companion.forView","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-companion/for-view.html","searchKeys":["forView","fun forView(view: View, superDispatchTouchEvent: (MotionEvent) -> Unit): LayeredDialogSessions","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.Companion.forView"]},{"name":"fun get(view: View): WorkflowLifecycleOwner?","description":"com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion.get","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-lifecycle-owner/-companion/get.html","searchKeys":["get","fun get(view: View): WorkflowLifecycleOwner?","com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion.get"]},{"name":"fun installChildRegistryOwnerOn(view: View, key: String, force: Boolean = false)","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.installChildRegistryOwnerOn","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/install-child-registry-owner-on.html","searchKeys":["installChildRegistryOwnerOn","fun installChildRegistryOwnerOn(view: View, key: String, force: Boolean = false)","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.installChildRegistryOwnerOn"]},{"name":"fun installOn(view: View, onBackPressedDispatcherOwner: OnBackPressedDispatcherOwner, findParentLifecycle: (View) -> Lifecycle = this::findParentViewTreeLifecycle)","description":"com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion.installOn","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-lifecycle-owner/-companion/install-on.html","searchKeys":["installOn","fun installOn(view: View, onBackPressedDispatcherOwner: OnBackPressedDispatcherOwner, findParentLifecycle: (View) -> Lifecycle = this::findParentViewTreeLifecycle)","com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion.installOn"]},{"name":"fun interface ScreenViewRunner<in ScreenT : Screen>","description":"com.squareup.workflow1.ui.ScreenViewRunner","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-runner/index.html","searchKeys":["ScreenViewRunner","fun interface ScreenViewRunner<in ScreenT : Screen>","com.squareup.workflow1.ui.ScreenViewRunner"]},{"name":"fun interface ViewStarter","description":"com.squareup.workflow1.ui.ViewStarter","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-view-starter/index.html","searchKeys":["ViewStarter","fun interface ViewStarter","com.squareup.workflow1.ui.ViewStarter"]},{"name":"fun lifecycleOwnerFromContext(context: Context): LifecycleOwner","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.lifecycleOwnerFromContext","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/lifecycle-owner-from-context.html","searchKeys":["lifecycleOwnerFromContext","fun lifecycleOwnerFromContext(context: Context): LifecycleOwner","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.lifecycleOwnerFromContext"]},{"name":"fun lifecycleOwnerFromViewTreeOrContextOrNull(view: View): LifecycleOwner?","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.lifecycleOwnerFromViewTreeOrContextOrNull","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/lifecycle-owner-from-view-tree-or-context-or-null.html","searchKeys":["lifecycleOwnerFromViewTreeOrContextOrNull","fun lifecycleOwnerFromViewTreeOrContextOrNull(view: View): LifecycleOwner?","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.lifecycleOwnerFromViewTreeOrContextOrNull"]},{"name":"fun onAttachedToWindow(savedStateParentKey: String, view: View)","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onAttachedToWindow","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/on-attached-to-window.html","searchKeys":["onAttachedToWindow","fun onAttachedToWindow(savedStateParentKey: String, view: View)","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onAttachedToWindow"]},{"name":"fun onDetachedFromWindow()","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onDetachedFromWindow","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","fun onDetachedFromWindow()","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onDetachedFromWindow"]},{"name":"fun onRestoreInstanceState(state: LayeredDialogSessions.SavedState)","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onRestoreInstanceState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/on-restore-instance-state.html","searchKeys":["onRestoreInstanceState","fun onRestoreInstanceState(state: LayeredDialogSessions.SavedState)","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onRestoreInstanceState"]},{"name":"fun onSaveInstanceState(): LayeredDialogSessions.SavedState","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onSaveInstanceState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/on-save-instance-state.html","searchKeys":["onSaveInstanceState","fun onSaveInstanceState(): LayeredDialogSessions.SavedState","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.onSaveInstanceState"]},{"name":"fun prune(retaining: Collection<NamedScreen<*>>)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.prune","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/prune.html","searchKeys":["prune","fun prune(retaining: Collection<NamedScreen<*>>)","com.squareup.workflow1.ui.navigation.ViewStateCache.prune"]},{"name":"fun pruneAllChildRegistryOwnersExcept(keysToKeep: Collection<String> = emptyList())","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.pruneAllChildRegistryOwnersExcept","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/prune-all-child-registry-owners-except.html","searchKeys":["pruneAllChildRegistryOwnersExcept","fun pruneAllChildRegistryOwnersExcept(keysToKeep: Collection<String> = emptyList())","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.pruneAllChildRegistryOwnersExcept"]},{"name":"fun restore(from: ViewStateCache.Saved)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.restore","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/restore.html","searchKeys":["restore","fun restore(from: ViewStateCache.Saved)","com.squareup.workflow1.ui.navigation.ViewStateCache.restore"]},{"name":"fun save(): ViewStateCache.Saved","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.save","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/save.html","searchKeys":["save","fun save(): ViewStateCache.Saved","com.squareup.workflow1.ui.navigation.ViewStateCache.save"]},{"name":"fun saveAndPruneChildRegistryOwner(key: String)","description":"com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.saveAndPruneChildRegistryOwner","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-saved-state-registry-aggregator/save-and-prune-child-registry-owner.html","searchKeys":["saveAndPruneChildRegistryOwner","fun saveAndPruneChildRegistryOwner(key: String)","com.squareup.workflow1.ui.androidx.WorkflowSavedStateRegistryAggregator.saveAndPruneChildRegistryOwner"]},{"name":"fun show(rendering: Screen, viewEnvironment: ViewEnvironment)","description":"com.squareup.workflow1.ui.WorkflowViewStub.show","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/show.html","searchKeys":["show","fun show(rendering: Screen, viewEnvironment: ViewEnvironment)","com.squareup.workflow1.ui.WorkflowViewStub.show"]},{"name":"fun show(rootScreen: Screen, environment: ViewEnvironment = ViewEnvironment.EMPTY)","description":"com.squareup.workflow1.ui.WorkflowLayout.show","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-layout/show.html","searchKeys":["show","fun show(rootScreen: Screen, environment: ViewEnvironment = ViewEnvironment.EMPTY)","com.squareup.workflow1.ui.WorkflowLayout.show"]},{"name":"fun stateRegistryOwnerFromViewTreeOrContext(view: View): SavedStateRegistryOwner","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.stateRegistryOwnerFromViewTreeOrContext","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/state-registry-owner-from-view-tree-or-context.html","searchKeys":["stateRegistryOwnerFromViewTreeOrContext","fun stateRegistryOwnerFromViewTreeOrContext(view: View): SavedStateRegistryOwner","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport.stateRegistryOwnerFromViewTreeOrContext"]},{"name":"fun take(lifecycle: Lifecycle, renderings: Flow<Screen>, repeatOnLifecycle: Lifecycle.State = STARTED, collectionContext: CoroutineContext = EmptyCoroutineContext)","description":"com.squareup.workflow1.ui.WorkflowLayout.take","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-layout/take.html","searchKeys":["take","fun take(lifecycle: Lifecycle, renderings: Flow<Screen>, repeatOnLifecycle: Lifecycle.State = STARTED, collectionContext: CoroutineContext = EmptyCoroutineContext)","com.squareup.workflow1.ui.WorkflowLayout.take"]},{"name":"fun update(newRendering: BackStackScreen<*>, newViewEnvironment: ViewEnvironment)","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.update","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/update.html","searchKeys":["update","fun update(newRendering: BackStackScreen<*>, newViewEnvironment: ViewEnvironment)","com.squareup.workflow1.ui.navigation.BackStackContainer.update"]},{"name":"fun update(overlays: List<Overlay>, viewEnvironment: ViewEnvironment, updateBody: (environment: ViewEnvironment) -> Unit)","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.update","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/update.html","searchKeys":["update","fun update(overlays: List<Overlay>, viewEnvironment: ViewEnvironment, updateBody: (environment: ViewEnvironment) -> Unit)","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.update"]},{"name":"fun update(retainedRenderings: Collection<NamedScreen<*>>, oldHolderMaybe: ScreenViewHolder<NamedScreen<*>>?, newHolder: ScreenViewHolder<NamedScreen<*>>)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.update","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/update.html","searchKeys":["update","fun update(retainedRenderings: Collection<NamedScreen<*>>, oldHolderMaybe: ScreenViewHolder<NamedScreen<*>>?, newHolder: ScreenViewHolder<NamedScreen<*>>)","com.squareup.workflow1.ui.navigation.ViewStateCache.update"]},{"name":"inline fun <BindingT : ViewBinding, ScreenT : Screen> fromViewBinding(noinline bindingInflater: ViewBindingInflater<BindingT>, crossinline showRendering: BindingT.(ScreenT, ViewEnvironment) -> Unit): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromViewBinding","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/from-view-binding.html","searchKeys":["fromViewBinding","inline fun <BindingT : ViewBinding, ScreenT : Screen> fromViewBinding(noinline bindingInflater: ViewBindingInflater<BindingT>, crossinline showRendering: BindingT.(ScreenT, ViewEnvironment) -> Unit): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromViewBinding"]},{"name":"inline fun <BindingT : ViewBinding, ScreenT : Screen> fromViewBinding(noinline bindingInflater: ViewBindingInflater<BindingT>, noinline constructor: (BindingT) -> ScreenViewRunner<ScreenT>): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromViewBinding","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/from-view-binding.html","searchKeys":["fromViewBinding","inline fun <BindingT : ViewBinding, ScreenT : Screen> fromViewBinding(noinline bindingInflater: ViewBindingInflater<BindingT>, noinline constructor: (BindingT) -> ScreenViewRunner<ScreenT>): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromViewBinding"]},{"name":"inline fun <ScreenT : Screen> fromCode(crossinline buildView: (initialRendering: ScreenT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup?) -> ScreenViewHolder<ScreenT>): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromCode","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/from-code.html","searchKeys":["fromCode","inline fun <ScreenT : Screen> fromCode(crossinline buildView: (initialRendering: ScreenT, initialEnvironment: ViewEnvironment, context: Context, container: ViewGroup?) -> ScreenViewHolder<ScreenT>): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromCode"]},{"name":"inline fun <ScreenT : Screen> fromLayout(layoutId: Int, noinline constructor: (View) -> ScreenViewRunner<ScreenT>): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromLayout","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/from-layout.html","searchKeys":["fromLayout","inline fun <ScreenT : Screen> fromLayout(layoutId: Int, noinline constructor: (View) -> ScreenViewRunner<ScreenT>): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromLayout"]},{"name":"inline fun <ScreenT : Screen> fromStaticLayout(layoutId: Int): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromStaticLayout","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/from-static-layout.html","searchKeys":["fromStaticLayout","inline fun <ScreenT : Screen> fromStaticLayout(layoutId: Int): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.fromStaticLayout"]},{"name":"inline fun <SourceT : Screen, TransformedT : Screen> ScreenViewFactory<TransformedT>.map(noinline transform: (wrapperScreen: SourceT) -> TransformedT, crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { e -> e }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline showSource: (view: View, source: SourceT, transform: (wrapperScreen: SourceT) -> TransformedT, environment: ViewEnvironment, showTransformed: (TransformedT, ViewEnvironment) -> Unit) -> Unit = { _, src, xform, e, showTransformed -> showTransformed(xform(src), e) }): ScreenViewFactory<SourceT>","description":"com.squareup.workflow1.ui.map","location":"workflow-ui/core-android/com.squareup.workflow1.ui/map.html","searchKeys":["map","inline fun <SourceT : Screen, TransformedT : Screen> ScreenViewFactory<TransformedT>.map(noinline transform: (wrapperScreen: SourceT) -> TransformedT, crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { e -> e }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline showSource: (view: View, source: SourceT, transform: (wrapperScreen: SourceT) -> TransformedT, environment: ViewEnvironment, showTransformed: (TransformedT, ViewEnvironment) -> Unit) -> Unit = { _, src, xform, e, showTransformed -> showTransformed(xform(src), e) }): ScreenViewFactory<SourceT>","com.squareup.workflow1.ui.map"]},{"name":"inline fun <SourceT : Screen, TransformedT : Screen> map(crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { it }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline beforeShowing: (viewHolder: ScreenViewHolder<SourceT>) -> Unit = {}, crossinline showSource: (view: View, source: SourceT, transformer: (source: SourceT) -> TransformedT, environment: ViewEnvironment, showTransformed: (TransformedT, ViewEnvironment) -> Unit) -> Unit = { _, src, xform, e, show -> show(xform(src), e) }, noinline transform: (source: SourceT) -> TransformedT): ScreenViewFactory<SourceT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.map","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/map.html","searchKeys":["map","inline fun <SourceT : Screen, TransformedT : Screen> map(crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { it }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline beforeShowing: (viewHolder: ScreenViewHolder<SourceT>) -> Unit = {}, crossinline showSource: (view: View, source: SourceT, transformer: (source: SourceT) -> TransformedT, environment: ViewEnvironment, showTransformed: (TransformedT, ViewEnvironment) -> Unit) -> Unit = { _, src, xform, e, show -> show(xform(src), e) }, noinline transform: (source: SourceT) -> TransformedT): ScreenViewFactory<SourceT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.map"]},{"name":"inline fun <T : Parcelable> ByteString.toParcelable(): T","description":"com.squareup.workflow1.ui.toParcelable","location":"workflow-ui/core-android/com.squareup.workflow1.ui/to-parcelable.html","searchKeys":["toParcelable","inline fun <T : Parcelable> ByteString.toParcelable(): T","com.squareup.workflow1.ui.toParcelable"]},{"name":"inline fun <T : Parcelable> Snapshot.toParcelable(): T?","description":"com.squareup.workflow1.ui.toParcelable","location":"workflow-ui/core-android/com.squareup.workflow1.ui/to-parcelable.html","searchKeys":["toParcelable","inline fun <T : Parcelable> Snapshot.toParcelable(): T?","com.squareup.workflow1.ui.toParcelable"]},{"name":"inline fun <WrapperT : Screen, Wrapper<Screen, ContentT>, ContentT : Screen> forWrapper(crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { it }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline beforeShowing: (viewHolder: ScreenViewHolder<WrapperT>) -> Unit = {}, crossinline showWrapper: (view: View, wrapper: WrapperT, environment: ViewEnvironment, showContent: (ContentT, ViewEnvironment) -> Unit) -> Unit = { _, src, e, show -> show(src.content, e) }): ScreenViewFactory<WrapperT>","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion.forWrapper","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/for-wrapper.html","searchKeys":["forWrapper","inline fun <WrapperT : Screen, Wrapper<Screen, ContentT>, ContentT : Screen> forWrapper(crossinline prepEnvironment: (environment: ViewEnvironment) -> ViewEnvironment = { it }, crossinline prepContext: (environment: ViewEnvironment, context: Context) -> Context = { _, c -> c }, crossinline beforeShowing: (viewHolder: ScreenViewHolder<WrapperT>) -> Unit = {}, crossinline showWrapper: (view: View, wrapper: WrapperT, environment: ViewEnvironment, showContent: (ContentT, ViewEnvironment) -> Unit) -> Unit = { _, src, e, show -> show(src.content, e) }): ScreenViewFactory<WrapperT>","com.squareup.workflow1.ui.ScreenViewFactory.Companion.forWrapper"]},{"name":"inline operator fun <OverlayT : Overlay> invoke(crossinline buildDialog: (initialRendering: OverlayT, initialEnvironment: ViewEnvironment, context: Context) -> OverlayDialogHolder<OverlayT>): OverlayDialogFactory<OverlayT>","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactory.Companion.invoke","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory/-companion/invoke.html","searchKeys":["invoke","inline operator fun <OverlayT : Overlay> invoke(crossinline buildDialog: (initialRendering: OverlayT, initialEnvironment: ViewEnvironment, context: Context) -> OverlayDialogHolder<OverlayT>): OverlayDialogFactory<OverlayT>","com.squareup.workflow1.ui.navigation.OverlayDialogFactory.Companion.invoke"]},{"name":"interface AndroidOverlay<O : AndroidOverlay<O>> : Overlay","description":"com.squareup.workflow1.ui.navigation.AndroidOverlay","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-android-overlay/index.html","searchKeys":["AndroidOverlay","interface AndroidOverlay<O : AndroidOverlay<O>> : Overlay","com.squareup.workflow1.ui.navigation.AndroidOverlay"]},{"name":"interface AndroidScreen<S : AndroidScreen<S>> : Screen","description":"com.squareup.workflow1.ui.AndroidScreen","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-android-screen/index.html","searchKeys":["AndroidScreen","interface AndroidScreen<S : AndroidScreen<S>> : Screen","com.squareup.workflow1.ui.AndroidScreen"]},{"name":"interface OverlayDialogFactory<OverlayT : Overlay> : ViewRegistry.Entry<OverlayT> ","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory/index.html","searchKeys":["OverlayDialogFactory","interface OverlayDialogFactory<OverlayT : Overlay> : ViewRegistry.Entry<OverlayT> ","com.squareup.workflow1.ui.navigation.OverlayDialogFactory"]},{"name":"interface OverlayDialogFactoryFinder","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory-finder/index.html","searchKeys":["OverlayDialogFactoryFinder","interface OverlayDialogFactoryFinder","com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder"]},{"name":"interface OverlayDialogHolder<in OverlayT : Overlay>","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/index.html","searchKeys":["OverlayDialogHolder","interface OverlayDialogHolder<in OverlayT : Overlay>","com.squareup.workflow1.ui.navigation.OverlayDialogHolder"]},{"name":"interface ScreenViewFactory<in ScreenT : Screen> : ViewRegistry.Entry<ScreenT> ","description":"com.squareup.workflow1.ui.ScreenViewFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/index.html","searchKeys":["ScreenViewFactory","interface ScreenViewFactory<in ScreenT : Screen> : ViewRegistry.Entry<ScreenT> ","com.squareup.workflow1.ui.ScreenViewFactory"]},{"name":"interface ScreenViewFactoryFinder","description":"com.squareup.workflow1.ui.ScreenViewFactoryFinder","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory-finder/index.html","searchKeys":["ScreenViewFactoryFinder","interface ScreenViewFactoryFinder","com.squareup.workflow1.ui.ScreenViewFactoryFinder"]},{"name":"interface ScreenViewHolder<in ScreenT : Screen>","description":"com.squareup.workflow1.ui.ScreenViewHolder","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/index.html","searchKeys":["ScreenViewHolder","interface ScreenViewHolder<in ScreenT : Screen>","com.squareup.workflow1.ui.ScreenViewHolder"]},{"name":"interface WorkflowLifecycleOwner : LifecycleOwner","description":"com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-lifecycle-owner/index.html","searchKeys":["WorkflowLifecycleOwner","interface WorkflowLifecycleOwner : LifecycleOwner","com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner"]},{"name":"object AlertDialogThemeResId : ViewEnvironmentKey<Int> ","description":"com.squareup.workflow1.ui.navigation.AlertDialogThemeResId","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-alert-dialog-theme-res-id/index.html","searchKeys":["AlertDialogThemeResId","object AlertDialogThemeResId : ViewEnvironmentKey<Int> ","com.squareup.workflow1.ui.navigation.AlertDialogThemeResId"]},{"name":"object CREATOR : Parcelable.Creator<BackStackContainer.SavedState> ","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/-c-r-e-a-t-o-r/index.html","searchKeys":["CREATOR","object CREATOR : Parcelable.Creator<BackStackContainer.SavedState> ","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR"]},{"name":"object CREATOR : Parcelable.Creator<LayeredDialogSessions.SavedState> ","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/-c-r-e-a-t-o-r/index.html","searchKeys":["CREATOR","object CREATOR : Parcelable.Creator<LayeredDialogSessions.SavedState> ","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR"]},{"name":"object CREATOR : Parcelable.Creator<ParcelableTextController> ","description":"com.squareup.workflow1.ui.ParcelableTextController.CREATOR","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/-c-r-e-a-t-o-r/index.html","searchKeys":["CREATOR","object CREATOR : Parcelable.Creator<ParcelableTextController> ","com.squareup.workflow1.ui.ParcelableTextController.CREATOR"]},{"name":"object CREATOR : Parcelable.Creator<ViewStateCache.Saved> ","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/-c-r-e-a-t-o-r/index.html","searchKeys":["CREATOR","object CREATOR : Parcelable.Creator<ViewStateCache.Saved> ","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.ScreenViewFactory.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.ScreenViewFactory.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.ScreenViewHolder.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.ScreenViewHolder.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-lifecycle-owner/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.androidx.WorkflowLifecycleOwner.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactory.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.navigation.OverlayDialogFactory.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.Companion"]},{"name":"object Companion : ViewEnvironmentKey<OverlayDialogFactoryFinder> ","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory-finder/-companion/index.html","searchKeys":["Companion","object Companion : ViewEnvironmentKey<OverlayDialogFactoryFinder> ","com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.Companion"]},{"name":"object Companion : ViewEnvironmentKey<ScreenViewFactoryFinder> ","description":"com.squareup.workflow1.ui.ScreenViewFactoryFinder.Companion","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory-finder/-companion/index.html","searchKeys":["Companion","object Companion : ViewEnvironmentKey<ScreenViewFactoryFinder> ","com.squareup.workflow1.ui.ScreenViewFactoryFinder.Companion"]},{"name":"object OnBackPressedDispatcherOwnerKey : ViewEnvironmentKey<OnBackPressedDispatcherOwner> ","description":"com.squareup.workflow1.ui.androidx.OnBackPressedDispatcherOwnerKey","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-on-back-pressed-dispatcher-owner-key/index.html","searchKeys":["OnBackPressedDispatcherOwnerKey","object OnBackPressedDispatcherOwnerKey : ViewEnvironmentKey<OnBackPressedDispatcherOwner> ","com.squareup.workflow1.ui.androidx.OnBackPressedDispatcherOwnerKey"]},{"name":"object WorkflowAndroidXSupport","description":"com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-workflow-android-x-support/index.html","searchKeys":["WorkflowAndroidXSupport","object WorkflowAndroidXSupport","com.squareup.workflow1.ui.androidx.WorkflowAndroidXSupport"]},{"name":"open class BackStackContainer constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0) : FrameLayout","description":"com.squareup.workflow1.ui.navigation.BackStackContainer","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/index.html","searchKeys":["BackStackContainer","open class BackStackContainer constructor(context: Context, attributeSet: AttributeSet? = null, defStyle: Int = 0, defStyleRes: Int = 0) : FrameLayout","com.squareup.workflow1.ui.navigation.BackStackContainer"]},{"name":"open fun <OverlayT : Overlay> getDialogFactoryForRendering(environment: ViewEnvironment, rendering: OverlayT): OverlayDialogFactory<OverlayT>","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.getDialogFactoryForRendering","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory-finder/get-dialog-factory-for-rendering.html","searchKeys":["getDialogFactoryForRendering","open fun <OverlayT : Overlay> getDialogFactoryForRendering(environment: ViewEnvironment, rendering: OverlayT): OverlayDialogFactory<OverlayT>","com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.getDialogFactoryForRendering"]},{"name":"open fun <ScreenT : Screen> getViewFactoryForRendering(environment: ViewEnvironment, rendering: ScreenT): ScreenViewFactory<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewFactoryFinder.getViewFactoryForRendering","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory-finder/get-view-factory-for-rendering.html","searchKeys":["getViewFactoryForRendering","open fun <ScreenT : Screen> getViewFactoryForRendering(environment: ViewEnvironment, rendering: ScreenT): ScreenViewFactory<ScreenT>","com.squareup.workflow1.ui.ScreenViewFactoryFinder.getViewFactoryForRendering"]},{"name":"open override fun <D : Screen> map(transform: (C) -> D): BackButtonScreen<D>","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.map","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/map.html","searchKeys":["map","open override fun <D : Screen> map(transform: (C) -> D): BackButtonScreen<D>","com.squareup.workflow1.ui.navigation.BackButtonScreen.map"]},{"name":"open override fun createFromParcel(source: Parcel): BackStackContainer.SavedState","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR.createFromParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/-c-r-e-a-t-o-r/create-from-parcel.html","searchKeys":["createFromParcel","open override fun createFromParcel(source: Parcel): BackStackContainer.SavedState","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR.createFromParcel"]},{"name":"open override fun createFromParcel(source: Parcel): LayeredDialogSessions.SavedState","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR.createFromParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/-c-r-e-a-t-o-r/create-from-parcel.html","searchKeys":["createFromParcel","open override fun createFromParcel(source: Parcel): LayeredDialogSessions.SavedState","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR.createFromParcel"]},{"name":"open override fun createFromParcel(source: Parcel): ParcelableTextController","description":"com.squareup.workflow1.ui.ParcelableTextController.CREATOR.createFromParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/-c-r-e-a-t-o-r/create-from-parcel.html","searchKeys":["createFromParcel","open override fun createFromParcel(source: Parcel): ParcelableTextController","com.squareup.workflow1.ui.ParcelableTextController.CREATOR.createFromParcel"]},{"name":"open override fun createFromParcel(source: Parcel): ViewStateCache.Saved","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR.createFromParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/-c-r-e-a-t-o-r/create-from-parcel.html","searchKeys":["createFromParcel","open override fun createFromParcel(source: Parcel): ViewStateCache.Saved","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR.createFromParcel"]},{"name":"open override fun describeContents(): Int","description":"com.squareup.workflow1.ui.ParcelableTextController.describeContents","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/describe-contents.html","searchKeys":["describeContents","open override fun describeContents(): Int","com.squareup.workflow1.ui.ParcelableTextController.describeContents"]},{"name":"open override fun describeContents(): Int","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.describeContents","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/describe-contents.html","searchKeys":["describeContents","open override fun describeContents(): Int","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.describeContents"]},{"name":"open override fun describeContents(): Int","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.describeContents","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/describe-contents.html","searchKeys":["describeContents","open override fun describeContents(): Int","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.describeContents"]},{"name":"open override fun getVisibility(): Int","description":"com.squareup.workflow1.ui.WorkflowViewStub.getVisibility","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/get-visibility.html","searchKeys":["getVisibility","open override fun getVisibility(): Int","com.squareup.workflow1.ui.WorkflowViewStub.getVisibility"]},{"name":"open override fun newArray(size: Int): Array<BackStackContainer.SavedState?>","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR.newArray","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/-c-r-e-a-t-o-r/new-array.html","searchKeys":["newArray","open override fun newArray(size: Int): Array<BackStackContainer.SavedState?>","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.CREATOR.newArray"]},{"name":"open override fun newArray(size: Int): Array<LayeredDialogSessions.SavedState?>","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR.newArray","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/-c-r-e-a-t-o-r/new-array.html","searchKeys":["newArray","open override fun newArray(size: Int): Array<LayeredDialogSessions.SavedState?>","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.CREATOR.newArray"]},{"name":"open override fun newArray(size: Int): Array<ParcelableTextController?>","description":"com.squareup.workflow1.ui.ParcelableTextController.CREATOR.newArray","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/-c-r-e-a-t-o-r/new-array.html","searchKeys":["newArray","open override fun newArray(size: Int): Array<ParcelableTextController?>","com.squareup.workflow1.ui.ParcelableTextController.CREATOR.newArray"]},{"name":"open override fun newArray(size: Int): Array<ViewStateCache.Saved?>","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR.newArray","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/-c-r-e-a-t-o-r/new-array.html","searchKeys":["newArray","open override fun newArray(size: Int): Array<ViewStateCache.Saved?>","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.CREATOR.newArray"]},{"name":"open override fun setBackground(background: Drawable?)","description":"com.squareup.workflow1.ui.WorkflowViewStub.setBackground","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/set-background.html","searchKeys":["setBackground","open override fun setBackground(background: Drawable?)","com.squareup.workflow1.ui.WorkflowViewStub.setBackground"]},{"name":"open override fun setId(id: Int)","description":"com.squareup.workflow1.ui.WorkflowViewStub.setId","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/set-id.html","searchKeys":["setId","open override fun setId(id: Int)","com.squareup.workflow1.ui.WorkflowViewStub.setId"]},{"name":"open override fun setVisibility(visibility: Int)","description":"com.squareup.workflow1.ui.WorkflowViewStub.setVisibility","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/set-visibility.html","searchKeys":["setVisibility","open override fun setVisibility(visibility: Int)","com.squareup.workflow1.ui.WorkflowViewStub.setVisibility"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.squareup.workflow1.ui.ParcelableTextController.writeToParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-parcelable-text-controller/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.squareup.workflow1.ui.ParcelableTextController.writeToParcel"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.writeToParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.writeToParcel"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.writeToParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/-saved-state/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.SavedState.writeToParcel"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.writeToParcel","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-view-state-cache/-saved/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.squareup.workflow1.ui.navigation.ViewStateCache.Saved.writeToParcel"]},{"name":"open override val compatibilityKey: String","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.compatibilityKey","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/compatibility-key.html","searchKeys":["compatibilityKey","open override val compatibilityKey: String","com.squareup.workflow1.ui.navigation.BackButtonScreen.compatibilityKey"]},{"name":"open override val content: C","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.content","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/content.html","searchKeys":["content","open override val content: C","com.squareup.workflow1.ui.navigation.BackButtonScreen.content"]},{"name":"open override val default: Int = 0","description":"com.squareup.workflow1.ui.navigation.AlertDialogThemeResId.default","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-alert-dialog-theme-res-id/default.html","searchKeys":["default","open override val default: Int = 0","com.squareup.workflow1.ui.navigation.AlertDialogThemeResId.default"]},{"name":"open override val default: OnBackPressedDispatcherOwner","description":"com.squareup.workflow1.ui.androidx.OnBackPressedDispatcherOwnerKey.default","location":"workflow-ui/core-android/com.squareup.workflow1.ui.androidx/-on-back-pressed-dispatcher-owner-key/default.html","searchKeys":["default","open override val default: OnBackPressedDispatcherOwner","com.squareup.workflow1.ui.androidx.OnBackPressedDispatcherOwnerKey.default"]},{"name":"open override val default: OverlayDialogFactoryFinder","description":"com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.Companion.default","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-factory-finder/-companion/default.html","searchKeys":["default","open override val default: OverlayDialogFactoryFinder","com.squareup.workflow1.ui.navigation.OverlayDialogFactoryFinder.Companion.default"]},{"name":"open override val default: ScreenViewFactoryFinder","description":"com.squareup.workflow1.ui.ScreenViewFactoryFinder.Companion.default","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-factory-finder/-companion/default.html","searchKeys":["default","open override val default: ScreenViewFactoryFinder","com.squareup.workflow1.ui.ScreenViewFactoryFinder.Companion.default"]},{"name":"open override val viewFactory: ScreenViewFactory<BackButtonScreen<C>>","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.viewFactory","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/view-factory.html","searchKeys":["viewFactory","open override val viewFactory: ScreenViewFactory<BackButtonScreen<C>>","com.squareup.workflow1.ui.navigation.BackButtonScreen.viewFactory"]},{"name":"operator fun <OverlayT : Overlay> invoke(initialEnvironment: ViewEnvironment, dialog: Dialog, onUpdateBounds: (Rect) -> Unit? = { dialog.setBounds(it) }, runner: (rendering: OverlayT, environment: ViewEnvironment) -> Unit): OverlayDialogHolder<OverlayT>","description":"com.squareup.workflow1.ui.navigation.OverlayDialogHolder.Companion.invoke","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-overlay-dialog-holder/-companion/invoke.html","searchKeys":["invoke","operator fun <OverlayT : Overlay> invoke(initialEnvironment: ViewEnvironment, dialog: Dialog, onUpdateBounds: (Rect) -> Unit? = { dialog.setBounds(it) }, runner: (rendering: OverlayT, environment: ViewEnvironment) -> Unit): OverlayDialogHolder<OverlayT>","com.squareup.workflow1.ui.navigation.OverlayDialogHolder.Companion.invoke"]},{"name":"operator fun <ScreenT : Screen> invoke(initialEnvironment: ViewEnvironment, view: View, viewRunner: ScreenViewRunner<ScreenT>): ScreenViewHolder<ScreenT>","description":"com.squareup.workflow1.ui.ScreenViewHolder.Companion.invoke","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-screen-view-holder/-companion/invoke.html","searchKeys":["invoke","operator fun <ScreenT : Screen> invoke(initialEnvironment: ViewEnvironment, view: View, viewRunner: ScreenViewRunner<ScreenT>): ScreenViewHolder<ScreenT>","com.squareup.workflow1.ui.ScreenViewHolder.Companion.invoke"]},{"name":"typealias ViewBindingInflater<BindingT> = (LayoutInflater, ViewGroup?, Boolean) -> BindingT","description":"com.squareup.workflow1.ui.ViewBindingInflater","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-view-binding-inflater/index.html","searchKeys":["ViewBindingInflater","typealias ViewBindingInflater<BindingT> = (LayoutInflater, ViewGroup?, Boolean) -> BindingT","com.squareup.workflow1.ui.ViewBindingInflater"]},{"name":"val OverlayDialogHolder<*>.showing: Overlay","description":"com.squareup.workflow1.ui.navigation.showing","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/showing.html","searchKeys":["showing","val OverlayDialogHolder<*>.showing: Overlay","com.squareup.workflow1.ui.navigation.showing"]},{"name":"val ScreenViewHolder<*>.showing: Screen","description":"com.squareup.workflow1.ui.showing","location":"workflow-ui/core-android/com.squareup.workflow1.ui/showing.html","searchKeys":["showing","val ScreenViewHolder<*>.showing: Screen","com.squareup.workflow1.ui.showing"]},{"name":"val View.environmentOrNull: ViewEnvironment?","description":"com.squareup.workflow1.ui.environmentOrNull","location":"workflow-ui/core-android/com.squareup.workflow1.ui/environment-or-null.html","searchKeys":["environmentOrNull","val View.environmentOrNull: ViewEnvironment?","com.squareup.workflow1.ui.environmentOrNull"]},{"name":"val View.screenOrNull: Screen?","description":"com.squareup.workflow1.ui.screenOrNull","location":"workflow-ui/core-android/com.squareup.workflow1.ui/screen-or-null.html","searchKeys":["screenOrNull","val View.screenOrNull: Screen?","com.squareup.workflow1.ui.screenOrNull"]},{"name":"val actual: View","description":"com.squareup.workflow1.ui.WorkflowViewStub.actual","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/actual.html","searchKeys":["actual","val actual: View","com.squareup.workflow1.ui.WorkflowViewStub.actual"]},{"name":"val onBackPressed: () -> Unit? = null","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.onBackPressed","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/on-back-pressed.html","searchKeys":["onBackPressed","val onBackPressed: () -> Unit? = null","com.squareup.workflow1.ui.navigation.BackButtonScreen.onBackPressed"]},{"name":"val savedViewState: ViewStateCache.Saved","description":"com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.savedViewState","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-stack-container/-saved-state/saved-view-state.html","searchKeys":["savedViewState","val savedViewState: ViewStateCache.Saved","com.squareup.workflow1.ui.navigation.BackStackContainer.SavedState.savedViewState"]},{"name":"val shadow: Boolean = false","description":"com.squareup.workflow1.ui.navigation.BackButtonScreen.shadow","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-back-button-screen/shadow.html","searchKeys":["shadow","val shadow: Boolean = false","com.squareup.workflow1.ui.navigation.BackButtonScreen.shadow"]},{"name":"var View.screen: Screen","description":"com.squareup.workflow1.ui.screen","location":"workflow-ui/core-android/com.squareup.workflow1.ui/screen.html","searchKeys":["screen","var View.screen: Screen","com.squareup.workflow1.ui.screen"]},{"name":"var allowBodyEvents: Boolean","description":"com.squareup.workflow1.ui.navigation.LayeredDialogSessions.allowBodyEvents","location":"workflow-ui/core-android/com.squareup.workflow1.ui.navigation/-layered-dialog-sessions/allow-body-events.html","searchKeys":["allowBodyEvents","var allowBodyEvents: Boolean","com.squareup.workflow1.ui.navigation.LayeredDialogSessions.allowBodyEvents"]},{"name":"var inflatedId: Int","description":"com.squareup.workflow1.ui.WorkflowViewStub.inflatedId","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/inflated-id.html","searchKeys":["inflatedId","var inflatedId: Int","com.squareup.workflow1.ui.WorkflowViewStub.inflatedId"]},{"name":"var propagatesLayoutParams: Boolean","description":"com.squareup.workflow1.ui.WorkflowViewStub.propagatesLayoutParams","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/propagates-layout-params.html","searchKeys":["propagatesLayoutParams","var propagatesLayoutParams: Boolean","com.squareup.workflow1.ui.WorkflowViewStub.propagatesLayoutParams"]},{"name":"var replaceOldViewInParent: (parent: ViewGroup, newView: View, layoutParams: ViewGroup.LayoutParams?) -> Unit","description":"com.squareup.workflow1.ui.WorkflowViewStub.replaceOldViewInParent","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/replace-old-view-in-parent.html","searchKeys":["replaceOldViewInParent","var replaceOldViewInParent: (parent: ViewGroup, newView: View, layoutParams: ViewGroup.LayoutParams?) -> Unit","com.squareup.workflow1.ui.WorkflowViewStub.replaceOldViewInParent"]},{"name":"var updatesVisibility: Boolean","description":"com.squareup.workflow1.ui.WorkflowViewStub.updatesVisibility","location":"workflow-ui/core-android/com.squareup.workflow1.ui/-workflow-view-stub/updates-visibility.html","searchKeys":["updatesVisibility","var updatesVisibility: Boolean","com.squareup.workflow1.ui.WorkflowViewStub.updatesVisibility"]},{"name":"class JvmTestRuntimeConfigTools","description":"com.squareup.workflow1.config.JvmTestRuntimeConfigTools","location":"workflow-config/config-jvm/com.squareup.workflow1.config/-jvm-test-runtime-config-tools/index.html","searchKeys":["JvmTestRuntimeConfigTools","class JvmTestRuntimeConfigTools","com.squareup.workflow1.config.JvmTestRuntimeConfigTools"]},{"name":"constructor()","description":"com.squareup.workflow1.config.JvmTestRuntimeConfigTools.JvmTestRuntimeConfigTools","location":"workflow-config/config-jvm/com.squareup.workflow1.config/-jvm-test-runtime-config-tools/-jvm-test-runtime-config-tools.html","searchKeys":["JvmTestRuntimeConfigTools","constructor()","com.squareup.workflow1.config.JvmTestRuntimeConfigTools.JvmTestRuntimeConfigTools"]},{"name":"fun getTestRuntimeConfig(): RuntimeConfig","description":"com.squareup.workflow1.config.JvmTestRuntimeConfigTools.Companion.getTestRuntimeConfig","location":"workflow-config/config-jvm/com.squareup.workflow1.config/-jvm-test-runtime-config-tools/-companion/get-test-runtime-config.html","searchKeys":["getTestRuntimeConfig","fun getTestRuntimeConfig(): RuntimeConfig","com.squareup.workflow1.config.JvmTestRuntimeConfigTools.Companion.getTestRuntimeConfig"]},{"name":"object Companion","description":"com.squareup.workflow1.config.JvmTestRuntimeConfigTools.Companion","location":"workflow-config/config-jvm/com.squareup.workflow1.config/-jvm-test-runtime-config-tools/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.config.JvmTestRuntimeConfigTools.Companion"]},{"name":"abstract class PublisherWorker<out OutputT : Any> : Worker<OutputT> ","description":"com.squareup.workflow1.rx2.PublisherWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/-publisher-worker/index.html","searchKeys":["PublisherWorker","abstract class PublisherWorker<out OutputT : Any> : Worker<OutputT> ","com.squareup.workflow1.rx2.PublisherWorker"]},{"name":"abstract fun runPublisher(): Publisher<out OutputT>","description":"com.squareup.workflow1.rx2.PublisherWorker.runPublisher","location":"workflow-rx2/com.squareup.workflow1.rx2/-publisher-worker/run-publisher.html","searchKeys":["runPublisher","abstract fun runPublisher(): Publisher<out OutputT>","com.squareup.workflow1.rx2.PublisherWorker.runPublisher"]},{"name":"constructor()","description":"com.squareup.workflow1.rx2.PublisherWorker.PublisherWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/-publisher-worker/-publisher-worker.html","searchKeys":["PublisherWorker","constructor()","com.squareup.workflow1.rx2.PublisherWorker.PublisherWorker"]},{"name":"fun Completable.asWorker(): Worker<Nothing>","description":"com.squareup.workflow1.rx2.asWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/as-worker.html","searchKeys":["asWorker","fun Completable.asWorker(): Worker<Nothing>","com.squareup.workflow1.rx2.asWorker"]},{"name":"inline fun <T : Any> Maybe<out T?>.asWorker(): Worker<T>","description":"com.squareup.workflow1.rx2.asWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/as-worker.html","searchKeys":["asWorker","inline fun <T : Any> Maybe<out T?>.asWorker(): Worker<T>","com.squareup.workflow1.rx2.asWorker"]},{"name":"inline fun <T : Any> Observable<out T?>.asWorker(): Worker<T>","description":"com.squareup.workflow1.rx2.asWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/as-worker.html","searchKeys":["asWorker","inline fun <T : Any> Observable<out T?>.asWorker(): Worker<T>","com.squareup.workflow1.rx2.asWorker"]},{"name":"inline fun <T : Any> Publisher<out T?>.asWorker(): Worker<T>","description":"com.squareup.workflow1.rx2.asWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/as-worker.html","searchKeys":["asWorker","inline fun <T : Any> Publisher<out T?>.asWorker(): Worker<T>","com.squareup.workflow1.rx2.asWorker"]},{"name":"inline fun <T : Any> Single<out T?>.asWorker(): Worker<T>","description":"com.squareup.workflow1.rx2.asWorker","location":"workflow-rx2/com.squareup.workflow1.rx2/as-worker.html","searchKeys":["asWorker","inline fun <T : Any> Single<out T?>.asWorker(): Worker<T>","com.squareup.workflow1.rx2.asWorker"]},{"name":"override fun run(): Flow<OutputT>","description":"com.squareup.workflow1.rx2.PublisherWorker.run","location":"workflow-rx2/com.squareup.workflow1.rx2/-publisher-worker/run.html","searchKeys":["run","override fun run(): Flow<OutputT>","com.squareup.workflow1.rx2.PublisherWorker.run"]},{"name":"class AndroidRuntimeConfigTools","description":"com.squareup.workflow1.config.AndroidRuntimeConfigTools","location":"workflow-config/config-android/com.squareup.workflow1.config/-android-runtime-config-tools/index.html","searchKeys":["AndroidRuntimeConfigTools","class AndroidRuntimeConfigTools","com.squareup.workflow1.config.AndroidRuntimeConfigTools"]},{"name":"constructor()","description":"com.squareup.workflow1.config.AndroidRuntimeConfigTools.AndroidRuntimeConfigTools","location":"workflow-config/config-android/com.squareup.workflow1.config/-android-runtime-config-tools/-android-runtime-config-tools.html","searchKeys":["AndroidRuntimeConfigTools","constructor()","com.squareup.workflow1.config.AndroidRuntimeConfigTools.AndroidRuntimeConfigTools"]},{"name":"fun getAppWorkflowRuntimeConfig(): RuntimeConfig","description":"com.squareup.workflow1.config.AndroidRuntimeConfigTools.Companion.getAppWorkflowRuntimeConfig","location":"workflow-config/config-android/com.squareup.workflow1.config/-android-runtime-config-tools/-companion/get-app-workflow-runtime-config.html","searchKeys":["getAppWorkflowRuntimeConfig","fun getAppWorkflowRuntimeConfig(): RuntimeConfig","com.squareup.workflow1.config.AndroidRuntimeConfigTools.Companion.getAppWorkflowRuntimeConfig"]},{"name":"object Companion","description":"com.squareup.workflow1.config.AndroidRuntimeConfigTools.Companion","location":"workflow-config/config-android/com.squareup.workflow1.config/-android-runtime-config-tools/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.config.AndroidRuntimeConfigTools.Companion"]},{"name":"abstract class RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTester","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/index.html","searchKeys":["RenderTester","abstract class RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTester"]},{"name":"abstract fun assertNoOutput()","description":"com.squareup.workflow1.testing.WorkerTester.assertNoOutput","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/assert-no-output.html","searchKeys":["assertNoOutput","abstract fun assertNoOutput()","com.squareup.workflow1.testing.WorkerTester.assertNoOutput"]},{"name":"abstract fun assertNotFinished()","description":"com.squareup.workflow1.testing.WorkerTester.assertNotFinished","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/assert-not-finished.html","searchKeys":["assertNotFinished","abstract fun assertNotFinished()","com.squareup.workflow1.testing.WorkerTester.assertNotFinished"]},{"name":"abstract fun expectSideEffect(description: String, exactMatch: Boolean = true, matcher: (key: String) -> Boolean): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTester.expectSideEffect","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/expect-side-effect.html","searchKeys":["expectSideEffect","abstract fun expectSideEffect(description: String, exactMatch: Boolean = true, matcher: (key: String) -> Boolean): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTester.expectSideEffect"]},{"name":"abstract fun render(block: (rendering: RenderingT) -> Unit = {}): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTester.render","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/render.html","searchKeys":["render","abstract fun render(block: (rendering: RenderingT) -> Unit = {}): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTester.render"]},{"name":"abstract fun requireExplicitSideEffectExpectations(): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTester.requireExplicitSideEffectExpectations","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/require-explicit-side-effect-expectations.html","searchKeys":["requireExplicitSideEffectExpectations","abstract fun requireExplicitSideEffectExpectations(): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTester.requireExplicitSideEffectExpectations"]},{"name":"abstract fun requireExplicitWorkerExpectations(): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTester.requireExplicitWorkerExpectations","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/require-explicit-worker-expectations.html","searchKeys":["requireExplicitWorkerExpectations","abstract fun requireExplicitWorkerExpectations(): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTester.requireExplicitWorkerExpectations"]},{"name":"abstract fun testNextRender(): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTestResult.testNextRender","location":"workflow-testing/com.squareup.workflow1.testing/-render-test-result/test-next-render.html","searchKeys":["testNextRender","abstract fun testNextRender(): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTestResult.testNextRender"]},{"name":"abstract fun testNextRenderWithProps(newProps: PropsT): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTestResult.testNextRenderWithProps","location":"workflow-testing/com.squareup.workflow1.testing/-render-test-result/test-next-render-with-props.html","searchKeys":["testNextRenderWithProps","abstract fun testNextRenderWithProps(newProps: PropsT): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTestResult.testNextRenderWithProps"]},{"name":"abstract fun verifyAction(block: (WorkflowAction<PropsT, StateT, OutputT>) -> Unit): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTestResult.verifyAction","location":"workflow-testing/com.squareup.workflow1.testing/-render-test-result/verify-action.html","searchKeys":["verifyAction","abstract fun verifyAction(block: (WorkflowAction<PropsT, StateT, OutputT>) -> Unit): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTestResult.verifyAction"]},{"name":"abstract fun verifyActionResult(block: (newState: StateT, appliedResult: WorkflowOutput<OutputT>?) -> Unit): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTestResult.verifyActionResult","location":"workflow-testing/com.squareup.workflow1.testing/-render-test-result/verify-action-result.html","searchKeys":["verifyActionResult","abstract fun verifyActionResult(block: (newState: StateT, appliedResult: WorkflowOutput<OutputT>?) -> Unit): RenderTestResult<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTestResult.verifyActionResult"]},{"name":"abstract suspend fun assertFinished()","description":"com.squareup.workflow1.testing.WorkerTester.assertFinished","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/assert-finished.html","searchKeys":["assertFinished","abstract suspend fun assertFinished()","com.squareup.workflow1.testing.WorkerTester.assertFinished"]},{"name":"abstract suspend fun cancelWorker()","description":"com.squareup.workflow1.testing.WorkerTester.cancelWorker","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/cancel-worker.html","searchKeys":["cancelWorker","abstract suspend fun cancelWorker()","com.squareup.workflow1.testing.WorkerTester.cancelWorker"]},{"name":"abstract suspend fun getException(): Throwable","description":"com.squareup.workflow1.testing.WorkerTester.getException","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/get-exception.html","searchKeys":["getException","abstract suspend fun getException(): Throwable","com.squareup.workflow1.testing.WorkerTester.getException"]},{"name":"abstract suspend fun nextOutput(): T","description":"com.squareup.workflow1.testing.WorkerTester.nextOutput","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/next-output.html","searchKeys":["nextOutput","abstract suspend fun nextOutput(): T","com.squareup.workflow1.testing.WorkerTester.nextOutput"]},{"name":"abstract val testCoroutineScheduler: TestCoroutineScheduler","description":"com.squareup.workflow1.testing.WorkerTester.testCoroutineScheduler","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/test-coroutine-scheduler.html","searchKeys":["testCoroutineScheduler","abstract val testCoroutineScheduler: TestCoroutineScheduler","com.squareup.workflow1.testing.WorkerTester.testCoroutineScheduler"]},{"name":"class Matched(val childRendering: Any?, val output: WorkflowOutput<Any?>? = null) : RenderTester.ChildWorkflowMatch","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/-matched/index.html","searchKeys":["Matched","class Matched(val childRendering: Any?, val output: WorkflowOutput<Any?>? = null) : RenderTester.ChildWorkflowMatch","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched"]},{"name":"class RenderChildInvocation(val workflow: Workflow<*, *, *>, val props: Any?, val outputType: KTypeProjection, val renderingType: KTypeProjection, val renderKey: String)","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/index.html","searchKeys":["RenderChildInvocation","class RenderChildInvocation(val workflow: Workflow<*, *, *>, val props: Any?, val outputType: KTypeProjection, val renderingType: KTypeProjection, val renderKey: String)","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation"]},{"name":"class StartFromCompleteSnapshot(val snapshot: TreeSnapshot) : WorkflowTestParams.StartMode<Nothing> ","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-complete-snapshot/index.html","searchKeys":["StartFromCompleteSnapshot","class StartFromCompleteSnapshot(val snapshot: TreeSnapshot) : WorkflowTestParams.StartMode<Nothing> ","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot"]},{"name":"class StartFromState<StateT>(val state: StateT) : WorkflowTestParams.StartMode<StateT> ","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-state/index.html","searchKeys":["StartFromState","class StartFromState<StateT>(val state: StateT) : WorkflowTestParams.StartMode<StateT> ","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState"]},{"name":"class StartFromWorkflowSnapshot(val snapshot: Snapshot) : WorkflowTestParams.StartMode<Nothing> ","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-workflow-snapshot/index.html","searchKeys":["StartFromWorkflowSnapshot","class StartFromWorkflowSnapshot(val snapshot: Snapshot) : WorkflowTestParams.StartMode<Nothing> ","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot"]},{"name":"class WorkerSink<T>(name: String, type: KClass<*>) : Worker<T> ","description":"com.squareup.workflow1.testing.WorkerSink","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/index.html","searchKeys":["WorkerSink","class WorkerSink<T>(name: String, type: KClass<*>) : Worker<T> ","com.squareup.workflow1.testing.WorkerSink"]},{"name":"class WorkflowTestParams<out StateT>(val startFrom: WorkflowTestParams.StartMode<StateT> = StartFresh, val checkRenderIdempotence: Boolean = true)","description":"com.squareup.workflow1.testing.WorkflowTestParams","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/index.html","searchKeys":["WorkflowTestParams","class WorkflowTestParams<out StateT>(val startFrom: WorkflowTestParams.StartMode<StateT> = StartFresh, val checkRenderIdempotence: Boolean = true)","com.squareup.workflow1.testing.WorkflowTestParams"]},{"name":"class WorkflowTestRuntime<PropsT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.WorkflowTestRuntime","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/index.html","searchKeys":["WorkflowTestRuntime","class WorkflowTestRuntime<PropsT, OutputT, RenderingT>","com.squareup.workflow1.testing.WorkflowTestRuntime"]},{"name":"class WorkflowTurbine<RenderingT>(val firstRendering: RenderingT, receiveTurbine: ReceiveTurbine<RenderingT>)","description":"com.squareup.workflow1.testing.WorkflowTurbine","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/index.html","searchKeys":["WorkflowTurbine","class WorkflowTurbine<RenderingT>(val firstRendering: RenderingT, receiveTurbine: ReceiveTurbine<RenderingT>)","com.squareup.workflow1.testing.WorkflowTurbine"]},{"name":"const val DEFAULT_TIMEOUT_MS: Long = 500","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.Companion.DEFAULT_TIMEOUT_MS","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/-companion/-d-e-f-a-u-l-t_-t-i-m-e-o-u-t_-m-s.html","searchKeys":["DEFAULT_TIMEOUT_MS","const val DEFAULT_TIMEOUT_MS: Long = 500","com.squareup.workflow1.testing.WorkflowTestRuntime.Companion.DEFAULT_TIMEOUT_MS"]},{"name":"const val WORKFLOW_TEST_DEFAULT_TIMEOUT_MS: Long","description":"com.squareup.workflow1.testing.WorkflowTurbine.Companion.WORKFLOW_TEST_DEFAULT_TIMEOUT_MS","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/-companion/-w-o-r-k-f-l-o-w_-t-e-s-t_-d-e-f-a-u-l-t_-t-i-m-e-o-u-t_-m-s.html","searchKeys":["WORKFLOW_TEST_DEFAULT_TIMEOUT_MS","const val WORKFLOW_TEST_DEFAULT_TIMEOUT_MS: Long","com.squareup.workflow1.testing.WorkflowTurbine.Companion.WORKFLOW_TEST_DEFAULT_TIMEOUT_MS"]},{"name":"constructor()","description":"com.squareup.workflow1.testing.RenderTester.RenderTester","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-tester.html","searchKeys":["RenderTester","constructor()","com.squareup.workflow1.testing.RenderTester.RenderTester"]},{"name":"constructor(childRendering: Any?, output: WorkflowOutput<Any?>? = null)","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.Matched","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/-matched/-matched.html","searchKeys":["Matched","constructor(childRendering: Any?, output: WorkflowOutput<Any?>? = null)","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.Matched"]},{"name":"constructor(firstRendering: RenderingT, receiveTurbine: ReceiveTurbine<RenderingT>)","description":"com.squareup.workflow1.testing.WorkflowTurbine.WorkflowTurbine","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/-workflow-turbine.html","searchKeys":["WorkflowTurbine","constructor(firstRendering: RenderingT, receiveTurbine: ReceiveTurbine<RenderingT>)","com.squareup.workflow1.testing.WorkflowTurbine.WorkflowTurbine"]},{"name":"constructor(name: String, type: KClass<*>)","description":"com.squareup.workflow1.testing.WorkerSink.WorkerSink","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/-worker-sink.html","searchKeys":["WorkerSink","constructor(name: String, type: KClass<*>)","com.squareup.workflow1.testing.WorkerSink.WorkerSink"]},{"name":"constructor(snapshot: Snapshot)","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot.StartFromWorkflowSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-workflow-snapshot/-start-from-workflow-snapshot.html","searchKeys":["StartFromWorkflowSnapshot","constructor(snapshot: Snapshot)","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot.StartFromWorkflowSnapshot"]},{"name":"constructor(snapshot: TreeSnapshot)","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot.StartFromCompleteSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-complete-snapshot/-start-from-complete-snapshot.html","searchKeys":["StartFromCompleteSnapshot","constructor(snapshot: TreeSnapshot)","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot.StartFromCompleteSnapshot"]},{"name":"constructor(startFrom: WorkflowTestParams.StartMode<StateT> = StartFresh, checkRenderIdempotence: Boolean = true)","description":"com.squareup.workflow1.testing.WorkflowTestParams.WorkflowTestParams","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-workflow-test-params.html","searchKeys":["WorkflowTestParams","constructor(startFrom: WorkflowTestParams.StartMode<StateT> = StartFresh, checkRenderIdempotence: Boolean = true)","com.squareup.workflow1.testing.WorkflowTestParams.WorkflowTestParams"]},{"name":"constructor(state: StateT)","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState.StartFromState","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-state/-start-from-state.html","searchKeys":["StartFromState","constructor(state: StateT)","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState.StartFromState"]},{"name":"constructor(workflow: Workflow<*, *, *>, props: Any?, outputType: KTypeProjection, renderingType: KTypeProjection, renderKey: String)","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.RenderChildInvocation","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/-render-child-invocation.html","searchKeys":["RenderChildInvocation","constructor(workflow: Workflow<*, *, *>, props: Any?, outputType: KTypeProjection, renderingType: KTypeProjection, renderKey: String)","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.RenderChildInvocation"]},{"name":"fun <ChildOutputT, ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(identifier: WorkflowIdentifier, rendering: ChildRenderingT, output: WorkflowOutput<ChildOutputT>?, key: String = \"\", description: String = \"\", assertProps: (props: Any?) -> Unit = {}): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorkflow","location":"workflow-testing/com.squareup.workflow1.testing/expect-workflow.html","searchKeys":["expectWorkflow","fun <ChildOutputT, ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(identifier: WorkflowIdentifier, rendering: ChildRenderingT, output: WorkflowOutput<ChildOutputT>?, key: String = \"\", description: String = \"\", assertProps: (props: Any?) -> Unit = {}): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorkflow"]},{"name":"fun <OutputT, RenderingT> Workflow<Unit, OutputT, RenderingT>.headlessIntegrationTest(coroutineContext: CoroutineContext = UnconfinedTestDispatcher(), interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}, testTimeout: Long = WORKFLOW_TEST_DEFAULT_TIMEOUT_MS, testCase: suspend WorkflowTurbine<RenderingT>.() -> Unit)","description":"com.squareup.workflow1.testing.headlessIntegrationTest","location":"workflow-testing/com.squareup.workflow1.testing/headless-integration-test.html","searchKeys":["headlessIntegrationTest","fun <OutputT, RenderingT> Workflow<Unit, OutputT, RenderingT>.headlessIntegrationTest(coroutineContext: CoroutineContext = UnconfinedTestDispatcher(), interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}, testTimeout: Long = WORKFLOW_TEST_DEFAULT_TIMEOUT_MS, testCase: suspend WorkflowTurbine<RenderingT>.() -> Unit)","com.squareup.workflow1.testing.headlessIntegrationTest"]},{"name":"fun <PropsT, OutputT, RenderingT> SessionWorkflow<PropsT, *, OutputT, RenderingT>.testRender(props: PropsT, workflowScope: CoroutineScope): RenderTester<PropsT, *, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.testRender","location":"workflow-testing/com.squareup.workflow1.testing/test-render.html","searchKeys":["testRender","fun <PropsT, OutputT, RenderingT> SessionWorkflow<PropsT, *, OutputT, RenderingT>.testRender(props: PropsT, workflowScope: CoroutineScope): RenderTester<PropsT, *, OutputT, RenderingT>","com.squareup.workflow1.testing.testRender"]},{"name":"fun <PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.headlessIntegrationTest(props: StateFlow<PropsT>, coroutineContext: CoroutineContext = UnconfinedTestDispatcher(), interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}, testTimeout: Long = WORKFLOW_TEST_DEFAULT_TIMEOUT_MS, testCase: suspend WorkflowTurbine<RenderingT>.() -> Unit)","description":"com.squareup.workflow1.testing.headlessIntegrationTest","location":"workflow-testing/com.squareup.workflow1.testing/headless-integration-test.html","searchKeys":["headlessIntegrationTest","fun <PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.headlessIntegrationTest(props: StateFlow<PropsT>, coroutineContext: CoroutineContext = UnconfinedTestDispatcher(), interceptors: List<WorkflowInterceptor> = emptyList(), runtimeConfig: RuntimeConfig = RuntimeConfigOptions.DEFAULT_CONFIG, onOutput: suspend (OutputT) -> Unit = {}, testTimeout: Long = WORKFLOW_TEST_DEFAULT_TIMEOUT_MS, testCase: suspend WorkflowTurbine<RenderingT>.() -> Unit)","com.squareup.workflow1.testing.headlessIntegrationTest"]},{"name":"fun <PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.testRender(props: PropsT): RenderTester<PropsT, *, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.testRender","location":"workflow-testing/com.squareup.workflow1.testing/test-render.html","searchKeys":["testRender","fun <PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.testRender(props: PropsT): RenderTester<PropsT, *, OutputT, RenderingT>","com.squareup.workflow1.testing.testRender"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectSideEffect(key: String): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectSideEffect","location":"workflow-testing/com.squareup.workflow1.testing/expect-side-effect.html","searchKeys":["expectSideEffect","fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectSideEffect(key: String): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectSideEffect"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(workerType: KType, key: String = \"\", assertWorker: (Worker<*>) -> Unit = {}, output: WorkflowOutput<*>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorker","location":"workflow-testing/com.squareup.workflow1.testing/expect-worker.html","searchKeys":["expectWorker","fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(workerType: KType, key: String = \"\", assertWorker: (Worker<*>) -> Unit = {}, output: WorkflowOutput<*>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorker"]},{"name":"fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.testRender(props: PropsT, initialState: StateT): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.testRender","location":"workflow-testing/com.squareup.workflow1.testing/test-render.html","searchKeys":["testRender","fun <PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.testRender(props: PropsT, initialState: StateT): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.testRender"]},{"name":"fun <StateT, OutputT, RenderingT> StatefulWorkflow<Unit, StateT, OutputT, RenderingT>.launchForTestingFromStateWith(initialState: StateT, context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<Unit, OutputT, RenderingT>.() -> Unit)","description":"com.squareup.workflow1.testing.launchForTestingFromStateWith","location":"workflow-testing/com.squareup.workflow1.testing/launch-for-testing-from-state-with.html","searchKeys":["launchForTestingFromStateWith","fun <StateT, OutputT, RenderingT> StatefulWorkflow<Unit, StateT, OutputT, RenderingT>.launchForTestingFromStateWith(initialState: StateT, context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<Unit, OutputT, RenderingT>.() -> Unit)","com.squareup.workflow1.testing.launchForTestingFromStateWith"]},{"name":"fun <T, OutputT, RenderingT> Workflow<Unit, OutputT, RenderingT>.launchForTestingFromStartWith(testParams: WorkflowTestParams<Nothing> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<Unit, OutputT, RenderingT>.() -> T): T","description":"com.squareup.workflow1.testing.launchForTestingFromStartWith","location":"workflow-testing/com.squareup.workflow1.testing/launch-for-testing-from-start-with.html","searchKeys":["launchForTestingFromStartWith","fun <T, OutputT, RenderingT> Workflow<Unit, OutputT, RenderingT>.launchForTestingFromStartWith(testParams: WorkflowTestParams<Nothing> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<Unit, OutputT, RenderingT>.() -> T): T","com.squareup.workflow1.testing.launchForTestingFromStartWith"]},{"name":"fun <T, PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.launchForTestingFromStartWith(props: PropsT, testParams: WorkflowTestParams<Nothing> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","description":"com.squareup.workflow1.testing.launchForTestingFromStartWith","location":"workflow-testing/com.squareup.workflow1.testing/launch-for-testing-from-start-with.html","searchKeys":["launchForTestingFromStartWith","fun <T, PropsT, OutputT, RenderingT> Workflow<PropsT, OutputT, RenderingT>.launchForTestingFromStartWith(props: PropsT, testParams: WorkflowTestParams<Nothing> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","com.squareup.workflow1.testing.launchForTestingFromStartWith"]},{"name":"fun <T, PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.launchForTestingFromStateWith(props: PropsT, initialState: StateT, context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","description":"com.squareup.workflow1.testing.launchForTestingFromStateWith","location":"workflow-testing/com.squareup.workflow1.testing/launch-for-testing-from-state-with.html","searchKeys":["launchForTestingFromStateWith","fun <T, PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.launchForTestingFromStateWith(props: PropsT, initialState: StateT, context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","com.squareup.workflow1.testing.launchForTestingFromStateWith"]},{"name":"fun <T, PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.launchForTestingWith(props: PropsT, testParams: WorkflowTestParams<StateT> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","description":"com.squareup.workflow1.testing.launchForTestingWith","location":"workflow-testing/com.squareup.workflow1.testing/launch-for-testing-with.html","searchKeys":["launchForTestingWith","fun <T, PropsT, StateT, OutputT, RenderingT> StatefulWorkflow<PropsT, StateT, OutputT, RenderingT>.launchForTestingWith(props: PropsT, testParams: WorkflowTestParams<StateT> = WorkflowTestParams(), context: CoroutineContext = EmptyCoroutineContext, block: WorkflowTestRuntime<PropsT, OutputT, RenderingT>.() -> T): T","com.squareup.workflow1.testing.launchForTestingWith"]},{"name":"fun <T> Worker<T>.test(timeoutMs: Long = DEFAULT_TIMEOUT_MS, block: suspend WorkerTester<T>.() -> Unit)","description":"com.squareup.workflow1.testing.test","location":"workflow-testing/com.squareup.workflow1.testing/test.html","searchKeys":["test","fun <T> Worker<T>.test(timeoutMs: Long = DEFAULT_TIMEOUT_MS, block: suspend WorkerTester<T>.() -> Unit)","com.squareup.workflow1.testing.test"]},{"name":"fun awaitNextOutput(timeoutMs: Long? = null): OutputT","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextOutput","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/await-next-output.html","searchKeys":["awaitNextOutput","fun awaitNextOutput(timeoutMs: Long? = null): OutputT","com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextOutput"]},{"name":"fun awaitNextRendering(timeoutMs: Long? = null, skipIntermediate: Boolean = true): RenderingT","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextRendering","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/await-next-rendering.html","searchKeys":["awaitNextRendering","fun awaitNextRendering(timeoutMs: Long? = null, skipIntermediate: Boolean = true): RenderingT","com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextRendering"]},{"name":"fun awaitNextSnapshot(timeoutMs: Long? = null, skipIntermediate: Boolean = true): TreeSnapshot","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/await-next-snapshot.html","searchKeys":["awaitNextSnapshot","fun awaitNextSnapshot(timeoutMs: Long? = null, skipIntermediate: Boolean = true): TreeSnapshot","com.squareup.workflow1.testing.WorkflowTestRuntime.awaitNextSnapshot"]},{"name":"fun send(value: T)","description":"com.squareup.workflow1.testing.WorkerSink.send","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/send.html","searchKeys":["send","fun send(value: T)","com.squareup.workflow1.testing.WorkerSink.send"]},{"name":"fun sendProps(input: PropsT)","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.sendProps","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/send-props.html","searchKeys":["sendProps","fun sendProps(input: PropsT)","com.squareup.workflow1.testing.WorkflowTestRuntime.sendProps"]},{"name":"inline fun <ChildPropsT, ChildOutputT, ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(workflowType: KClass<out Workflow<ChildPropsT, ChildOutputT, ChildRenderingT>>, rendering: ChildRenderingT, key: String = \"\", crossinline assertProps: (props: ChildPropsT) -> Unit = {}, output: WorkflowOutput<ChildOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorkflow","location":"workflow-testing/com.squareup.workflow1.testing/expect-workflow.html","searchKeys":["expectWorkflow","inline fun <ChildPropsT, ChildOutputT, ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(workflowType: KClass<out Workflow<ChildPropsT, ChildOutputT, ChildRenderingT>>, rendering: ChildRenderingT, key: String = \"\", crossinline assertProps: (props: ChildPropsT) -> Unit = {}, output: WorkflowOutput<ChildOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorkflow"]},{"name":"inline fun <ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(identifier: WorkflowIdentifier, rendering: ChildRenderingT, key: String = \"\", description: String = \"\", noinline assertProps: (props: Any?) -> Unit = {}): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorkflow","location":"workflow-testing/com.squareup.workflow1.testing/expect-workflow.html","searchKeys":["expectWorkflow","inline fun <ChildRenderingT, PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkflow(identifier: WorkflowIdentifier, rendering: ChildRenderingT, key: String = \"\", description: String = \"\", noinline assertProps: (props: Any?) -> Unit = {}): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorkflow"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT, WorkerOutputT, WorkerT : Worker<WorkerOutputT>> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(expected: WorkerT, key: String = \"\", output: WorkflowOutput<WorkerOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorker","location":"workflow-testing/com.squareup.workflow1.testing/expect-worker.html","searchKeys":["expectWorker","inline fun <PropsT, StateT, OutputT, RenderingT, WorkerOutputT, WorkerT : Worker<WorkerOutputT>> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(expected: WorkerT, key: String = \"\", output: WorkflowOutput<WorkerOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorker"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT, WorkerOutputT, WorkerT : Worker<WorkerOutputT>> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(workerClass: KClass<out WorkerT>, key: String = \"\", crossinline assertWorker: (WorkerT) -> Unit = {}, output: WorkflowOutput<WorkerOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorker","location":"workflow-testing/com.squareup.workflow1.testing/expect-worker.html","searchKeys":["expectWorker","inline fun <PropsT, StateT, OutputT, RenderingT, WorkerOutputT, WorkerT : Worker<WorkerOutputT>> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorker(workerClass: KClass<out WorkerT>, key: String = \"\", crossinline assertWorker: (WorkerT) -> Unit = {}, output: WorkflowOutput<WorkerOutputT>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorker"]},{"name":"inline fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkerOutputting(outputType: KType, key: String = \"\", crossinline assertWorker: (Worker<*>) -> Unit = {}, output: WorkflowOutput<*>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.expectWorkerOutputting","location":"workflow-testing/com.squareup.workflow1.testing/expect-worker-outputting.html","searchKeys":["expectWorkerOutputting","inline fun <PropsT, StateT, OutputT, RenderingT> RenderTester<PropsT, StateT, OutputT, RenderingT>.expectWorkerOutputting(outputType: KType, key: String = \"\", crossinline assertWorker: (Worker<*>) -> Unit = {}, output: WorkflowOutput<*>? = null, description: String = \"\"): RenderTester<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.expectWorkerOutputting"]},{"name":"inline fun <T> WorkerSink(name: String): WorkerSink<T>","description":"com.squareup.workflow1.testing.WorkerSink","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink.html","searchKeys":["WorkerSink","inline fun <T> WorkerSink(name: String): WorkerSink<T>","com.squareup.workflow1.testing.WorkerSink"]},{"name":"interface RenderTestResult<PropsT, StateT, OutputT, RenderingT>","description":"com.squareup.workflow1.testing.RenderTestResult","location":"workflow-testing/com.squareup.workflow1.testing/-render-test-result/index.html","searchKeys":["RenderTestResult","interface RenderTestResult<PropsT, StateT, OutputT, RenderingT>","com.squareup.workflow1.testing.RenderTestResult"]},{"name":"interface WorkerTester<T>","description":"com.squareup.workflow1.testing.WorkerTester","location":"workflow-testing/com.squareup.workflow1.testing/-worker-tester/index.html","searchKeys":["WorkerTester","interface WorkerTester<T>","com.squareup.workflow1.testing.WorkerTester"]},{"name":"object Companion","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.Companion","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.testing.WorkflowTestRuntime.Companion"]},{"name":"object Companion","description":"com.squareup.workflow1.testing.WorkflowTurbine.Companion","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.workflow1.testing.WorkflowTurbine.Companion"]},{"name":"object NotMatched : RenderTester.ChildWorkflowMatch","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.NotMatched","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/-not-matched/index.html","searchKeys":["NotMatched","object NotMatched : RenderTester.ChildWorkflowMatch","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.NotMatched"]},{"name":"object RenderIdempotencyChecker : WorkflowInterceptor","description":"com.squareup.workflow1.testing.RenderIdempotencyChecker","location":"workflow-testing/com.squareup.workflow1.testing/-render-idempotency-checker/index.html","searchKeys":["RenderIdempotencyChecker","object RenderIdempotencyChecker : WorkflowInterceptor","com.squareup.workflow1.testing.RenderIdempotencyChecker"]},{"name":"object StartFresh : WorkflowTestParams.StartMode<Nothing> ","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFresh","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-fresh/index.html","searchKeys":["StartFresh","object StartFresh : WorkflowTestParams.StartMode<Nothing> ","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFresh"]},{"name":"open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","description":"com.squareup.workflow1.testing.RenderIdempotencyChecker.onRender","location":"workflow-testing/com.squareup.workflow1.testing/-render-idempotency-checker/on-render.html","searchKeys":["onRender","open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","com.squareup.workflow1.testing.RenderIdempotencyChecker.onRender"]},{"name":"open override fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","description":"com.squareup.workflow1.testing.WorkerSink.doesSameWorkAs","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/does-same-work-as.html","searchKeys":["doesSameWorkAs","open override fun doesSameWorkAs(otherWorker: Worker<*>): Boolean","com.squareup.workflow1.testing.WorkerSink.doesSameWorkAs"]},{"name":"open override fun run(): Flow<T>","description":"com.squareup.workflow1.testing.WorkerSink.run","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/run.html","searchKeys":["run","open override fun run(): Flow<T>","com.squareup.workflow1.testing.WorkerSink.run"]},{"name":"open override fun toString(): String","description":"com.squareup.workflow1.testing.WorkerSink.toString","location":"workflow-testing/com.squareup.workflow1.testing/-worker-sink/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.workflow1.testing.WorkerSink.toString"]},{"name":"sealed class ChildWorkflowMatch","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/index.html","searchKeys":["ChildWorkflowMatch","sealed class ChildWorkflowMatch","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch"]},{"name":"sealed class StartMode<out StateT>","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/index.html","searchKeys":["StartMode","sealed class StartMode<out StateT>","com.squareup.workflow1.testing.WorkflowTestParams.StartMode"]},{"name":"suspend fun <T> awaitNext(precondition: (RenderingT) -> Boolean = { true }, map: (RenderingT) -> T, satisfying: T.() -> Boolean = { true }): T","description":"com.squareup.workflow1.testing.WorkflowTurbine.awaitNext","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/await-next.html","searchKeys":["awaitNext","suspend fun <T> awaitNext(precondition: (RenderingT) -> Boolean = { true }, map: (RenderingT) -> T, satisfying: T.() -> Boolean = { true }): T","com.squareup.workflow1.testing.WorkflowTurbine.awaitNext"]},{"name":"suspend fun awaitNextRendering(): RenderingT","description":"com.squareup.workflow1.testing.WorkflowTurbine.awaitNextRendering","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/await-next-rendering.html","searchKeys":["awaitNextRendering","suspend fun awaitNextRendering(): RenderingT","com.squareup.workflow1.testing.WorkflowTurbine.awaitNextRendering"]},{"name":"suspend fun awaitNextRenderingSatisfying(predicate: (RenderingT) -> Boolean): RenderingT","description":"com.squareup.workflow1.testing.WorkflowTurbine.awaitNextRenderingSatisfying","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/await-next-rendering-satisfying.html","searchKeys":["awaitNextRenderingSatisfying","suspend fun awaitNextRenderingSatisfying(predicate: (RenderingT) -> Boolean): RenderingT","com.squareup.workflow1.testing.WorkflowTurbine.awaitNextRenderingSatisfying"]},{"name":"suspend fun skipRenderings(count: Int)","description":"com.squareup.workflow1.testing.WorkflowTurbine.skipRenderings","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/skip-renderings.html","searchKeys":["skipRenderings","suspend fun skipRenderings(count: Int)","com.squareup.workflow1.testing.WorkflowTurbine.skipRenderings"]},{"name":"val checkRenderIdempotence: Boolean = true","description":"com.squareup.workflow1.testing.WorkflowTestParams.checkRenderIdempotence","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/check-render-idempotence.html","searchKeys":["checkRenderIdempotence","val checkRenderIdempotence: Boolean = true","com.squareup.workflow1.testing.WorkflowTestParams.checkRenderIdempotence"]},{"name":"val childRendering: Any?","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.childRendering","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/-matched/child-rendering.html","searchKeys":["childRendering","val childRendering: Any?","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.childRendering"]},{"name":"val firstRendering: RenderingT","description":"com.squareup.workflow1.testing.WorkflowTurbine.firstRendering","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-turbine/first-rendering.html","searchKeys":["firstRendering","val firstRendering: RenderingT","com.squareup.workflow1.testing.WorkflowTurbine.firstRendering"]},{"name":"val hasOutput: Boolean","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.hasOutput","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/has-output.html","searchKeys":["hasOutput","val hasOutput: Boolean","com.squareup.workflow1.testing.WorkflowTestRuntime.hasOutput"]},{"name":"val hasRendering: Boolean","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.hasRendering","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/has-rendering.html","searchKeys":["hasRendering","val hasRendering: Boolean","com.squareup.workflow1.testing.WorkflowTestRuntime.hasRendering"]},{"name":"val hasSnapshot: Boolean","description":"com.squareup.workflow1.testing.WorkflowTestRuntime.hasSnapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-runtime/has-snapshot.html","searchKeys":["hasSnapshot","val hasSnapshot: Boolean","com.squareup.workflow1.testing.WorkflowTestRuntime.hasSnapshot"]},{"name":"val output: WorkflowOutput<Any?>? = null","description":"com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.output","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-child-workflow-match/-matched/output.html","searchKeys":["output","val output: WorkflowOutput<Any?>? = null","com.squareup.workflow1.testing.RenderTester.ChildWorkflowMatch.Matched.output"]},{"name":"val outputType: KTypeProjection","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.outputType","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/output-type.html","searchKeys":["outputType","val outputType: KTypeProjection","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.outputType"]},{"name":"val props: Any?","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.props","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/props.html","searchKeys":["props","val props: Any?","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.props"]},{"name":"val renderKey: String","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.renderKey","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/render-key.html","searchKeys":["renderKey","val renderKey: String","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.renderKey"]},{"name":"val renderingType: KTypeProjection","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.renderingType","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/rendering-type.html","searchKeys":["renderingType","val renderingType: KTypeProjection","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.renderingType"]},{"name":"val snapshot: Snapshot","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot.snapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-workflow-snapshot/snapshot.html","searchKeys":["snapshot","val snapshot: Snapshot","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromWorkflowSnapshot.snapshot"]},{"name":"val snapshot: TreeSnapshot","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot.snapshot","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-complete-snapshot/snapshot.html","searchKeys":["snapshot","val snapshot: TreeSnapshot","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromCompleteSnapshot.snapshot"]},{"name":"val startFrom: WorkflowTestParams.StartMode<StateT>","description":"com.squareup.workflow1.testing.WorkflowTestParams.startFrom","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/start-from.html","searchKeys":["startFrom","val startFrom: WorkflowTestParams.StartMode<StateT>","com.squareup.workflow1.testing.WorkflowTestParams.startFrom"]},{"name":"val state: StateT","description":"com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState.state","location":"workflow-testing/com.squareup.workflow1.testing/-workflow-test-params/-start-mode/-start-from-state/state.html","searchKeys":["state","val state: StateT","com.squareup.workflow1.testing.WorkflowTestParams.StartMode.StartFromState.state"]},{"name":"val workflow: Workflow<*, *, *>","description":"com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.workflow","location":"workflow-testing/com.squareup.workflow1.testing/-render-tester/-render-child-invocation/workflow.html","searchKeys":["workflow","val workflow: Workflow<*, *, *>","com.squareup.workflow1.testing.RenderTester.RenderChildInvocation.workflow"]},{"name":"abstract fun freeMemory(): Long","description":"com.squareup.workflow1.diagnostic.tracing.MemoryStats.freeMemory","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-memory-stats/free-memory.html","searchKeys":["freeMemory","abstract fun freeMemory(): Long","com.squareup.workflow1.diagnostic.tracing.MemoryStats.freeMemory"]},{"name":"abstract fun totalMemory(): Long","description":"com.squareup.workflow1.diagnostic.tracing.MemoryStats.totalMemory","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-memory-stats/total-memory.html","searchKeys":["totalMemory","abstract fun totalMemory(): Long","com.squareup.workflow1.diagnostic.tracing.MemoryStats.totalMemory"]},{"name":"class TracingWorkflowInterceptor : WorkflowInterceptor","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/index.html","searchKeys":["TracingWorkflowInterceptor","class TracingWorkflowInterceptor : WorkflowInterceptor","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor"]},{"name":"constructor(memoryStats: MemoryStats = RuntimeMemoryStats, loggerProvider: (workflowScope: CoroutineScope, workflowType: String) -> TraceLogger)","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.TracingWorkflowInterceptor","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/-tracing-workflow-interceptor.html","searchKeys":["TracingWorkflowInterceptor","constructor(memoryStats: MemoryStats = RuntimeMemoryStats, loggerProvider: (workflowScope: CoroutineScope, workflowType: String) -> TraceLogger)","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.TracingWorkflowInterceptor"]},{"name":"fun TracingWorkflowInterceptor(file: File, name: String = \"\"): TracingWorkflowInterceptor","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor.html","searchKeys":["TracingWorkflowInterceptor","fun TracingWorkflowInterceptor(file: File, name: String = \"\"): TracingWorkflowInterceptor","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor"]},{"name":"fun TracingWorkflowInterceptor(name: String = \"\", memoryStats: MemoryStats = RuntimeMemoryStats, encoderProvider: (workflowScope: CoroutineScope) -> TraceEncoder): TracingWorkflowInterceptor","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor.html","searchKeys":["TracingWorkflowInterceptor","fun TracingWorkflowInterceptor(name: String = \"\", memoryStats: MemoryStats = RuntimeMemoryStats, encoderProvider: (workflowScope: CoroutineScope) -> TraceEncoder): TracingWorkflowInterceptor","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor"]},{"name":"interface MemoryStats","description":"com.squareup.workflow1.diagnostic.tracing.MemoryStats","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-memory-stats/index.html","searchKeys":["MemoryStats","interface MemoryStats","com.squareup.workflow1.diagnostic.tracing.MemoryStats"]},{"name":"object RuntimeMemoryStats : MemoryStats","description":"com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-runtime-memory-stats/index.html","searchKeys":["RuntimeMemoryStats","object RuntimeMemoryStats : MemoryStats","com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats"]},{"name":"open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onRender","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/on-render.html","searchKeys":["onRender","open override fun <P, S, O, R> onRender(renderProps: P, renderState: S, context: BaseRenderContext<P, S, O>, proceed: (P, S, WorkflowInterceptor.RenderContextInterceptor<P, S, O>?) -> R, session: WorkflowInterceptor.WorkflowSession): R","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onRender"]},{"name":"open override fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onInitialState","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/on-initial-state.html","searchKeys":["onInitialState","open override fun <P, S> onInitialState(props: P, snapshot: Snapshot?, workflowScope: CoroutineScope, proceed: (P, Snapshot?, CoroutineScope) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onInitialState"]},{"name":"open override fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onPropsChanged","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/on-props-changed.html","searchKeys":["onPropsChanged","open override fun <P, S> onPropsChanged(old: P, new: P, state: S, proceed: (P, P, S) -> S, session: WorkflowInterceptor.WorkflowSession): S","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onPropsChanged"]},{"name":"open override fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onSnapshotState","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/on-snapshot-state.html","searchKeys":["onSnapshotState","open override fun <S> onSnapshotState(state: S, proceed: (S) -> Snapshot?, session: WorkflowInterceptor.WorkflowSession): Snapshot?","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onSnapshotState"]},{"name":"open override fun freeMemory(): Long","description":"com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats.freeMemory","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-runtime-memory-stats/free-memory.html","searchKeys":["freeMemory","open override fun freeMemory(): Long","com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats.freeMemory"]},{"name":"open override fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","description":"com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onSessionStarted","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-tracing-workflow-interceptor/on-session-started.html","searchKeys":["onSessionStarted","open override fun onSessionStarted(workflowScope: CoroutineScope, session: WorkflowInterceptor.WorkflowSession)","com.squareup.workflow1.diagnostic.tracing.TracingWorkflowInterceptor.onSessionStarted"]},{"name":"open override fun totalMemory(): Long","description":"com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats.totalMemory","location":"workflow-tracing/com.squareup.workflow1.diagnostic.tracing/-runtime-memory-stats/total-memory.html","searchKeys":["totalMemory","open override fun totalMemory(): Long","com.squareup.workflow1.diagnostic.tracing.RuntimeMemoryStats.totalMemory"]},{"name":"fun <RenderingT : Screen> ScreenViewFactory<RenderingT>.Preview(rendering: RenderingT, modifier: Modifier = Modifier, placeholderModifier: Modifier = Modifier, viewEnvironmentUpdater: (ViewEnvironment) -> ViewEnvironment? = null)","description":"com.squareup.workflow1.ui.compose.tooling.Preview","location":"workflow-ui/compose-tooling/com.squareup.workflow1.ui.compose.tooling/-preview.html","searchKeys":["Preview","fun <RenderingT : Screen> ScreenViewFactory<RenderingT>.Preview(rendering: RenderingT, modifier: Modifier = Modifier, placeholderModifier: Modifier = Modifier, viewEnvironmentUpdater: (ViewEnvironment) -> ViewEnvironment? = null)","com.squareup.workflow1.ui.compose.tooling.Preview"]},{"name":"GLOBAL","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.GLOBAL","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/-g-l-o-b-a-l/index.html","searchKeys":["GLOBAL","GLOBAL","com.squareup.tracing.TraceEvent.Instant.InstantScope.GLOBAL"]},{"name":"PROCESS","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.PROCESS","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/-p-r-o-c-e-s-s/index.html","searchKeys":["PROCESS","PROCESS","com.squareup.tracing.TraceEvent.Instant.InstantScope.PROCESS"]},{"name":"THREAD","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.THREAD","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/-t-h-r-e-a-d/index.html","searchKeys":["THREAD","THREAD","com.squareup.tracing.TraceEvent.Instant.InstantScope.THREAD"]},{"name":"abstract fun log(event: TraceEvent)","description":"com.squareup.tracing.TraceLogger.log","location":"trace-encoder/com.squareup.tracing/-trace-logger/log.html","searchKeys":["log","abstract fun log(event: TraceEvent)","com.squareup.tracing.TraceLogger.log"]},{"name":"abstract fun log(eventBatch: List<TraceEvent>)","description":"com.squareup.tracing.TraceLogger.log","location":"trace-encoder/com.squareup.tracing/-trace-logger/log.html","searchKeys":["log","abstract fun log(eventBatch: List<TraceEvent>)","com.squareup.tracing.TraceLogger.log"]},{"name":"abstract val elapsedNow: Long","description":"com.squareup.tracing.TimeMark.elapsedNow","location":"trace-encoder/com.squareup.tracing/-time-mark/elapsed-now.html","searchKeys":["elapsedNow","abstract val elapsedNow: Long","com.squareup.tracing.TimeMark.elapsedNow"]},{"name":"class TraceEncoder(scope: CoroutineScope, start: TimeMark = TraceEncoderTimeMark, ioDispatcher: CoroutineDispatcher = IO, sinkProvider: () -> BufferedSink) : Closeable","description":"com.squareup.tracing.TraceEncoder","location":"trace-encoder/com.squareup.tracing/-trace-encoder/index.html","searchKeys":["TraceEncoder","class TraceEncoder(scope: CoroutineScope, start: TimeMark = TraceEncoderTimeMark, ioDispatcher: CoroutineDispatcher = IO, sinkProvider: () -> BufferedSink) : Closeable","com.squareup.tracing.TraceEncoder"]},{"name":"constructor(id: Any, name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin.AsyncDurationBegin","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/-async-duration-begin.html","searchKeys":["AsyncDurationBegin","constructor(id: Any, name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","com.squareup.tracing.TraceEvent.AsyncDurationBegin.AsyncDurationBegin"]},{"name":"constructor(id: Any, name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd.AsyncDurationEnd","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/-async-duration-end.html","searchKeys":["AsyncDurationEnd","constructor(id: Any, name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","com.squareup.tracing.TraceEvent.AsyncDurationEnd.AsyncDurationEnd"]},{"name":"constructor(id: Long, objectType: String)","description":"com.squareup.tracing.TraceEvent.ObjectCreated.ObjectCreated","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-created/-object-created.html","searchKeys":["ObjectCreated","constructor(id: Long, objectType: String)","com.squareup.tracing.TraceEvent.ObjectCreated.ObjectCreated"]},{"name":"constructor(id: Long, objectType: String)","description":"com.squareup.tracing.TraceEvent.ObjectDestroyed.ObjectDestroyed","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-destroyed/-object-destroyed.html","searchKeys":["ObjectDestroyed","constructor(id: Long, objectType: String)","com.squareup.tracing.TraceEvent.ObjectDestroyed.ObjectDestroyed"]},{"name":"constructor(id: Long, objectType: String, snapshot: Any)","description":"com.squareup.tracing.TraceEvent.ObjectSnapshot.ObjectSnapshot","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-snapshot/-object-snapshot.html","searchKeys":["ObjectSnapshot","constructor(id: Long, objectType: String, snapshot: Any)","com.squareup.tracing.TraceEvent.ObjectSnapshot.ObjectSnapshot"]},{"name":"constructor(name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","description":"com.squareup.tracing.TraceEvent.DurationBegin.DurationBegin","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-begin/-duration-begin.html","searchKeys":["DurationBegin","constructor(name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","com.squareup.tracing.TraceEvent.DurationBegin.DurationBegin"]},{"name":"constructor(name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","description":"com.squareup.tracing.TraceEvent.DurationEnd.DurationEnd","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-end/-duration-end.html","searchKeys":["DurationEnd","constructor(name: String, args: Map<String, Any?> = emptyMap(), category: String? = null)","com.squareup.tracing.TraceEvent.DurationEnd.DurationEnd"]},{"name":"constructor(name: String, args: Map<String, Any?> = emptyMap(), scope: TraceEvent.Instant.InstantScope = THREAD, category: String? = null)","description":"com.squareup.tracing.TraceEvent.Instant.Instant","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant.html","searchKeys":["Instant","constructor(name: String, args: Map<String, Any?> = emptyMap(), scope: TraceEvent.Instant.InstantScope = THREAD, category: String? = null)","com.squareup.tracing.TraceEvent.Instant.Instant"]},{"name":"constructor(name: String, series: Map<String, Number>, id: Long? = null)","description":"com.squareup.tracing.TraceEvent.Counter.Counter","location":"trace-encoder/com.squareup.tracing/-trace-event/-counter/-counter.html","searchKeys":["Counter","constructor(name: String, series: Map<String, Number>, id: Long? = null)","com.squareup.tracing.TraceEvent.Counter.Counter"]},{"name":"constructor(scope: CoroutineScope, start: TimeMark = TraceEncoderTimeMark, ioDispatcher: CoroutineDispatcher = IO, sinkProvider: () -> BufferedSink)","description":"com.squareup.tracing.TraceEncoder.TraceEncoder","location":"trace-encoder/com.squareup.tracing/-trace-encoder/-trace-encoder.html","searchKeys":["TraceEncoder","constructor(scope: CoroutineScope, start: TimeMark = TraceEncoderTimeMark, ioDispatcher: CoroutineDispatcher = IO, sinkProvider: () -> BufferedSink)","com.squareup.tracing.TraceEncoder.TraceEncoder"]},{"name":"data class AsyncDurationBegin(val id: Any, val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/index.html","searchKeys":["AsyncDurationBegin","data class AsyncDurationBegin(val id: Any, val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","com.squareup.tracing.TraceEvent.AsyncDurationBegin"]},{"name":"data class AsyncDurationEnd(val id: Any, val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/index.html","searchKeys":["AsyncDurationEnd","data class AsyncDurationEnd(val id: Any, val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","com.squareup.tracing.TraceEvent.AsyncDurationEnd"]},{"name":"data class Counter(val name: String, val series: Map<String, Number>, val id: Long? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.Counter","location":"trace-encoder/com.squareup.tracing/-trace-event/-counter/index.html","searchKeys":["Counter","data class Counter(val name: String, val series: Map<String, Number>, val id: Long? = null) : TraceEvent","com.squareup.tracing.TraceEvent.Counter"]},{"name":"data class DurationBegin(val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.DurationBegin","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-begin/index.html","searchKeys":["DurationBegin","data class DurationBegin(val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","com.squareup.tracing.TraceEvent.DurationBegin"]},{"name":"data class DurationEnd(val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.DurationEnd","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-end/index.html","searchKeys":["DurationEnd","data class DurationEnd(val name: String, val args: Map<String, Any?> = emptyMap(), val category: String? = null) : TraceEvent","com.squareup.tracing.TraceEvent.DurationEnd"]},{"name":"data class Instant(val name: String, val args: Map<String, Any?> = emptyMap(), val scope: TraceEvent.Instant.InstantScope = THREAD, val category: String? = null) : TraceEvent","description":"com.squareup.tracing.TraceEvent.Instant","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/index.html","searchKeys":["Instant","data class Instant(val name: String, val args: Map<String, Any?> = emptyMap(), val scope: TraceEvent.Instant.InstantScope = THREAD, val category: String? = null) : TraceEvent","com.squareup.tracing.TraceEvent.Instant"]},{"name":"data class ObjectCreated(val id: Long, val objectType: String) : TraceEvent","description":"com.squareup.tracing.TraceEvent.ObjectCreated","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-created/index.html","searchKeys":["ObjectCreated","data class ObjectCreated(val id: Long, val objectType: String) : TraceEvent","com.squareup.tracing.TraceEvent.ObjectCreated"]},{"name":"data class ObjectDestroyed(val id: Long, val objectType: String) : TraceEvent","description":"com.squareup.tracing.TraceEvent.ObjectDestroyed","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-destroyed/index.html","searchKeys":["ObjectDestroyed","data class ObjectDestroyed(val id: Long, val objectType: String) : TraceEvent","com.squareup.tracing.TraceEvent.ObjectDestroyed"]},{"name":"data class ObjectSnapshot(val id: Long, val objectType: String, val snapshot: Any) : TraceEvent","description":"com.squareup.tracing.TraceEvent.ObjectSnapshot","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-snapshot/index.html","searchKeys":["ObjectSnapshot","data class ObjectSnapshot(val id: Long, val objectType: String, val snapshot: Any) : TraceEvent","com.squareup.tracing.TraceEvent.ObjectSnapshot"]},{"name":"enum InstantScope : Enum<TraceEvent.Instant.InstantScope> ","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/index.html","searchKeys":["InstantScope","enum InstantScope : Enum<TraceEvent.Instant.InstantScope> ","com.squareup.tracing.TraceEvent.Instant.InstantScope"]},{"name":"fun createLogger(processName: String = \"\", threadName: String = \"\"): TraceLogger","description":"com.squareup.tracing.TraceEncoder.createLogger","location":"trace-encoder/com.squareup.tracing/-trace-encoder/create-logger.html","searchKeys":["createLogger","fun createLogger(processName: String = \"\", threadName: String = \"\"): TraceLogger","com.squareup.tracing.TraceEncoder.createLogger"]},{"name":"fun valueOf(value: String): TraceEvent.Instant.InstantScope","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.valueOf","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TraceEvent.Instant.InstantScope","com.squareup.tracing.TraceEvent.Instant.InstantScope.valueOf"]},{"name":"fun values(): Array<TraceEvent.Instant.InstantScope>","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.values","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/values.html","searchKeys":["values","fun values(): Array<TraceEvent.Instant.InstantScope>","com.squareup.tracing.TraceEvent.Instant.InstantScope.values"]},{"name":"interface TimeMark","description":"com.squareup.tracing.TimeMark","location":"trace-encoder/com.squareup.tracing/-time-mark/index.html","searchKeys":["TimeMark","interface TimeMark","com.squareup.tracing.TimeMark"]},{"name":"interface TraceLogger","description":"com.squareup.tracing.TraceLogger","location":"trace-encoder/com.squareup.tracing/-trace-logger/index.html","searchKeys":["TraceLogger","interface TraceLogger","com.squareup.tracing.TraceLogger"]},{"name":"open override fun close()","description":"com.squareup.tracing.TraceEncoder.close","location":"trace-encoder/com.squareup.tracing/-trace-encoder/close.html","searchKeys":["close","open override fun close()","com.squareup.tracing.TraceEncoder.close"]},{"name":"open override val category: String? = null","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin.category","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/category.html","searchKeys":["category","open override val category: String? = null","com.squareup.tracing.TraceEvent.AsyncDurationBegin.category"]},{"name":"open override val category: String? = null","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd.category","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/category.html","searchKeys":["category","open override val category: String? = null","com.squareup.tracing.TraceEvent.AsyncDurationEnd.category"]},{"name":"open override val category: String? = null","description":"com.squareup.tracing.TraceEvent.DurationBegin.category","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-begin/category.html","searchKeys":["category","open override val category: String? = null","com.squareup.tracing.TraceEvent.DurationBegin.category"]},{"name":"open override val category: String? = null","description":"com.squareup.tracing.TraceEvent.DurationEnd.category","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-end/category.html","searchKeys":["category","open override val category: String? = null","com.squareup.tracing.TraceEvent.DurationEnd.category"]},{"name":"open override val category: String? = null","description":"com.squareup.tracing.TraceEvent.Instant.category","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/category.html","searchKeys":["category","open override val category: String? = null","com.squareup.tracing.TraceEvent.Instant.category"]},{"name":"open val category: String?","description":"com.squareup.tracing.TraceEvent.category","location":"trace-encoder/com.squareup.tracing/-trace-event/category.html","searchKeys":["category","open val category: String?","com.squareup.tracing.TraceEvent.category"]},{"name":"sealed class TraceEvent","description":"com.squareup.tracing.TraceEvent","location":"trace-encoder/com.squareup.tracing/-trace-event/index.html","searchKeys":["TraceEvent","sealed class TraceEvent","com.squareup.tracing.TraceEvent"]},{"name":"val args: Map<String, Any?>","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin.args","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/args.html","searchKeys":["args","val args: Map<String, Any?>","com.squareup.tracing.TraceEvent.AsyncDurationBegin.args"]},{"name":"val args: Map<String, Any?>","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd.args","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/args.html","searchKeys":["args","val args: Map<String, Any?>","com.squareup.tracing.TraceEvent.AsyncDurationEnd.args"]},{"name":"val args: Map<String, Any?>","description":"com.squareup.tracing.TraceEvent.DurationBegin.args","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-begin/args.html","searchKeys":["args","val args: Map<String, Any?>","com.squareup.tracing.TraceEvent.DurationBegin.args"]},{"name":"val args: Map<String, Any?>","description":"com.squareup.tracing.TraceEvent.DurationEnd.args","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-end/args.html","searchKeys":["args","val args: Map<String, Any?>","com.squareup.tracing.TraceEvent.DurationEnd.args"]},{"name":"val args: Map<String, Any?>","description":"com.squareup.tracing.TraceEvent.Instant.args","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/args.html","searchKeys":["args","val args: Map<String, Any?>","com.squareup.tracing.TraceEvent.Instant.args"]},{"name":"val entries: EnumEntries<TraceEvent.Instant.InstantScope>","description":"com.squareup.tracing.TraceEvent.Instant.InstantScope.entries","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/-instant-scope/entries.html","searchKeys":["entries","val entries: EnumEntries<TraceEvent.Instant.InstantScope>","com.squareup.tracing.TraceEvent.Instant.InstantScope.entries"]},{"name":"val id: Any","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/id.html","searchKeys":["id","val id: Any","com.squareup.tracing.TraceEvent.AsyncDurationBegin.id"]},{"name":"val id: Any","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/id.html","searchKeys":["id","val id: Any","com.squareup.tracing.TraceEvent.AsyncDurationEnd.id"]},{"name":"val id: Long","description":"com.squareup.tracing.TraceEvent.ObjectCreated.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-created/id.html","searchKeys":["id","val id: Long","com.squareup.tracing.TraceEvent.ObjectCreated.id"]},{"name":"val id: Long","description":"com.squareup.tracing.TraceEvent.ObjectDestroyed.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-destroyed/id.html","searchKeys":["id","val id: Long","com.squareup.tracing.TraceEvent.ObjectDestroyed.id"]},{"name":"val id: Long","description":"com.squareup.tracing.TraceEvent.ObjectSnapshot.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-snapshot/id.html","searchKeys":["id","val id: Long","com.squareup.tracing.TraceEvent.ObjectSnapshot.id"]},{"name":"val id: Long? = null","description":"com.squareup.tracing.TraceEvent.Counter.id","location":"trace-encoder/com.squareup.tracing/-trace-event/-counter/id.html","searchKeys":["id","val id: Long? = null","com.squareup.tracing.TraceEvent.Counter.id"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.AsyncDurationBegin.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-begin/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.AsyncDurationBegin.name"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.AsyncDurationEnd.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-async-duration-end/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.AsyncDurationEnd.name"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.Counter.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-counter/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.Counter.name"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.DurationBegin.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-begin/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.DurationBegin.name"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.DurationEnd.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-duration-end/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.DurationEnd.name"]},{"name":"val name: String","description":"com.squareup.tracing.TraceEvent.Instant.name","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/name.html","searchKeys":["name","val name: String","com.squareup.tracing.TraceEvent.Instant.name"]},{"name":"val objectType: String","description":"com.squareup.tracing.TraceEvent.ObjectCreated.objectType","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-created/object-type.html","searchKeys":["objectType","val objectType: String","com.squareup.tracing.TraceEvent.ObjectCreated.objectType"]},{"name":"val objectType: String","description":"com.squareup.tracing.TraceEvent.ObjectDestroyed.objectType","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-destroyed/object-type.html","searchKeys":["objectType","val objectType: String","com.squareup.tracing.TraceEvent.ObjectDestroyed.objectType"]},{"name":"val objectType: String","description":"com.squareup.tracing.TraceEvent.ObjectSnapshot.objectType","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-snapshot/object-type.html","searchKeys":["objectType","val objectType: String","com.squareup.tracing.TraceEvent.ObjectSnapshot.objectType"]},{"name":"val scope: TraceEvent.Instant.InstantScope","description":"com.squareup.tracing.TraceEvent.Instant.scope","location":"trace-encoder/com.squareup.tracing/-trace-event/-instant/scope.html","searchKeys":["scope","val scope: TraceEvent.Instant.InstantScope","com.squareup.tracing.TraceEvent.Instant.scope"]},{"name":"val series: Map<String, Number>","description":"com.squareup.tracing.TraceEvent.Counter.series","location":"trace-encoder/com.squareup.tracing/-trace-event/-counter/series.html","searchKeys":["series","val series: Map<String, Number>","com.squareup.tracing.TraceEvent.Counter.series"]},{"name":"val snapshot: Any","description":"com.squareup.tracing.TraceEvent.ObjectSnapshot.snapshot","location":"trace-encoder/com.squareup.tracing/-trace-event/-object-snapshot/snapshot.html","searchKeys":["snapshot","val snapshot: Any","com.squareup.tracing.TraceEvent.ObjectSnapshot.snapshot"]},{"name":"val WorkflowViewStateRenderer: ViewStateRenderer","description":"com.squareup.workflow1.ui.radiography.WorkflowViewStateRenderer","location":"workflow-ui/radiography/com.squareup.workflow1.ui.radiography/-workflow-view-state-renderer.html","searchKeys":["WorkflowViewStateRenderer","val WorkflowViewStateRenderer: ViewStateRenderer","com.squareup.workflow1.ui.radiography.WorkflowViewStateRenderer"]}]